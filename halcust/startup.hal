//  VER: 7.1 71120450 (2013-10-13) - AG 2013-11-11 - upgraded
//  VER 6.4 64241500
event Startup
begin
  SetLangMode(LangEnglish, "SAF",0);
   

  Module("Just Enough (GMS)","", 730, modJE);//VN
  Module("PIM (GMS)", "", 731,modPIM); //RP
  Module("Intuendi (GMS)", "", 732,modItd); //RP

  Export("Catalog (GMS)","",CatalogEn,modItd);
  Export("Regions (GMS)","",RegionsEn,modItd);
  Export("Locations (GMS)","",LocationsEn,modItd);
  Export("Inventory (GMS)","",InventoryEn,modItd);
  Export("Suppliers (GMS)","",SuppliersEn,modItd);
  Export("Product Supplier (GMS)","",ProductSupplierEn,modItd);
  Export("Order Lines (GMS)","",OrderLinesEn,modItd);
  Export("Purchase Orders (GMS)","",PurchaseOrdersEn,modItd);
  Export("Purchase Order Lines (GMS)","",PurchaseOrderLinesEn,modItd);
  Export("Transfer Orders (GMS)","",TransferOrdersEn,modItd);
  Export("Transfer Order Lines (GMS)","",TransferOrderLinesEn,modItd);
  Export("Purchase Order Receipts (GMS)","",PurchaseOrderReceiptsEn,modItd);
  Export("Last Purchase Dates (GMS)","",LastPurchaseDatesEn,modItd);
  Export("Last Sold Dates (GMS)","",LastSoldDatesEn,modItd);
  Export("Transfering Params (GMS)","",TransferingParamsEn,modItd);
  
  Maintenance("Intuendi Data Files (GMS)",IntuendiVClass,IntuendiMn,modItd);


  //VN (Just Enough Exports)
  Export("Site.txt (GMS)",VNSiteEClass,SiteEn,modJE);//VN add done
  Export("ItemMaster.txt (GMS)",VNItemsEClass,ItemEn,modJE);//VN add done
  Export("Supplier.txt (GMS)",VNVEEClass,VEEn,modJE);//VN add done
  Export("Inventory.txt (GMS)",VNStockEClass,StockEn,modJE);//VN add done
  Export("InventoryGroup.txt (GMS)",VNStockGroupEClass,StockGroupEn,modJE);//VN add done
  Export("SupplierInventory.txt (GMS)",VNVEStockEClass,VEStockEn,modJE);//VN add done
  Export("Group1.txt (GMS)",VNStockINEClass,StockINEn,modJE);//VN add done
  Export("Group2.txt (GMS)",VNStockIN2EClass,StockIN2En,modJE);//VN add done
  Export("SalesHistory.txt - Choose Period (GMS)",VNSalesINEClass,SalesINEn,modJE);//VN add done
  Export("SalesHistory.txt - 6 Months Mandatory (GMS)",VNSales2INEClass,Sales2INEn,modJE);//VN add done
  Export("SalesHistory.txt - 14 Days Mandatory (GMS)",VNSales3INEClass,Sales3INEn,modJE);//VN add done
  Export("SupplierOrderHeader.txt (GMS)",VNVEORHeaderEClass,VEORHeaderEn,modJE);//VN add done
  Export("SupplierOrderLine.txt (GMS)",VNVEORLinesEClass,VEORLinesEn,modJE);//VN add done
  Export("SupplierReceipts.txt (GMS)",VNVEReceiptsEClass,VEReceiptsEn,modJE);//VN add done
  Export("CustomerOrderHeader.txt (GMS)",VNCUORHeaderEClass,CUORHeaderEn,modJE);//VN add done
  Export("CustomerOrderLine.txt (GMS)",VNCUORLinesEClass,CUORLinesEn,modJE);//VN add done
  Export("Customer.txt (GMS)",0,CUVcEn,modJE);//VN add done
  Export("StockMovHeaderEn.txt (GMS)",StockMovHeaderEClass,StockMovHeaderEn,modJE);//VN add done
  Export("StockMovLinesEn.txt (GMS)",StockMovLinesEClass,StockMovLinesEn,modJE);//VN add done
  Maintenance("JE Nightly Export (GMS)",VNNightlyVClass,NightlyMn,modJE);//VN add Done
  Maintenance("Nightly Maintenance (GMS)",HALNightlyVClass,HALNightlyMn,modJE);//RP
  //VN end
  Register("Inventory Export Rules (GMS)","Inventory Export Rules",InvExpRulesVc,modJE); //  AG 2013-06-05 - ORB001-130523-001
  Register("Broker (GMS)","Broker",BrokerVc,modSL); //  MDS GREG-9
  Register("ADOR Queue (GMS)","ADOR Queue",ADORQueueVc,modJSON); // RGS: HAL-940
  Register("ADOR Stock Movement Inbound Queue (GMS)","ADOR Inbound Queue",ADORInQVc,modJSON); // TM - Desk 5130 
  Register("ADOR Delivery Inbound Queue (GMS)","ADOR Delivery",ADORDelVc,modJSON); // TM - Desk 5130 
  Register("ADOR GRV Inbound Queue (GMS)","ADOR GRV",ADORGRVc,modJSON); // TM - Desk 5130 
  Register("Promotion Price Capture (GMS)","Promotion Prices",HALPromPrVc,modDI); // TM - Promotion Pricing 
  Register("Item Pictures (GMS)","Item Pics",HALPicVc,modSL); // TM - Item Pics
  Register("Engine Codes (GMS)","Engine Codes",EngineVc,modSO); // RP - Engines

  Export("FNB E-Banking Payment Export (GMS)",FNBEBankEClass,OPVcEn,modPL);
  Export("Items Export (GMS)",0,ItemsVcEn,modTC);
  Export("Purchase Items Export (GMS)",0,PIVcItemsVcEn,modTC);
  Export("Price Lists Export (GMS)",0,PriceListsEn,modTC);
  Export("Prices Export (GMS)",0,PriceEn,modTC);
  Export("Location Items Export (GMS)",0,LocationItemEn,modIN);
  Export("Items Export for Item Pictures (GMS)",0,ItemsHALPicVcEn,modTC);
  Export("Items Groups (GMS)",0,ItemsGroupVcEn,modTC);


  Import("Items Import - Excel (GMS)",0,HALINVcIn,modSL);
  Import("Items Import (GMS)",0,ItemsVcIn,modTC);
  Import("Purchase Items Import (GMS)",0,PIVcItemsVcIn,modTC);
  Import("Price Lists Import (GMS)",0,PriceListsIn,modTC);
  Import("Prices Import (GMS)",0,PriceIn,modTC);
  Import("Location Items Import (GMS)",0,LocationItemIn,modIN);
  Import("ABC's Import (GMS)",0,ABCsIn,modJE); //RP

  Setting("Location Item (GMS)",MinPerLocLClass,modIN);
  Setting("SmartView Companies (GMS)",SmartViewCompTClass,modInteg);//CliqView
  Setting("Reasons (GMS)",StandProblemLClass,modIN);
  Setting("Reason Limitation on Goods Receipt (GMS)",ReasonLimitGRLClass,modSY);
  Setting("Reason Limitation on Stock Depreciation (GMS)",ReasonLimitSDLClass,modSY);
  Setting("JE Settings (GMS)",JESettingsTClass,modJE);
  Setting("Last Sold Dates (GMS)",LastSoldDateLClass,modJE);  //  AG 2013-06-05 -- ORB001-130523-001
  Setting("Last Purchase Dates (GMS)",LastPurchaseDateLClass,modJE); 
  Setting("Stock Settings (GMS)",HALGMSStockSetTClass,modIN); // EVS: GREG-17
  Setting("General Settings (GMS)", HALSetTClass,modSY);//MDS GREG-9
  Setting("Local Delivery Drivers WP (GMS)",LocalDelDriversWPTClass,modInteg); //RP
  Setting("Brands (GMS)",BrandLClass,modPIM); //RP
  Setting("Item Brands (GMS)",INBrandLClass,modPIM); //RP

  Maintenance("Calculate Base Prices (GMS)",CalcBasePRVClass,CalcBasePRVcMn,modDI);
  Maintenance("Create Creation Date (GMS)",CreationDateVClass,CreationDateMn,modIN);
  //Maintenance("Create Location Items",CreateLocINVClass,CreateLocINMn,modIN);
  Maintenance("Delete Location Items (GMS)",DelLIVClass,DelLIVcMn,modIN);
  Maintenance("Add Location to Order (GMS)",AddLocORVClass,AddLocORMn,modIN);
  Maintenance("Create Last Sold Date Records (GMS)",CreateLSDVClass,CreateLSDMn,modJE); //  AG 2013-06-07 - ORB001-130523-001
  Maintenance("Create Last Purchase Date Records (GMS)",CreateLPDVClass,CreateLPDMn,modJE); // RP 16-10-23
  // Maintenance("Set Purchase Item Default Suppliers (GMS)",SetDefaultSupplierVClass,SetDefaultSupplierMn,modJE); // RP 16-10-23
  Maintenance("Recheck Payment Rows (GMS)",CheckOPVClass,CheckOPVcMn,modSY); //  JP: GREG-20
  Maintenance("Recheck Item Groups (GMS)",CheckITVClass,CheckITVcMn,modSY); //  JP: GREG-20
  Maintenance("Delete Record Histories (GMS)",RemoveAllRHistVClass,RemoveAllRHistMn,modDBMain); // kso HAL-876
  Maintenance("Send Goods receipts to ADOR (GMS)",SendPUToADORVClass,SendPUToADORMn,modJSON); // RGS: HAL-944
  Maintenance("Send Items to ADOR (GMS)",SendINToADORVClass,SendINToADORMn,modJSON); // RGS: HAL-943
  Maintenance("Attach PODs (GMS)",HALAttachPODsVClass,HALAttachPODsMn,modSL); // TM - PODs
  Maintenance("Update Prices with Promo Prices (GMS)",HALPromPrVClass,UpdatePricesMn,modDI); //TM - Item Pics 
  Maintenance("Remove Promo Prices from Prices (GMS)",HALPromPrRemVClass,RmPromoPriceMn,modDI); //TM - Item Pics
 // Maintenance("Delete ADORGRVc Records",ADORGRVClass,DeleteADORGRVMn,modDBMain); // TM -  

  Maintenance("Clear Blank Locations on Minimum Stock Levels (GMS)",FixMinPerLocVClass,FixMinPerLocMn,modJE); //TM - Item Pics

  Import("Import Payments (GMS)",0,CustomOPVcIn,modSY); //  JP: GREG-20

  Report("Base Price Forecast (GMS)",BPFRClass,BPForecastRn,0,modDI);
  Report("Duplicate Location Items (GMS)",DuplicateLIRClass,DuplicateLIRn,0,modIN);
  Report("Broker Activity Report (GMS)",BrokerLIRClass,BrokerActivityRn,0,modSO);
  Report("Purchase Order List (GMS)",POListRClass,POListRn,0,modPO); 
  Report("Outstanding Down Payments (GMS)",OustandingDownPaymentsRClass,OustandingDownPaymentsRn,0,modSO);
  Report("Sales Price Control POS",SalesPriceCheckPOSRClass,SalesPriceCheckPOSRn,0,modDI);
  Report("Sales Per Salesman (GMS)",IVPerSalesmanRClass,IVPerSalesmanRn,0,modSL);

  //DTC
  // Module("Data Conversion Toolkit (DCT)","DCT",730,modDCT); 
  // Maintenance("Delete Records",HalDelAllRecordsMClass,HalDelAllRecordMnDCT,modDCT);  
  // Import("Goods Receipts *",GoodsReceiptIn,GoodsReceiptIn,modDCT);
  // Import("Invoice History (Header) *",CustInvHistIn,CustInvHistIn,modDCT);
  // Import("Invoice History (Rows) *",CustInvHistRowIn,CustInvHistRowIn,modDCT);
  // Import("Loyalty Cards *",LoyaltyCardsIn,LoyaltyCardsIn,modDCT);
  // Import("Orders (Header) *",SalesOrderHeaderIn,SalesOrderHeaderIn,modDCT);
  // Import("Orders (Rows) *",SalesOrderRowsIn,SalesOrderRowsIn,modDCT);
  // Import("Purchase Orders (Header) *",PurchOrdHeaderIn,PurchOrdHeaderIn,modDCT);
  // Import("Purchase Orders (Rows) *",PurchOrdRowsIn,PurchOrdRowsIn,modDCT);
  // Import("Quotations (Header) *",QuoteHeaderIn,QuoteHeaderIn,modDCT);
  // Import("Quotations (Rows) *",QuoteRowsIn,QuoteRowsIn,modDCT);
  // Import("Recipes (BOM) * ",RecipeIn,RecipeIn,modDCT);
  // Import("Customer Open Invoices",0,CUINvIn,modDCT);
  // Import("Items",ItemIn,ItemIn,modDCT); 
  // Import("Customers",0,CUVcIn,modDCT);
  // Import("Suppliers",0,SuppliersVcIn,modDCT);
  // Import("Supplier Open Invoices",0,VEINvIn,modDCT); //Tendai IVVcOKFlagIn
  // Import("OK Opening Invoices",0,IVVcOKFlagIn,modDCT);

  // Register("Contacts","Contacts",CUVc,modDCT);
  // Register("Goods Receipts","Goods Receipts",PUVc,modDCT);
  // Register("Invoices","Invoices",IVVc,modDCT);
  // Register("Items","Items",INVc,modDCT);
  // Register("Orders","Orders",ORVc,modDCT);
  // Register("Purchase Orders","Purchase Orders",POVc,modDCT);
  // Register("Quotations","Quotations",QTVc,modDCT);
  // Register("Recipes","Recipes",RecVc,modDCT);
  // Setting("Routings",RoutingLClass,modDCT);
  // Setting("Registers Marked for Deletion",RegDelMarkTClass,modDCT);
  //END DCT 

  SString(23016, "Cannot be empty");
  SString(23017, "One Supplier only per Payment");
  SString(3100022, "Enter Valid Reason Code");
  SString(3100023, "Invalid Entry ");
  SString(3100024, "You do not have a valid Reason");
  SString(3100025, "Location Item Already Exist!");
  SString(3100027, "Record has been reconciled already, Please contact recon's administrator!");
  SString(3100028,"Sent quantity must match received quantity");//greg-4; edz
  SString(3100029,"Policy Number");//MDS GREG-9
  SString(3100030,"Claim Number");//MDS GREG-9
  SString(3100031,"Order Number");//MDS GREG-9
  SString(23018,"Invalid item number");
  
  SString(3100040,"Record has been locked by ADOR");//RGS: HAL-944
  SString(3100041,"You are not allowed to send records to ADOR");//RGS: HAL-944
  SString(3100042,"Record sent to ADOR. Check ADOR queue register");//RGS: HAL-944
  SString(3100044,"Stock Mov In sent to ADOR. Check ADOR queue register");//RGS: HAL-944
  SString(3100043,"\"Do not send to ADOR\" checkbox is ticked");//RGS: HAL-943

  StrSetAdd(3);
  StrSetText(ViewVatGoodsReceipt,"View VAT on Goods Receipt");
  StrSetText(UnOKStockMov,"UnOk Stock Movement");
  StrSetText(UnOKReconnedRecs,"UnOK Reconciled Records");
  StrSetText(ReprintPicking,"Allow Reprinting of Picking Slips"); //  AG 2013-02-13
  StrSetText(ReprintCashIV,"Allow Reprinting of Cash Invoices"); //  AG 2013-02-13
  StrSetText(SendToADOR,"Allow Sending of Records To ADOR");//RGS: HAL-944
  StrSetText(SendForDelivery,"Allow Dispatching of Delivery");//RP
  StrSetText(UnOKDownPayOrd,"UnOK Order with Downpayment");//RP
  // StrSetText(DuplicateSalesOrders,"Allow Duplicating of Sales Orders");//RP
  EndStrSet;

  SetBegin(4403);
  SetText(kKPITypeNone,"None");
  SetText(kKPITypeAR,"SL On Acc.");
  SetText(kKPITypeAP,"PL On Acc.");
  SetText(kKPITypeARDue,"SL Due");
  SetText(kKPITypeAPDue,"PL Due");
  SetText(100,"No. Orders");
  SetText(101,"Order Val");
  SetText(102,"No. Quotes");
  SetText(103,"Quoted Val");
  SetText(104,"Stock Qty");
  SetText(105,"Stock Val");
  SetText(106,"Sales Inc Vat");
  SetText(107,"Sales Exc Vat");
  SetText(108,"Cost");
  SetText(109,"GP");
  EndSet;

  // RGS: HAL-940
  SetBegin(900);
  SetText(0,"-");
  SetText(1,"Create");
  SetText(2,"Update");
  SetText(3,"Delete");
  EndSet;

  SetBegin(901);
  SetText(0,"-");
  SetText(1,"Queued");
  SetText(2,"Sent");
  SetText(3,"OK");
  SetText(4,"Error");
  EndSet;
  // :RGS

  //START OF S\L POS TOUCH SCREEN 
//   StrSetBegin(465);
// //  StrSetText(IVCashDClass,"POS Invoice");
//   StrSetText(NPTSIVCashDClass,"Touch Screen Invoice - POS");
//   StrSetText(RestAccDClass,"#Bar Tab#");
//   StrSetText(IVDClass,"Touch Screen Invoice - SL"); //TM Replaced Touch Screen 
//   EndStrSet;
  //END OF S\L POS TOUCH SCREEN 

  return;
end;
