//TM - DESK 5130 

remote updating procedure AddOneSHToADORQueue(record PUVc); 


global
updating function Boolean SHDClassADORLockedButtonAction(Integer wn,Integer value)
begin
  SHDClassADORLockedButtonAction = false;
  return;
end;

global
updating procedure SendSHToADORDsm()
begin
  record SHVc SHr;
  record RcVc RepSpec;
  Integer wn,i;

  wn = CurWindow;
  GetWindowRecord(wn,SHr);
  if (UserCanAction("SendToADOR",false)) then begin
    if ((WindowState(wn)==0)) then begin
      AddOneSHToADORQueue(SHr);
      MessageBox(3100042,"");
      PutWindowRecord(wn,SHr);
    end;  
  end else begin
    MessageBox(3100041,"");
  end;

  return;
end;
//:TM 

//TM - Updating the Delivered Quantities 
function Boolean SHDClassADORDelEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin
  
  record SHVc SHr; 
  row SHVc SHrw; 
  record ADORDelVc ADORDelr; 
  row ADORDelVc ADORDelrw; 
  boolean testf,oncef; 
  integer i,j,k,rwcnt,rwcnt2,rwcnt3,ship; 
  string 20 artcode;
  val rowtotal,vat,vatpercent; 
   
  testf = false; 
  oncef = false; 

  DeselectWindow(wn,false); 
  GetWindowRecord(wn,SHr); //take what's on the window and populate the SHVc record 
  
  ADORDelr.SerNr = SHr.ADORDel; 
  ADORDelr.RecordNr = SHr.SerNr; 
  
  if(ReadFirstMain(ADORDelr,1,true)) then begin 
    ADORDelr.RecordType = "ADORDel";
      if(ADORDelr.RecordNr == SHr.SerNr) then begin 
            if(ADORDelr.OKFlag == 0 and SHr.OKFlag == 0 and SHr.ADORLocked == 1 ) then begin  
              testf = true; 
            end; 
           
            if(testf) then begin 
                      rwcnt = MatRowCnt(SHr);
                      rwcnt2 = MatRowCnt(ADORDelr);
                      
                                for (i = 0; i < rwcnt; i = i + 1) begin //outer loop for register with many rows i.e. the SHVc
                                    MatRowGet(SHr, i, SHrw); //get row from record 
                                    oncef = false; //resets oncef  
                                    for(j=0; j<rwcnt2; j=j+1) begin //inner loop for register with fewer matrix rows 
                                          MatRowGet(ADORDelr, j, ADORDelrw);      
                                          
                                          if(SHrw.ArtCode == ADORDelrw.ArtCode) then begin
                                                oncef = true; //set oncef to true if we have a match 
                                                  SHrw.Ship = ADORDelrw.ADORQty; //update the SHVc quantity with Qty from ADOR 
                                                  MatRowPut(SHr,i,SHrw);  //Write to the SHr matrix 
                                                  PutWindowRecord(wn,SHr);      
                                          end; 
                                    end; 
                                      
                                    if(!oncef) then begin  //outside the inner loop because obviously the inner loop will be just for those that will be found in both registers 
                                        SHrw.Ship = 0; //set the quantities to 0 for those items that dont exist in the ADOR register 
                                        MatRowPut(SHr,i,SHrw); //write matrix row 
                                        PutWindowRecord(wn,SHr); //write record to window 
                                    end; 
                                end;  
                      
                      //-- calculating new totals 
                      SHr.TotQty = 0; 
                      rwcnt3 = MatRowCnt(SHr);
                  for (k = 0; k < rwcnt3; k = k + 1) begin
                        MatRowGet(SHr, k, SHrw); //get row from record 
                        SHr.TotQty = SHr.TotQty + SHrw.Ship; 
                        MatRowPut(SHr,k,SHrw);
                        PutWindowRecord(wn,SHr);
                  end; 
                      //----end of new totals calculation 

              

              end; 

              if(!testf) then begin 
                LogText(0,"Please make sure that the Delivery is already ADOR locked and that it is not already OKd "); 
              end; 

      end else begin 
        MessageBox(0,"Wrong ADOR Delivery Selected"); 
      end; 
        
  end;  //next end must be inside this 
    
  SHDClassADORDelEFAfter = true;
  return;
end; 
//TM 

//RP start
global
function Boolean SHDClassOKFlagButtonAction(Integer wn,Integer value)
BEGIN
  record SHVc SHr;
  row SHVc SHrw;
  record ORVc ORr;
  row ORVc ORrw;
  record INVc INr;
  Boolean res;
  Integer i, ii ,rwcnt, rwcnt2;

  res = inner.SHDClassOKFlagButtonAction(wn,value);

  GetWindowRecord(wn,SHr);
  rwcnt = MatRowCnt(SHr);

  ORr.SerNr = SHr.OrderNr;

  if(res) then begin
    if(ReadFirstMain(ORr,1,true)) then begin
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(SHr,i,SHrw);

        //check if delivery has zero quantity for item  

        if(SHrw.InStock == 0)then begin
          INr.Code = SHrw.ArtCode;
          if(ReadFirstMain(INr,1,true)) then begin
            if(INr.ItemType == kItemTypeStocked) then begin
              MessageBox(0,"WARNING!! Cannot deliver zero for item " & SHrw.ArtCode & " " & SHrw.Spec);
              res = true;
              // goto LSHDClassOKFlagButtonAction;
            end;
          end;
        end;

        //Check if order quantity greater than delivery quantity

        rwcnt2 = MatRowCnt(ORr);
        for (ii=0;ii<rwcnt2;ii=ii+1) begin
          MatRowGet(ORr,ii,ORrw);
          INr.Code = ORrw.ArtCode;
          if(ReadFirstMain(INr,1,true)) then begin
            if(INr.ItemType == kItemTypeStocked) then begin
              if(SHrw.ArtCode == ORrw.ArtCode and SHrw.Ship < ORrw.Quant) then begin
                MessageBox(0,"WARNING!! Order quantity greater than delivered quantity " & SHrw.ArtCode & " " & SHrw.Spec);
                res = true;
                // goto LSHDClassOKFlagButtonAction;
              end;
            end;
          end;
        end;
      end;
    end;
  end;

  // LSHDClassOKFlagButtonAction:;
  SHDClassOKFlagButtonAction = res;
  RETURN;
END;
//RP end

//TM - Desk 5130 
global
updating function Boolean SHDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "ADORDel": res = SHDClassADORDelEFAfter(wn,rownr,changed!=0);  //  TM
    otherwise res = inner.SHDClassAfterEditField(wn,fieldname,fn,rownr,changed);
  end;

  SHDClassAfterEditField = res;
  return;
end;
