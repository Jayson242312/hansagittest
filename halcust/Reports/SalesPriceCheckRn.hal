external inner procedure HTLocations(string, string, var string);
external inner function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
remote inner function Boolean IVCashVc_PasteArtCode(var record IVCashVc,Integer,Boolean,var string,var Integer);
external inner procedure HT2Per(Date, Date , var string);

global
procedure SalesPriceCheckPOSRn(record RcVc RepSpec)
BEGIN
  record IVCashVc IVCashr,IVCashtemp,IVCashr2;
  record INVc INr;
  row IVCashVc IVCashrw,IVCashtemprw,IVCashrw2;
  Integer rw,rwcnt,i,tempivCashrwcnt;
  String 255 tstr, inwarning;
  String 50 keystr;
  Boolean TrHs,testf,rowsok;
  longint CurSerial;
  val disc,discp;
  Integer sernrf;
  
  CurSerial = 0;
  RecordNew(IVCashtemp);
 
  StartReportJob(USetStr(17200));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if(nonblank(RepSpec.f1))then begin
    HTLocations(RepSpec.f1,RepSpec.f1,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if(RepSpec.flags[1]==1) then begin
    tstr = USetStr(17201);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  StartFormat(15);
  OutString(0,0,USetStr(17202),false);
  OutString(55,0,USetStr(17203),false);
  OutString(105,0,USetStr(17204),false);
  OutString(240,0,USetStr(17205),true);
  OutString(300,0,USetStr(17206),true);
  OutString(360,0,USetStr(17207),true);
  OutString(420,0,USetStr(17208),true);
  OutString(1,0,USetStr(17209),true);
  EndFormat;
  Gray_Divider(0,1);
  IVCashr.SerNr = -1;
  TrHs = true;
  IVCashr.InvDate = RepSpec.sStartDate;
  while (LoopKey("InvDate",IVCashr,2,TrHs)) begin
      testf = true;
      if((nonblank(RepSpec.f1))and(IVCashr.Location <> RepSpec.f1)) then begin
        testf = false;
      end;
      if(IVCashr.InvDate > RepSpec.sEndDate) then begin
        TrHs = false;
        testf = false;
      end;
      if (testf) then begin
        rwcnt = MatrowCnt(IVCashr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(IVCashr,i,IVCashrw);
          if (IVCashrw.stp == kInvoiceRowTypeNormal) or (IVCashrw.stp==kInvoiceRowTypeStructuredItemComponent) then begin
            RecordCopy(IVCashr2,IVCashr);
            rowsok = true;
            if (IVCashVc_PasteArtCode(IVCashr2,i,false,inwarning,sernrf)) then begin    
              if (ReadFirstItem(IVCashrw.ArtCode,INr,true,false)) then begin
              end;
              MatRowGet(IVCashr2,i,IVCashrw2);
              rowsok = false;
              if (IVCashrw2.Price==IVCashrw.Price) then begin
                rowsok = true;
              end;
            end;
            if (rowsok==false) then begin
              disc = IVCashrw.Price - IVCashrw2.Price;
              if(IVCashrw.Price > IVCashrw2.Price) then begin
                discp = (IVCashrw.Price/IVCashrw2.Price)*100;
              end else begin
                discp = 100-((IVCashrw.Price/IVCashrw2.Price)*100);
              end;
              if(RepSpec.flags[1]==1)then begin
                // DiscSort(IVCashtemp, IVCashr.SerNr, INr.Code, IVCashrw.Spec, IVCashrw.Price, INr.UPrice1,IVCashrw2.Price, discp, disc);
              end else begin
                StartFormat(15);
                if(IVCashr.SerNr <> CurSerial) then begin
                  OutString(0,"DblIVCashVc",IVCashr.SerNr,false);
                end;
                OutString(55,"DblINVc",INr.Code,false);
                OutString(105,0,IVCashrw.Spec,false);
                OutString(240,0,IVCashrw.Price,true);
                OutString(300,0,INr.UPrice1,true);
                OutString(360,0,IVCashrw2.Price,true);
                OutString(420,0,discp,true);
                OutString(1,0,disc,true);
                EndFormat;
                CurSerial = IVCashr.SerNr;
              end;
            end;
          end;
        end;
      end;
  end;
  if(RepSpec.flags[1]==1) then begin
    tempivCashrwcnt = MatRowCnt(IVCashtemp);
    for (i=0;i<tempivCashrwcnt;i=i+1) begin
      MatRowGet(IVCashtemp,i,IVCashtemprw);
      StartFormat(15);
      OutString(0,"DblIVCashVc",IVCashtemprw.OrdRow,false);
      OutString(55,"DblINVc",IVCashtemprw.ArtCode,false);
      OutString(105,0,IVCashtemprw.Spec,false);
      OutString(240,0,IVCashtemprw.Price,true);
      OutString(300,0,IVCashtemprw.Sum,true);
      OutString(360,0,IVCashtemprw.BasePrice,true);
      OutString(420,0,IVCashtemprw.vRebate,true);
      OutString(1,0,IVCashtemprw.rowGP,true);
      EndFormat;
    end;
  end;
  EndJob;
  RETURN;
END;

