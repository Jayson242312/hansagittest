//  VER: 7.1 71120450 (2013-10-13) - AG 2013-11-11 - upgraded
//  6.4 64241500
//  Custom Windows

external inner function Boolean HasModProd();
external inner function Boolean HasItemGroups();
external inner function Boolean HasItemClassification();
external inner function Boolean HasMultiLocations();
external inner function Boolean IsEnterprise();
external inner function Boolean HasSerialNumbers();
external inner function string 255 MasterBannerURL();
external inner function Boolean HasEMail();
external inner function Boolean HasModExp();
external inner function Boolean HasModSO();
external inner function Boolean HasModCheck();
external inner function Boolean HasModCL();
external inner function Boolean HasModAT2();
external inner function Boolean HasModCRM();
external inner function Boolean HasModPL();
external inner function Boolean HasModNL();
external inner function Boolean HasModIN();
external inner function Boolean HasModSL();
external inner function Boolean HasModPO();
external inner function Boolean HASMODTS();
external inner function Boolean StandardHansa();
external inner function Boolean HasModPOS();
external inner function Boolean HasStandardCRM();

window JESettingsTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("JE Settings",JESettingsTClass,CGSbl,BackupType);
  SetWRect(64,80,500,185);
  SetBlid(JEBlock);
  v = 20; vs = 25; h = 130; h2 = 330;
  ButtonFrame(20,v,270,4,"Daily Just Enough Exports Settings");
  EditField(h,v+=20,250,"Save to Path1:",Normal,Path,false,0);
  EditField(h,v+=20,250,"Save to Path2:",Normal,Path2,false,0);
  EditField(h,v+=20,80,"Months:",Normal,Months,false,0);
  //Checkbox(h-5,v+=50,1,"Auto-Save JE Exports",AutoRun);
  EndWindow;
end;

//CliqView
window SmartViewCompTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;

  WindowBegin("SmartView Companies",SmartViewCompTClass,CGHbl,HBlRecType);
  SetBlid(SmartViewCompBlock);
  SetWRect(20,80,532,298);
  h = 20; v = 27;
  MatrixBegin(h,v,-20,v+171,SmartViewCompRowType,99);
  MatCol(1,24,"Code",0,CompCode,false,0);
  MatCol(1,91,"Name",0,CompName,false,0);
  EndMatrix;
  EndWindow;
end;
  //End

window ReasonLimitGRDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Reason Limitation on Goods Receipt",ReasonLimitGRDClass,CGview,-);
  SetWRect(64,73,509,240);
  UseView(ReasonLimitGRVc);
  v = 10; vs = 20; h = 100;
  EditField(h,v, 100,     "User",Normal,UserCode,false,UserSClass);
  EditField(h,v+=vs ,100,"Name",Normal,UserName,false,0);
  EditField(h,v+=vs ,100,"Reasons",Normal,Reasons,false,StandProblemsSClass);
  EndWindow;
end;

window ReasonLimitGRLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Reason Limitation on Goods Receipts",ReasonLimitGRLClass,CGmlist,-);
  SpawnClass(ReasonLimitGRDClass);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(ReasonLimitGRVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"User",UserCode,false,UserCode);
  RlCol(75,75, "Name",UserName,false);
  RlCol(75,175, "Reasons",Reasons,false);
  SearchField("Search");
  EndWindow;
end;

window ReasonLimitSDDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Reason Limitation on Stock Depreciation",ReasonLimitSDDClass,CGview,-);
  SetWRect(64,73,509,240);
  UseView(ReasonLimitSDVc);
  v = 10; vs = 20; h = 100;
  EditField(h,v, 100,     "User",Normal,UserCode,false,UserSClass);
  EditField(h,v+=vs ,100,"Name",Normal,UserName,false,0);
  EditField(h,v+=vs ,100,"Reasons",Normal,Reasons,false,StandProblemsSClass);
  EndWindow;
end;

window ReasonLimitSDLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Reason Limitation on Stock Depreciation",ReasonLimitSDLClass,CGmlist,-);
  SpawnClass(ReasonLimitSDDClass);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(ReasonLimitSDVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"User",UserCode,false,UserCode);
  RlCol(75,75, "Name",UserName,false);
  RlCol(75,175, "Reasons",Reasons,false);
  SearchField("Search");
  EndWindow;
end;

window VNNightlyVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Run JE Nightly Export",VNNightlyVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  StaticText(h=50,v+=20,"This Export Will Run And Save All Just Enough Exports",false);
  EndWindow;
end;

window CreationDateVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Create Creation Date",CreationDateVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  v = 6; vs = 20; h = 140;
  EditFieldTL(h,v, 150,"Date",   M4Date,Normal,0,RegDate,false,PasteCurDate);
  EndWindow;
end;

window CreateLocINVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Create Location Items",CreateLocINVClass,CGMnt,RcType);
  SetWRect(20,80,300,200);
  v = 6; vs = 20; h = 80;
  EditFieldTL(h,v, 80,"Location",   M4Code,Normal,50,f1,false,LocationSClass);
  EndWindow;
end;

window AddLocORVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Specify Add Location To Order",AddLocORVClass,CGMnt,RcType);
  SetWRect(20,80,300,200);
  v = 6; vs = 20; h = 80;
  EditFieldTL(h,v, 80,"Order No.",   M4Str,Normal,50,f1,false,ORSClass);
  //EditFieldTL(h,v+=20,150,"Orders",M4Str,Normal,41,f1,false,ORSClass);
  EditFieldTL(h,v+=20, 80,"Location",   M4Str,Normal,50,f3,false,LocationSClass);
  //EditFieldTL(h,v+=20,150,"Locations",M4Str,Normal,21,f3,false,LocationSClass);
  EndWindow;
end;

// window CalcBasePRVClass:1
//   wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
// begin
//   real h,h2,v,vs;

//   WindowBegin("Specify Calculate Base Prices",CalcBasePRVClass,CGMnt,RcType);
//   SetWRect(20,80,200,200);
//   //EditFieldTL(h=100,v=16,50,"Price Coefficient",M4Val,Normal,0,vals0,false,0);
//   EndWindow;
// end;

window OPSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Paste Payments",OPSClass,CGslist,-);
  SetWRect(20,80,529,307);
  Sizeable(-1,-1,0,0);
  SpawnClass(OPDClass);
  UseView(OPVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,1,      "No.",SerNr,false,SerNr);
  RlColKey(84,79,    "Ord.",OrderedFlag,false,OrderedFlag);
  RlColKey(121,116,  "OK",DoneFlag,false,DoneFlag);
  RlColKey(151,151,  "Trans. Date",TransDate,false,TransDate);
  RlColKey(231,231,"Reference",PayNumber,false,PayNumber);
  RlColKey   (-131,-131,"Sum",CurPayVal,true,CurPayVal);
  RlCol   (-30,-30,"Cur",PayCurCode,true);
  RlCol(-1,-1,"",Invalid,true);
  SearchField("Search");
  SpecialMenu("Order",'B',0,"OrderOPLsm");
  SpecialMenu("OK",'G',1,"OKOPLsm");
  SpecialMenu("Create Payments Suggestion",' ',2,"OPSuggOPLsm");
  // SpecMenuItem("Create Withholding Rows",' ',3);
  // SpecMenuItem("Payment Transfer",' ',4); no code
  SpecialMenu("E-Payment Status",' ',5,"EPaymentStatusOPLsm");
  EndWindow;
end;

window BPFRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Specify BasePrice Forecast",BPFRClass,CGRcW,RcType);
  SetWRect(20,80,400,150);
  v = 20; vs = 25; h = 130; h2 = 330;
  PeriodField(h=100,v+=20,"Period");
  //RP - Filter by item group
  if (HasItemGroups) then begin
    EditFieldTL(h,v+=20, 150,"Item Group",M4UStr,Normal,11,f3,false,ITSClass);
  end;
  // RP End filter by group

  //EditFieldTL(h,v+=vs, 150,"Shelf Code",   M4UStr,Normal,50,f2,false,0);
  EndWindow;
end;

window DuplicateLIRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Specify Duplicate Location Items",DuplicateLIRClass,CGRcW,RcType);
  SetWRect(20,80,400,150);
  v = 20; vs = 25; h = 130; h2 = 330;
  EndWindow;
end;

window DelLIVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Delete Location Items",DelLIVClass,CGMnt,RcType);
  SetWRect(20,93,260,200);
  v=0; vs=20; h=100;
  EditFieldTL(h,v+=20,82,"Item",M4Str,Normal,100,f1,false,INSClass);
  EditFieldTL(h,v+=20,82,"Location",M4Str,Normal,100,f2,false,LocationSClass);
  v = v+12; h=20;
  EndWindow;
end;

//  AG 2013-06-05 -- ORB001-130523-001 -- Inventory Export Rules  >>
window InvExpRulesDClass:2
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vs,tilenr;

  WindowBegin("Inventory Export Rule",InvExpRulesDClass,CGview,-);
  SetWRect(64,80,450,470);
  Sizeable(-1,-1,0,0);
  UseView(InvExpRulesVc);
  v = 10; vs = 20; h = 80;
  EditFieldTL(h,v,82,"Location",M4Code,Normal,10,Location,false,LocationSClass);
  CheckBox(h=(h-50),v+=vs,0,"Exclude items with 0 QTY and no sales",ExclNoSales);
  StaticText(h+3,v+=(vs+10),"Specify item groups to be excluded for this location",false);
  v = 80;
  MatrixBegin(h,v,-44,-6,-,99);
  MatCol(1,24,"Item Group",0,Group,false,ITSClass);
  MatCol(1,84,"Description",0,Description,false,0);
  EndMatrix;
  EndWindow;
end;

window InvExpRulesLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Inventory Export Rules",InvExpRulesLClass,CGmlist,-);
  SpawnClass(InvExpRulesDClass);
  SetWRect(20,80,450,298);
  Sizeable(-1,-1,0,0);
  UseView(InvExpRulesVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Location",Location,false,Location);
  RlColKey(150,150,"Excl.",ExclNoSales,false,ExclNoSales);
  SearchField("Search");
  EndWindow;
end;
//  AG 2013-06-05 <<

//  AG 2013-06-05 -- ORB001-130523-001 -- Last Sold Date  >>
window LastSoldDateDClass:2
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vs,tilenr;

  WindowBegin("Last Sold Date",LastSoldDateDClass,CGview,-);
  SetWRect(64,80,450,470);
  UseView(LastSoldDateVc);
  v = 10; vs = 20; h = 80;
  EditFieldTL(h,v,82,"Location",M4Code,ViewOnly,10,Location,false,LocationSClass);
  EditFieldTL(h,v+=vs,150,"Item",M4Code,ViewOnly,20,ItemCode,false,INSClass);
  EditFieldTL(h,v+=vs,82,"Date",M4Date,ViewOnly,10,LastDate,false,PasteCurDate);
  EndWindow;
end;

window  LastSoldDateLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Last Sold Dates",LastSoldDateLClass,CGmlist,-);
  SpawnClass(LastSoldDateDClass);
  SetWRect(20,80,450,298);
  Sizeable(-1,-1,0,0);
  UseView(LastSoldDateVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Location",Location,false,MainKey);
  RlColKey(150,150,"Item",ItemCode,false,ItemCode);
  RlColKey(-80,-80,"Date",LastDate,false,LastDate);
  SearchField("Search");
  EndWindow;
end;
//  AG 2013-06-05 <<

//  RP 16-10-2023 -- 
window LastPurchaseDateDClass:2
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vs,tilenr;

  WindowBegin("Last Purchase Date",LastPurchaseDateDClass,CGview,-);
  SetWRect(64,80,450,470);
  UseView(LastPurchaseDateVc);
  v = 10; vs = 20; h = 80;
  EditFieldTL(h,v,82,"Item",M4Code,ViewOnly,20,ItemCode,false,INSClass);
  EditFieldTL(h,v+=vs,150,"Supplier",M4Code,ViewOnly,10,VECode,false,VESClass);
  EditFieldTL(h,v+=vs,82,"Date",M4Date,ViewOnly,10,LastDate,false,PasteCurDate);
  EndWindow;
end;

window LastPurchaseDateLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Last Purchase Dates",LastPurchaseDateLClass,CGmlist,-);
  SpawnClass(LastPurchaseDateDClass);
  SetWRect(20,80,450,298);
  Sizeable(-1,-1,0,0);
  UseView(LastPurchaseDateVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Item",ItemCode,false,ItemCode);
  RlColKey(150,150,"Supplier",VECode,false,VECode);
  RlColKey(-80,-80,"Date",LastDate,false,LastDate);
  SearchField("Search");
  EndWindow;
end;
//  RP 16-10-2023 <<

//  AG 2013-06-07 -- ORB001-130523-001 -- Maint to create Last Sold Date Records  >>
window  CreateLSDVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Create Last Sold Date Records",CreateLSDVClass,CGMnt,RcType);
  SetWRect(20,93,350,200);
  PeriodField(130,12,"Period for Invoices");
  EndWindow;
end;
//  AG 2013-06-07 <<

//  RP 16-10-23 -- ORB001-130523-001 -- Maint to create Last Sold Date Records  >>
window  CreateLPDVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Create Last Purchase Date Records",CreateLPDVClass,CGMnt,RcType);
  SetWRect(20,93,350,200);
  PeriodField(130,12,"Period for Goods Reciepts");
  EndWindow;
end;
//  RP 16-10-23 <<

//  RP 16-10-23 -- ORB001-130523-001 -- Maint to create Last Sold Date Records  >>
// window  SetDefaultSupplierVClass:1
//   wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
// begin
//   WindowBegin("Set Purchase Item Default Supplier",SetDefaultSupplierVClass,CGMnt,RcType);
//   SetWRect(20,93,350,200);
//   EndWindow;
// end;
//  RP 16-10-23 <<

// EVS: GREG-17
window HALGMSStockSetTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("GMS - Stock Settings",HALGMSStockSetTClass,CGSbl,BackupType);
  SetWRect(64,80,500,185);
  SetBlid(HALGMSStockSetBlock);
  v = 20; vs = 25; h = 90; h2 = 220;
  StaticText(h,v+=20,"Shelf Codes on Item Labels:",false);
  EditField(h,v+=20,80,"Location 1",Normal,ShelfLoc1,false,LocationSClass);
  EnterSkip(ShelfLoc2);
  EditField(h2,v,-20,"Name",ViewOnly,ShelfLoc1Name,false,0);
  EditField(h,v+=20,80,"Location 2",Normal,ShelfLoc2,false,LocationSClass);
  EnterSkip(ShelfLoc1);
  EditField(h2,v,-20,"Name",ViewOnly,ShelfLoc2Name,false,0);
  Checkbox(h,v+=vs,0,"Sent and Received Quant. must be equal(Stock mov.)",SMSentRecFlag);//greg-4; edz
  EndWindow;
end;
// :EVS

//JP: GREG-20
window CheckOPVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("GMS - Recheck Payment Rows",CheckOPVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  StaticText(h=50,v+=20,"Maintenance will delete rows with '0' items",false);
  EndWindow;
end;

window CheckITVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("GMS - Recheck Item Groups",CheckITVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  StaticText(h=50,v+=20,"Maintenance will delete rows with corrupted item group texts",false);
  EndWindow;
end;
//:JP

//MDS: GREG-9
window HALGMSGenSetTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("GMS - General Settings",HALGMSGenSetTClass,CGSbl,BackupType);
  SetWRect(64,80,500,185);
  SetBlid(HALGMSGenSetBlock);
  v = 20; vs = 25; h = 200; h2 = 220;
  EditField(h,v+=20,180,"Customer Categories for Claims",Normal,HALGMSGeCat,false,0);
  EndWindow;
end;

window BrokerLIRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Broker Activity",BrokerLIRClass,CGRcW,RcType);
  UseView(RCVc);
  SetWRect(20,80,400,150);
  v = 20; vs = 25; h = 130; h2 = 330;
  PeriodField(h=100,v+=20,"Period");
  EditField(h,v+=20,250,"Location ",Normal,d1Code,false,LocationSClass);
  EditField(h,v+=20,250,"Customer",Normal,d2Code,false,CUSClass);
  EditField(h,v+=20,250,"Broker",Normal,long1,false,BrokerSClass);
  ButtonFrame(h,v+=40,250,3,"Mode");
    RadioButton(h,v,0,1,"Both",flags[0]);
    RadioButton(h,v+=16,1,0,"Invoiced",flags[0]);
    RadioButton(h,v+=16,2,0,"Not-invoiced",flags[0]);
  
  //EditField(h,v+=20,180,"",Normal,,false,0);
  EndWindow;
end;
//:MDS

window BrokerSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste Asset #N/L# Class",BrokerSClass,CGslist,-); //MDS: GREG-9 
  SetWRect(240,80,470,298);
  Sizeable(-1,-1,0,0);
  UseView(BrokerVc); 
  SpawnClass(BrokerDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Nr.",BrNumber,false,BrNumber);
  RlColKey(60,60,"Name",BrName,false,BrName);
  //RlColKey(4,4,"Kods",Code,false,Code);
  //RlCol(125,125, "Nosaukums",Comment,false);//VITO: CK-274;
  SearchField("Search");
  //StringList(9,9,206,209);
  EndWindow;
end; //:MDS

window BrokerDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Broker",BrokerDClass,CGview,-);
  SetWRect(64,80,579,200);
  UseView(BrokerVc);
  EditField(h=100,v=6,50,"Broker Number",Normal,BrNumber,false,0);
  EditField(h,v+=20,300,"Broker Name",Normal,BrName,false,0);
  EndWindow;
end;

window BrokerLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Brokers",BrokerLClass,CGmlist,-);
  SpawnClass(BrokerDClass);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(BrokerVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Nr.",BrNumber,false,BrNumber);
  RlColKey(60,60,"Name",BrName,false,BrName);
  SearchField("Search");
  EndWindow;
end;

window RemoveAllRHistVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,v2,vs,vm,h,h1,h2,h3,h4,l;
  
  h = 90;
  WindowBegin("GMS - Delete Record History",RemoveAllRHistVClass,CGmnt,RcType);
  SetWRect(20,80,450,200); h = 120; v = 6; vs = 20;
  PeriodField(h,v=6,"Period");
  EditField(h,v+=vs,100,"Register Vc code",Normal,f1,false,0);
  StaticText(120,v+=50,"WARNING! This will remove record history permanently.",false);
  EndWindow;
end;

// RGS: HAL-940
window ADORQueueLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("ADOR Queue",ADORQueueLClass,CGmlist,-);
  SpawnClass(ADORQueueDClass);
  SetWRect(20,80,890,298);
  Sizeable(-1,-1,0,0);
  UseView(ADORQueueVc);
  RecordList(4,17,-21,-39);
  RlColKey(h=4,h,"Nr.",SerNr,false,SerNr);
  RlColKey(h+=125,h,"Register",RegisterCode,false,RegisterCode);
  RlColKey(h+=145,h,"Record Nr.",RecordNumber,false,RecordNumber);
  RlColKey(h+=185,h,"Date",CreationDate,false,CreationDate);
  RLCol(-285,-285,"Operation",Operation,true);
  RLCol(-125,-125,"Status",Status,false);
  SearchField("Search");
  EndWindow;
end;

window ADORQueueDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vs;
  WindowBegin("ADOR Queue",ADORQueueDClass,CGview,-);
  SetWRect(20,80,550,650);
  Sizeable(-1,-1,0,0);
  UseView(ADORQueueVc);
  h = 100; h2 = 270; h3 = 440; v = 6; vs = 20;
  EditField(h,v,60,"Nr.",Normal,SerNr,false,0);
  EditField(h2,v,60,"Register",Normal,RegisterCode,false,0);
  EditField(h3,v,100,"Record Nr.",Normal,RecordNumber,false,0);
  EditField(h,v+=vs,80,"Date",Normal,CreationDate,false,PasteCurDate);
  EditField(h,v+=vs,80,"Time",Normal,CreationTime,false,PasteCurTime);
  EditField(h2,v=26,50,"Operation",Normal,Operation,false,SetSClass);
  EditField(h3,v,50,"Status",Normal,Status,false,SetSClass);
  MatrixBegin(27,v+=60,-21,-20,-,99);
  MatCol(1,24,"Operation",0,Operation,false,SetSClass);
  MatCol(1,100,"LogDate",0,LogDate,false,0);
  MatCol(1,200,"LogTime",0,LogTime,false,0);
  MatCol(1,-350,"Details",0,Details,false,0);
  EndMatrix;
  EndWindow;
end;
//:RGS

//TM - DESK 5130 

window ADORInQLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("ADOR Inbound Queue",ADORInQLClass,CGmlist,-);
  SpawnClass(ADORInQDClass);
  SetWRect(20,80,890,298);
  Sizeable(-1,-1,0,0); 
  UseView(ADORInQVc);
  RecordList(4,17,-21,-39);
  RlColKey(h=4,h,"Nr.",SerNr,false,SerNr);
  RLColKey(h+=125,h,"OK",OKFlag,false,OKFlag);
  RlColKey(h+=130,h,"RecordType",RecordType,false,RecordType);
  RlColKey(h+=150,h,"RecordNr",RecordNr,false,RecordNr);
  RlColKey(h+=170,h,"Date",TransDate,false,TransDate);
  SearchField("Search");
  EndWindow;
end;

//TM - Desk 5130 - ADOR GRV 
window ADORGRLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("ADOR GRV Inbound Queue",ADORGRLClass,CGmlist,-);
  SpawnClass(ADORGRDClass);
  SetWRect(20,80,890,298);
  Sizeable(-1,-1,0,0); 
  UseView(ADORGRVc);
  RecordList(4,17,-21,-39);
  RlColKey(h=4,h,"Nr.",SerNr,false,SerNr);
  RLColKey(h+=125,h,"OK",OKFlag,false,OKFlag);
  RlColKey(h+=130,h,"RecordType",RecordType,false,RecordType);
  RlColKey(h+=150,h,"RecordNr",RecordNr,false,RecordNr);
  RlColKey(h+=170,h,"Date",TransDate,false,TransDate);
  SearchField("Search");
  EndWindow;
end;

window ADORGRDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vb,h3,h2,h4; 

  h = 100; h2 = 270; h3 = 440; h4=610; v = 6; vs = 20;
  
  WindowBegin("ADOR GRV Inbound Queue",ADORGRDClass,CGview,-);
  SetWRect(20,80,550,650);
  Sizeable(-1,-1,0,0);
  UseView(ADORGRVc);
  EditField(h,v,60,"Nr.",Normal,SerNr,false,0); 
  EditField(h2,v,60,"RecordNr",Normal,RecordNr,false,0); 
  EditField(h3,v,80,"Date",Normal,TransDate,false,PasteCurDate);
  CheckBox(h4,v,100,"OK",OKFlag); 
  EditField(h,v+30,120,"RecordType",Normal,RecordType,false,0);
  MatrixBegin(27,v+=90,-21,-20,-,99);
  MatCol(1,24,"Item",0,ArtCode,false,INSClass);
  MatCol(1,100,"Name",0,ItemName,false,0);
  //MatCol(1,200,"OrderQty",0,Qty,false,0);
  MatCol(1,200,"ADORQty",0,ADORQty,false,0);
  EndMatrix;
  EndWindow;
end;

window ADORGRSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("ADOR GRV Inbound Queue",ADORGRSClass,CGslist,-);
  SpawnClass(ADORGRDClass);
  SetWRect(20,80,890,298);
  Sizeable(-1,-1,0,0);
  UseView(ADORGRVc);
  RecordList(4,17,-21,-39);
  RlColKey(h=4,h,"Nr.",SerNr,false,SerNr);
  RLColKey(h+=125,h,"OK",OKFlag,false,OKFlag);
  RlColKey(h+=130,h,"RecordType",RecordType,false,RecordType);
  RlColKey(h+=150,h,"RecordNr",RecordNr,false,RecordNr);
  RlColKey(h+=170,h,"Date",TransDate,false,TransDate);
  SearchField("Search");
  EndWindow;
end;

//end of ADOR GRV 

//TM - Desk 5130 Delivery  - Inbound means from ADOR to Hansa. 
window ADORDelLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("ADOR Delivery Inbound Queue",ADORDelLClass,CGmlist,-);
  SpawnClass(ADORDelDClass);
  SetWRect(20,80,890,298);
  Sizeable(-1,-1,0,0); 
  UseView(ADORDelVc);
  RecordList(4,17,-21,-39);
  RlColKey(h=4,h,"Nr.",SerNr,false,SerNr);
  RLColKey(h+=125,h,"OK",OKFlag,false,OKFlag);
  RlColKey(h+=130,h,"RecordType",RecordType,false,RecordType);
  RlColKey(h+=150,h,"RecordNr",RecordNr,false,RecordNr);
  RlColKey(h+=170,h,"Date",TransDate,false,TransDate);
  SearchField("Search");
  EndWindow;
end;

window ADORDelDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vb,h3,h2,h4; 

  h = 100; h2 = 270; h3 = 440; h4=610; v = 6; vs = 20;
  
  WindowBegin("ADOR Delivery Inbound Queue",ADORDelDClass,CGview,-);
  SetWRect(20,80,550,650);
  Sizeable(-1,-1,0,0);
  UseView(ADORDelVc);
  EditField(h,v,60,"Nr.",Normal,SerNr,false,0); 
  EditField(h2,v,60,"RecordNr",Normal,RecordNr,false,0); 
  EditField(h3,v,80,"Date",Normal,TransDate,false,PasteCurDate);
  CheckBox(h4,v,100,"OK",OKFlag); 
  EditField(h,v+30,120,"RecordType",Normal,RecordType,false,0);
  MatrixBegin(27,v+=90,-21,-20,-,99);
  MatCol(1,24,"Item",0,ArtCode,false,INSClass);
  MatCol(1,100,"Name",0,ItemName,false,0);
  //MatCol(1,200,"OrderQty",0,Qty,false,0);
  MatCol(1,200,"ADORQty",0,ADORQty,false,0);
  EndMatrix;
  EndWindow;
end; 

window ADORDelSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("ADOR Delivery Inbound Queue",ADORDelSClass,CGslist,-);
  SpawnClass(ADORDelDClass);
  SetWRect(20,80,890,298);
  Sizeable(-1,-1,0,0);
  UseView(ADORDelVc);
  RecordList(4,17,-21,-39);
  RlColKey(h=4,h,"Nr.",SerNr,false,SerNr);
  RLColKey(h+=125,h,"OK",OKFlag,false,OKFlag);
  RlColKey(h+=130,h,"RecordType",RecordType,false,RecordType);
  RlColKey(h+=150,h,"RecordNr",RecordNr,false,RecordNr);
  RlColKey(h+=170,h,"Date",TransDate,false,TransDate);
  SearchField("Search");
  EndWindow;
end;
//end of delivery 



window ADORInQDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vb,h3,h2,h4; 
  h = 100; h2 = 270; h3 = 440; h4=610; v = 6; vs = 20;
  
  WindowBegin("ADOR Inbound Queue",ADORInQDClass,CGview,-);
  SetWRect(20,80,550,650);
  Sizeable(-1,-1,0,0);
  UseView(ADORInQVc);
  EditField(h,v,60,"Nr.",Normal,SerNr,false,0); 
  EditField(h2,v,60,"RecordNr",Normal,RecordNr,false,0); 
  EditField(h3,v,80,"Date",Normal,TransDate,false,PasteCurDate);
  CheckBox(h4,v,100,"OK",OKFlag); 
  EditField(h,v+30,120,"RecordType",Normal,RecordType,false,0);
  MatrixBegin(27,v+=90,-21,-20,-,99);
  MatCol(1,24,"Item",0,ArtCode,false,INSClass);
  MatCol(1,100,"Name",0,ItemName,false,0);
  //MatCol(1,200,"OrderQty",0,Qty,false,0);
  MatCol(1,200,"ADORQty",0,ADORQty,false,0);
  EndMatrix;
  EndWindow;
end;

window ADORInQSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("ADOR Inbound Queue",ADORInQSClass,CGslist,-);
  SpawnClass(ADORInQDClass);
  SetWRect(20,80,890,298);
  Sizeable(-1,-1,0,0);
  UseView(ADORInQVc);
  RecordList(4,17,-21,-39);
  RlColKey(h=4,h,"Nr.",SerNr,false,SerNr);
  RLColKey(h+=125,h,"OK",OKFlag,false,OKFlag);
  RlColKey(h+=130,h,"RecordType",RecordType,false,RecordType);
  RlColKey(h+=150,h,"RecordNr",RecordNr,false,RecordNr);
  RlColKey(h+=170,h,"Date",TransDate,false,TransDate);
  SearchField("Search");
  EndWindow;
end;

//TM 
// RGS: HAL-944
window SendPUToADORVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,v2,vs,vm,h,h1,h2,h3,h4,l;
  
  h = 90;
  WindowBegin("GMS - Send Goods receipts to ADOR",SendPUToADORVClass,CGmnt,RcType);
  SetWRect(20,80,450,200); h = 120; v = 6; vs = 20;
  PeriodField(h,v=6,"Period");
  EndWindow;
end;
//:RGS

// RGS: HAL-943
window SendINToADORVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("GMS - Send Items to ADOR",SendINToADORVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  StaticText(h=50,v+=20,"Press OK to Send Item records to ADOR",false);
  EndWindow;
end;
//:RGS

//TM - PODs 
window HALAttachPODsVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("GMS - Attach PODs Fitment Northern",HALAttachPODsVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  StaticText(h=50,v+=20,"Press OK to attach PODs to invoices",false);
  EndWindow;
end;

//TM - PO List POListRClass
window POListRClass:1 //R for Report 
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
real h,v,vs,vb; 

h = 120; 
v = 10; 
vs = 21; 
vb = 16; 

  WindowBegin("Specify Purchase Order",POListRClass,CGRcW,-);
    SetWRect(20,80,600,441); 
      EditFieldTL(h,v,150,"PONo.",M4Long,Normal,10,SerNr,false,POSClass);  
  EndWindow; 
end; 

//TM - Item List with Alt Codes 
//TM - PO List POListRClass
window INListRClass:1 //R for Report 
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
real h,v,vs,vb; 

h = 120; 
v = 10; 
vs = 21; 
vb = 16; 

  WindowBegin("Specify Purchase Order",INListRClass,CGRcW,-);
    SetWRect(20,80,600,441); 
      EditFieldTL(h,v,150,"Item Group.",M4Code,Normal,10,d1Code,false,ITSClass);  
  EndWindow; 
end; 

//TM - Stock Movement Labels 
window StockMovLabRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,l,v,vm;
  WindowBegin("Specify Stock Movement Labels",StockMovLabRClass,CGRcW,RcType);
  SetWRect(20,80,400,320);
  EditFieldTL(h=150,v=6,153,"Stock Movement",   M4Str,Normal,30,f1,false,0);
  if (HasModProd) then begin
    EditFieldTL(h,v+=20,153,"Productions",   M4Str,Normal,30,f7,false,0);
  end;
  EditFieldTL(h,v+=20,100,"Item",M4UStr,Normal,41,f3,false,INSClass);
  if (HasItemGroups) then begin
    EditFieldTL(h,v+=20,100,"Item Group",M4UStr,Normal,5,f5,false,ITSClass);
  end;
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=20,100,"Item Classification",M4UStr,Normal,100,f4,false,DISClass);
  end;
  if (HasMultiLocations) then begin
    EditFieldTL(h,v+=20,100,"Location",M4UStr,Normal,10,f6,false,LocationSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v+=20,100,"#Supplier#",M4UStr,Normal,10,LastAcc,false,VESClass);
  end;
  if (HasSerialNumbers) then begin
    EditFieldTL(h,v+=20,100,"Serial Number",M4UStr,Normal,60,FirstAcc,false,SerialNrSClass);
  end; 
  EditFieldTL(h,v+=20,50,"Vertical Margin",M4Int,Normal,0,flags[29],false,0);
  if (IsEnterprise) then begin  
    EditFieldTL(h,v+=20,100,"Label No.",M4Str,Normal,30,f2,false,0);
  end;
  ButtonFrame(h=100,vm=(v+=40) /*v=vm*/,l=60,5,"Layout");
  RadioButton(h,v    ,0,0,"1*1",ArtMode);
  RadioButton(h,v+=16,2,0,"2*8",ArtMode);
  RadioButton(h,v+=16,1,0,"3*8",ArtMode);
  RadioButton(h,v+=16,4,0,"2*_4",ArtMode);
  RadioButton(h,v+=16,5,0,"2*_7",ArtMode); v = vm; h = 200;
  if (IsEnterprise) then begin
    CheckBox(h,v,0,"Only with Balance",flags[0]); v = v + 16;
  end;
  if (HasModProd) then begin
    CheckBox(h,v,0,"Include Productions",flags[1]);
  end;
  EndWindow;
end;

//Oudster - TM 
window PLLevelTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,l,v;
  WindowBegin("Price List Levels",PLLevelDClass,CGview,-);
  SetBlid(PLLevelBlock);
  SetWRect(20,80,650,570);
  h=60;v=10;
  EditField(h,v,-60,"Level 1",Normal,PlLevel1Desc,false,0);
  EditField(h,v+=20,-60,"Level 2",Normal,PlLevel1Desc,false,0);
  EditField(h,v+=20,-60,"Level 3",Normal,PlLevel1Desc,false,0);
  EditField(h,v+=20,-60,"Level 4",Normal,PlLevel1Desc,false,0);
  EditField(h,v+=20,-60,"Level 5",Normal,PlLevel1Desc,false,0);

  EndWindow;
end;

window DH_PLLevelDescTClass:1 
  wtag("language","SAF"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h4,v,vs;
  WindowBegin("Price List Level Descriptions",DH_PLLevelDescTClass,CGSbl,-);
  SetBlid(DH_PLLevelBlock);
  SetWRect(64,80,560,500); 
  Sizeable(-1,-1,0,0);
  EditField(h=150,v=10,200,"Level 1 Description",Normal,PlLevel1Desc,false,0);
  EditField(h,v+=20,200,"Level 2 Description",Normal,PlLevel2Desc,false,0);
  EditField(h,v+=20,200,"Level 3 Description",Normal,PlLevel3Desc,false,0);
  EditField(h,v+=20,200,"Level 4 Description",Normal,PlLevel4Desc,false,0);
  EditField(h,v+=20,200,"Level 5 Description",Normal,PlLevel5Desc,false,0);
  EndWindow;
end; 

// Oudster 

//TM 

//TM
/*
//TM - PODs 
window ADORGRVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("GMS - Delete ADORGRV Records",ADORGRVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  StaticText(h=50,v+=20,"Press Run to delete all ADORGRV record",false);
  EndWindow;
end;
//TM
*/

//Oudster 
window DH_PriceListsVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Multi level price list",DH_PriceListsVClass,CGMnt,RcType);
  SetWRect(20,80,360,250);
  EndWindow;
end;

//HALPicVc - TM 
window HALPicLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Item Pictures",HALPicLClass,CGmlist,-);
  SpawnClass(HALPicDClass);
  SetWRect(20,80,890,298);
  Sizeable(-1,-1,0,0); 
  UseView(HALPicVc);
  RecordList(4,17,-21,-39);
  RlColKey(h=4,h,"Item No.",ArtCode,false,ArtCode);
  RlColKey(h+=125,h,"Alt Code.",AltCode,false,AltCode); 
  RlColKey(h+=135,h,"GM Code.",GMCode,false,GMCode);
  //RLColKey(h+=125,h,"Item Name",ItemName,false,ItemName);
  RLColKey(h+=145,h,"Group",Group,false,Group);
  RlColKey(h+=155,h,"Car Group",CarGroup,false,CarGroup);
  RlColKey(h+=165,h,"Pic Group",PicGroup,false,PicGroup);
  SearchField("Search");
  EndWindow;
end;

window HALPicDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vb,h3,h2,h4; 

  h = 100; h2 = 270; h3 = 440; h4=610; v = 6; vs = 20;
  
  WindowBegin("Item Picture",HALPicDClass,CGview,-);
  SetWRect(20,80,550,650);
  Sizeable(-1,-1,0,0);
  UseView(HALPicVc);
  EditField(h,v,75,"Item Code",Normal,ArtCode,false,INSClass); 
  EditField(h2,v,75,"Alt Code",Normal,AltCode,false,0); 
  EditField(h2+170,v,75,"GM Code",Normal,GMCode,false,0); 
  EditField(h,v+=vs,300,"Item Name",Normal,ItemName,false,0); 
  EditField(h,v+=vs,75,"Group",Normal,Group,false,0); 
  EditField(h2,v,75,"Car Group",Normal,CarGroup,false,0);
  EditField(h2+170,v,75,"Pic Group",Normal,PicGroup,false,0); 
  Pict_Field(h,v+=vs,h+600,v+600,"");
  EndWindow;
end; 

//TM - Promotion Prices  
window HALPromPrLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  real h,h2,v,vs;

  WindowBegin("Promotion Prices",HALPromPrLClass,CGmlist,-);
  SpawnClass(HALPromPrDClass);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(HALPromPrVc);
  RecordList(4,17,-21,-39);
  RlColKey(h=4,h,"Code",Code,false,Code);
  RlColKey(h+=125,h,"Comment",Comment,false,Comment); 
  RlColKey(h+=155,h,"StartDate",StartDate,false,StartDate);
  RLColKey(h+=165,h,"EndDate",EndDate,false,EndDate);
  RlColKey(h+=175,h,"Replace Code",PLReplCode,false,PLReplCode);
  RlColKey(h+=185,h,"Active",Active,false,Active);
  SearchField("Search");
  EndWindow;
end;

window HALPromPrDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,l,v;
  
  h2 = 270;
  WindowBegin("Promotion Prices Capture",HALPromPrDClass,CGview,-);
  SetWRect(20,80,550,370);
  Sizeable(-1,-1,0,0);
  UseView(HALPromPrVc);
  EditField(h=110,v=10,80,"Code",St_i,Code,false,0);
  EditField(h2,v,-40,"Description",Normal,Comment,false,0);
  CheckBox(10,v+=20,0,"Active",Active);
  EditField(h,v,80,"Period",Normal,StartDate,false,PasteCurDate);
  EditField(h2,v,80,"-",Normal,EndDate,false,PasteCurDate);
  EditField(420,v,-40,"Currency",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=20,80,"Replace",Normal,PLReplCode,false,PLDefSClass);

    h = 7; v=v+19; l = 35;
    MatrixBegin(h,v+=22,h+420,-11,-,1000);
    MatCol(1,h+=84,"ItemCode",70,ItemCode,false,INSClass);
    MatCol(1,h+=84,"CustCode",70,CustCode,false,CUSClass);
    MatCol(1,h+=84,"Fixed price",70,FixedPrice,true,0); 
    EndMatrix;
  EndWindow;
end;

window HALPromPrVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vb;

  h = 120;
  v = 10;
  vs = 21;
  vb = 16;

  WindowBegin("Update Prices with Promotion Prices",HALPromPrVClass,CGMnt,-);
  SetWRect(20,80,600,441);
  // PeriodField(h,v,"Period");
  // EditFieldTL(h,v+=vs,150,"Trainer",M4Code,Normal,10,f1,false,UserSClass);
  // CheckBox(h,v+=vs,0,"Invoiced",ArtMode); // .flags[0]
  EndWindow;
end;

window HALPromPrRemVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vb;

  h = 120;
  v = 10;
  vs = 21;
  vb = 16;

  WindowBegin("Remove Promotion Prices from Prices",HALPromPrRemVClass,CGMnt,-);
  SetWRect(20,80,600,441);
  // PeriodField(h,v,"Period");
  // EditFieldTL(h,v+=vs,150,"Trainer",M4Code,Normal,10,f1,false,UserSClass);
  // CheckBox(h,v+=vs,0,"Invoiced",ArtMode); // .flags[0]
  StaticText(h=50,v+=20,"Press Run to delete all Promotion Prices with an EndDate less than today's date.",false);
  EndWindow;
end;


window CalcBasePRVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vb;

  h = 120;
  v = 10;
  vs = 21;
  vb = 16;

  WindowBegin("Specify Calculate Base Prices",CalcBasePRVClass,CGMnt,-);
  SetWRect(20,80,600,441);
  // PeriodField(h,v,"Period");
  // EditFieldTL(h,v+=vs,150,"Trainer",M4Code,Normal,10,f1,false,UserSClass);
  // CheckBox(h,v+=vs,0,"Invoiced",ArtMode); // .flags[0]
  EndWindow;
end;

window FNBEBankEClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Export FNB E-Banking Payment",FNBEBankEClass,CGEcw,RcType);
  SetWRect(20,80,400,300);
  v = 6; vs = 20; h = 140;
  EditFieldTL(h,v, 150,"Range of Payments",   M4UStr,Normal,50,f1,false,OPSClass);
  EditFieldTL(h,v+=vs, 150,"Payment Mode",   M4UStr,Normal,10,f3,false,PMSClass);
  EditFieldTL(h,v+=vs, 150,"Execution Date",   M4Date,Normal,5,d1,false,PasteCurDate);
  EndWindow;

  return;
end;

window HalDelAllRecordsMClass:1
  wtag("language","ENG"), wtag("product","HansaWorld,"), wtag("productcode","Enterprise"), wtag("device","computer")
begin
  Real h,v,vs,h2;
  Windowbegin("Run Delete Records",HalDelAllRecordsMClass,CGMnt,RcType); 
  SetWRect(64,80,549,300);
  v= 6; vs = 16; h=120;
  EditFieldTL(h,v=6 ,200,"Vc Code",M4Str,Normal,40,f1,false,0);
  // ColourPushButton(10+170,10,100+170,60,"OpenDCTdelBlock","Select Registers to Delete",4);
  // StaticText(h=40,v=80,"Click Run after selecting which registers need to be marked for deletion",false);  
  Endwindow;
end;

window RegDelMarkTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  Real h,v,vs,h2;
  vs = 15;
  WindowBegin("Registers Marked for Deletion",RegDelMarkTClass,CGSbl,-);
  SetWRect(64,80,1050,600);
  SetBlid(RegDeleteDCTBlock);
  v= 6; vs = 16; h=140;
  ColourPushButton(-100,10,-10,50,"ClearDCTdelBlock","Clear Selection",4);
  ColourPushButton(-100,60,-10,100,"SelectAllDCTdelBlock","Select All",4);

  CheckBox(h=15,v=20,0,   "Access Groups (AccessVc)",flags[64]);
  CheckBox(h,v+=vs,0,     "Activities (ActVc)",flags[10]);
  CheckBox(h,v+=vs,0,     "Archive (ArchiveVc)",flags[63]);
  CheckBox(h,v+=vs,0,     "Attachments (Attach2Vc)",flags[62]);
  CheckBox(h,v+=vs,0,     "Barcodes (BarcodeVc)",flags[61]);
  CheckBox(h,v+=vs,0,     "Case Events (CashVc)",flags[40]);    
  CheckBox(h,v+=vs,0,     "Cash in (CLInVc)",flags[1]);
  CheckBox(h,v+=vs,0,     "Cash Out (CLOutVc)",flags[2]);
  CheckBox(h,v+=vs,0,     "Cheques (CheckVc)",flags[86]);
  CheckBox(h,v+=vs,0,     "Configuration (CUServiceEnabVc)",flags[78]);
  CheckBox(h,v+=vs,0,     "Contact Relations (ContactRelVc)",flags[60]);
  CheckBox(h,v+=vs,0,     "Contacts (CUVc)",flags[18]);
  CheckBox(h,v+=vs,0,     "Contracts (COVc)",flags[59]);
  CheckBox(h,v+=vs,0,     "Customer Categories (CCatVc)",flags[83]);
  CheckBox(h,v+=vs,0,     "Deliveries (SHVc)",flags[24]);
  CheckBox(h,v+=vs,0,     "Delivery Address (DelAddrVc)",flags[58]);
  CheckBox(h,v+=vs,0,     "Document forms (DocVc)",flags[56]);  
  CheckBox(h,v+=vs,0,     "Exchange Rates (ERVc)",flags[57]);
  CheckBox(h,v+=vs,0,     "Goods Received (PUVc)",flags[22]);
  CheckBox(h,v+=vs,0,     "Hotel Guests (ProfileVc)",flags[46]); 
  CheckBox(h,v+=vs,0,     "Hotel Reservation Quotations (ResAvVc)",flags[31]); 
  CheckBox(h,v+=vs,0,     "Hotel Reservations (JobVc)",flags[30]);  
  CheckBox(h,v+=vs,0,     "Hotel Resource Type Support (ResTypeSupportVc)",flags[87]);
  CheckBox(h,v+=vs,0,     "Hotel Rooms (ResVc)",flags[32]);
  CheckBox(h,v+=vs,0,     "Internal Stock Transfer (InTransferVc)",flags[55]);
  CheckBox(h,v+=vs,0,     "Invoices (IVVc)",flags[7]);
  CheckBox(h,v+=vs,0,     "Invoices Un-OK only (IVVC)",flags[77]);
  CheckBox(h,v+=vs,0,     "Item Balances (ItemStatusVc)",flags[54]);    
  CheckBox(h,v+=vs,0,     "Item Clasifications (DiVc)",flags[53]);
  CheckBox(h,v+=vs,0,     "Item Conversion (ConvItemBlock)",flags[79]);
  CheckBox(h2=320,v=20,0, "Item Groups (ITVc)",flags[26]);  
  CheckBox(h2,v+=vs,0,    "Item History (ItemHistVc)",flags[23]);
  CheckBox(h2,v+=vs,0,    "Item Variety (VARVc)",flags[74]);
  CheckBox(h2,v+=vs,0,    "Items (INVc)",flags[21]);
  CheckBox(h2,v+=vs,0,    "Locations (LocationVc)",flags[52]);    
  CheckBox(h2,v+=vs,0,    "Logging History (RHistVc)",flags[14]);
  CheckBox(h2,v+=vs,0,    "Mailbox Browse (ConfVc)",flags[51]);
  CheckBox(h2,v+=vs,0,    "Minimum Stock Levels (MinPerLOcVc)",flags[50]);    
  CheckBox(h2,v+=vs,0,    "NL Accounts (AccVc)",flags[16]);
  CheckBox(h2,v+=vs,0,    "NL Budget Accounts (Bud1Vc)",flags[17]);
  CheckBox(h2,v+=vs,0,    "NL Transactions (TBIVVc)",flags[4]);
  CheckBox(h2,v+=vs,0,    "Nominal Transactions (BankTRVc)",flags[45]);
  CheckBox(h2,v+=vs,0,    "Normalized PhoneNumbers (NormPhoneNumVc)",flags[44]);  
  CheckBox(h2,v+=vs,0,    "Objects (Objvc)",flags[43]);
  // CheckBox(h2,v+=vs,0,    "Open Purchase Invoices (APVc)",flags[90]);
  CheckBox(h2,v+=vs,0,    "Orders (ORVc)",flags[8]);
  CheckBox(h2,v+=vs,0,    "Payments (OPVc)",flags[39]);
  CheckBox(h2,v+=vs,0,    "Persons (UserVc)",flags[37]);
  CheckBox(h2,v+=vs,0,    "POS Balances (PosBalanceVC)",flags[36]);      
  CheckBox(h2,v+=vs,0,    "POS Buttons (POSButtonsVc)",flags[85]);
  CheckBox(h2,v+=vs,0,    "POS Invoices (IVCashVc)",flags[38]);       
  CheckBox(h2,v+=vs,0,    "POS Sessions (POSEventVc)",flags[33]);
  CheckBox(h2,v+=vs,0,    "Price Lists (PLDefVc) ",flags[35]);
  CheckBox(h2,v+=vs,0,    "Prices (PLVc)",flags[19]);
  CheckBox(h2,v+=vs,0,    "Production (ProdVc)",flags[65]);
  CheckBox(h2,v+=vs,0,    "Production Order (ProdOrderVc)",flags[34]);  
  CheckBox(h2,v+=vs,0,    "Project Budgets (TBBUVc)",flags[28]);  
  CheckBox(h2,v+=vs,0,    "Projects (PRVc)",flags[27]);  
  CheckBox(h2,v+=vs,0,    "Purchase Invoice (VIVc)",flags[6]);
  CheckBox(h2,v+=vs,0,    "Purchase Items (PIVc)",flags[66]);
  CheckBox(h2=620,v=20,0, "Purchase Orders (POVc)",flags[20]);
  CheckBox(h2,v+=vs,0,    "Quotations (QTVc)",flags[67]);
  CheckBox(h2,v+=vs,0,    "Receipts (IPVc)",flags[9]);
  CheckBox(h2,v+=vs,0,    "Recipe-BOM (RecVc)",flags[68]);
  CheckBox(h2,v+=vs,0,    "Records Links (RLinkVc)",flags[69]);
  CheckBox(h2,v+=vs,0,    "Rental Items (RentInVC)",flags[70]);
  CheckBox(h2,v+=vs,0,    "Restaurant Bar Tabs (RestAccVc)",flags[42]);    
  CheckBox(h2,v+=vs,0,    "Restaurant Bookings (RestBookingVc)",flags[41]);
  CheckBox(h2,v+=vs,0,    "Returned Goods (RetVc)",flags[13]);
  CheckBox(h2,v+=vs,0,    "Returned Goods to Suppliers (RetPUVc)",flags[15]);
  CheckBox(h2,v+=vs,0,    "Serial Numbers (SVOSerVc)",flags[71]);
  // CheckBox(h2,v+=vs,0,    "Shopping Basket (ShopBaskVc)",flags[89]);    
  CheckBox(h2,v+=vs,0,    "Simulations (SMVc)",flags[5]);
  CheckBox(h2,v+=vs,0,    "SMS's (SMSVc)",flags[72]);
  CheckBox(h2,v+=vs,0,    "Stock Depreciations (SDVc)",flags[25]);
  CheckBox(h2,v+=vs,0,    "Stock Movements (StockMovVc)",flags[12]);
  CheckBox(h2,v+=vs,0,    "StockTake (StockTakeVc)",flags[73]);
  CheckBox(h2,v+=vs,0,    "Supplier Categories (VGVc)",flags[84]);
  CheckBox(h2,v+=vs,0,    "Target Time (TargTimeVc)",flags[3]);
  CheckBox(h2,v+=vs,0,    "User Activities (UserActionLogVc)",flags[89]);
  CheckBox(h2,v+=vs,0,    "User Login History (UserLoginVc)",flags[90]);
  CheckBox(h2,v+=vs,0,    "User Defined Columns (UserDefRepColumnsVc)",flags[82]);
  CheckBox(h2,v+=vs,0,    "User Defined Lines (UserDefRepLinesVc)",flags[81]);   
  CheckBox(h2,v+=vs,0,    "User Defined Reports (UserDefRepVc)",flags[80]);
  CheckBox(h2,v+=vs,0,    "Variety Group (VARGVc)",flags[75]);
  CheckBox(h2,v+=vs,0,    "Variety Subset (VARSubsetsVc)",flags[76]);
  CheckBox(h2,v+=vs,0,    "Weighted Avarage (WeigAvVc)",flags[11]);
  CheckBox(h2,v+=vs,0,    "Window Positions (WRVc)",flags[88]);
  
  EndWindow;  
end;

window APPayHistLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Prepayments",APPayHistLClass,CGslist,-);
  SetWRect(20,80,700,355);
  Sizeable(-1,-1,0,0);
  UseView(APPayHistVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,1,    "No.",VEPNr,false,MainKey);
  RlCol(90,90,"Pay Date",TransDate,false);
  RlColKey(160,160,"#Supplier#",VECode,false,VECode);
  RlCol(-400,-400, "#VAT#",VATVal,true);
  RlCol(-310,-310, "Val",Val,true);
  RlCol(-250,-250, "Sum",BookVal,true);
  RlCol(-150,-150, "FN",FileName,false);
  RlCol(-50,-50, "SerNr",SerNr,false);
  SearchField("Search");
  EndWindow;
end;

window ARPayHistLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Prepayments ARs",ARPayHistLClass,CGmlist,-);
  SpawnClass(ARPayHistDClass);
  SetWRect(20,80,600,355);
  Sizeable(-1,-1,0,0);
  UseView(ARPayHistVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,1,    "No.",CUPNr,false,MainKey);
  RlCol(90,90,"Pay Date",TransDate,false);
  RlColKey(160,160,"Cus",CustCode,false,CustCode);
  RlCol(-310,-310, "#VAT#",VATVal,true);
  RlCol(-260,-260, "Val",Val,true);
  RlCol(-180,-180, "Sum",BookVal,true);
//  RlCol(-30,-30, "Cur.",CurncyCode,false);
  RlCol(-50,-50, "FN",FileName,false);
  SearchField("Search");
  EndWindow;
end;

//RP Start
window FixMinPerLocVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Clear Blank Locations on Minimum Stock Levels",FixMinPerLocVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  EndWindow;
end;
//RP -END

//RP Start
window EngineLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Engines",EngineLClass,CGmlist,-);
  SpawnClass(EngineDClass);
  SetWRect(20,80,500,300);
  Sizeable(-1,-1,0,0);
  UseView(EngineVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Engine Code",Code,false,Code);
  RlColKey(100,100,"Engine Size",EngineSize,false,EngineSize);
  RlCol(-280,-280, "Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window EngineSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste Engine",EngineSClass,CGslist,-);
  SpawnClass(EngineDClass);
  SetWRect(20,80,500,300);
  Sizeable(-1,-1,0,0);
  UseView(EngineVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Engine Code",Code,false,Code);
  RlColKey(100,100,"Engine Size",EngineSize,false,EngineSize);
  RlCol(-280,-280, "Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window EngineDClass:1
wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,h4,h5,v,vs,vm,v2,v3;
  WindowBegin("Engine",EngineDClass,CGview,-);
  SetWRect(20,80,600,600);
  Sizeable(-1,-1,0,0);
  UseView(EngineVc);

  v = 6; vs = 20; h = 120; h2 = 310; h3 = 280; h4 = 410; h5 = 550;

  EditField(h,v,130,"Engine Code",Normal,Code,false,0);
  EditField(h+=200,v,130,"Engine Size",Normal,EngineSize,false,0);
  h=120;
  EditField(h,v+=20,410,"Comment",Normal,Comment,false,0);
  MatrixBegin(h=4,v+=(vs+20),-50,-27,-,200);
  MatCol(1,24,"Item",0,ArtCode,false,INSClass);
  MatCol(1,144,"Description",0,Name,false,0);
  EndMatrix;

  EndWindow;
end;
//RP End

window FNBEBankEClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Export FNB E-Banking Payment",FNBEBankEClass,CGEcw,RcType);
  SetWRect(20,80,400,300);
  v = 6; vs = 20; h = 140;
  EditFieldTL(h,v, 150,"Range of Payments",   M4UStr,Normal,50,f1,false,OPSClass);
  EditFieldTL(h,v+=vs, 150,"Payment Mode",   M4UStr,Normal,10,f3,false,PMSClass);
  EditFieldTL(h,v+=vs, 150,"Execution Date",   M4Date,Normal,5,d1,false,PasteCurDate);
  EndWindow;

  return;
end;

window LocalDelDriversWPTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Local Deliver Drivers WP Integration",LocalDelDriversWPTClass,CGSbl,-);
  SetBlid(LocalDelDriversWPBlock);
  SetWRect(20,80,520,400);
  h = 120; v = 6; vs = 20; h2 = 350;
  EditField(h,v,200,"Host",Normal,Host,false,0);
  EditField(h,v+=vs,250,"Consumer Key",Normal,ConsumerKey,false,0);
  EditField(h,v+=vs,250,"Consumer Secret",Normal,ConsumerSecret,false,0);
  CheckBox(h,v+=24,0,"Enable Integration",Enable);
  CheckBox(h,v+=16,0,"Log Communication",LogCommunication);
  EndWindow;
end;

window BrandLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Brands",INBrandLClass,CGmList,0);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(BrandVc);
  SpawnClass(BrandDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlColKey(100,100, "Name",Name,false, Name);
  SearchField("Search");
  EndWindow;
end;

window BrandDClass:1
wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Item Brand",BrandDClass,CGview,-);
  SetWRect(20,80,500,400);
  UseView(BrandVc);

  h = 120; v = 6; vs = 20; h2 = 350;

  EditField(h,v,130,"Code",Normal,Code,false,0);
  EditField(h,v+=vs,130,"Name",Normal,Name,false,0);

  EndWindow;
end;

window BrandSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste Brand",BrandSClass,CGslist,-);
  SpawnClass(BrandDClass);
  SetWRect(20,80,355,300);
  Sizeable(-1,-1,0,0);
  UseView(BrandVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlColKey(120,120,"Name",Name,false,Name);
  SearchField("Search");
  EndWindow;
end;

window INBrandLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Item Brands",INBrandLClass,CGmList,0);
  SetWRect(64,80,509,298);
  Sizeable(-1,-1,0,0);
  UseView(INBrandVc);
  SpawnClass(INBrandDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",ArtCode,false,ArtCode);
  RlColKey(100,100, "Article No.",ArticleNo,false, ArticleNo);
  RlColKey(230,230, "Brand",Brand,false, Brand);
  SearchField("Search");
  EndWindow;
end;

window INBrandDClass:1
wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Item Brand",INBrandDClass,CGview,-);
  SetWRect(20,80,500,400);
  UseView(INBrandVc);

  h = 120; v = 6; vs = 20; h2 = 350;

  EditField(h,v,130,"Item Code",Normal,ArtCode,false,INSClass);
  EditField(h,v+=vs,130,"Article No.",Normal,ArticleNo,false,0);
  EditField(h,v+=vs,130,"Brand",Normal,Brand,false,BrandSClass);

  EndWindow;
end;

window HALNightlyVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Nightly Maintenance",HALNightlyVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  EndWindow;
end;

window IntuendiVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;

  WindowBegin("Intuendi Data Files Maintenance",IntuendiVClass,CGMnt,RcType);
  SetWRect(20,80,400,300);
  EndWindow;
end;

window OustandingDownPaymentsRClass:1
wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  
  real h,l,v,vm;
  WindowBegin("Specify Oustanding Down Payments",OustandingDownPaymentsRClass,CGRcW,-);
  SetWRect(20,80,400,150);
  Sizeable(-1,-1,0,0);
  
  PeriodField(h=140,v=6,"Period");
  EditFieldTL(h,v+=20,150,"Customer", M4Str,Normal,30,f1,false,CUSClass);
  EditFieldTL(h,v+=20,150,"Location",M4Str,Normal,30,f2,false,LocationSClass);

  CheckBox(h,v+=40,0,"Not Shipped",flags[1]);
  CheckBox(h,v+=16,0,"Not Invoiced",flags[2]);

  EndWindow;
end;

window SalesPriceCheckPOSRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Specify Sales Price Control POS",SalesPriceCheckPOSRClass,CGRcW,RcType);
  SetWRect(20,80,400,150);
  vs = 20; h = 120; h2 = 250;
  PeriodField(h,v=6,"Period");
  EditFieldTL(h,v+=vs,150,"Location",M4UStr,Normal,100,f1,false,LocationSClass);
  // CheckBox(h,v+=vs,0,"Sort by Discount Value",flags[1]);
  EndWindow;
end;

window GrandmarkSearchWClass:1
wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Grandmark Item Search",GrandmarkSearchWClass,CGother,RcType);
  UseView(RcVc);
  WindowHasNoToolbar;
  SetWRect(20,40,1280,720);
  WebPage(0,0,-1,-1,"https://intranet.gregsmotorspares.com/grand-mark/search","");
  EndWindow;
end;

window VehiclePartsSearchWClass:1
wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Vehicle Parts Search",VehiclePartsSearchWClass,CGother,RcType);
  UseView(RcVc);
  WindowHasNoToolbar;
  SetWRect(20,40,1280,720);
  WebPage(0,0,-1,-1,"https://intranet.gregsmotorspares.com/pim/app/vehicle-parts-search","");
  EndWindow;
end;

window IVPerSalesmanRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real f,h,hs,v,vm,vs;
  WindowBegin("Specify Sales Per Salesman",IVPerSalesmanRClass,CGRcW,RcType);
  SetWRect(20,80,400,320);
  vs = 20;
  f = 120; hs = 132;
  EditFieldTL(h=160,v=6, f,"Invoice No.",   M4Str,Normal,30,f1,false,0);
  PeriodField(h,v+=vs,"Period");
  EditFieldTL(h,v+=vs ,f,"Customer",M4UStr,Normal,50,f2,false,CUSClass);
  EditFieldTL(h,v+=vs ,70,"Customer Category",M4UStr,Normal,5,f3,false,CCatSClass);
  EditFieldTL(h,v+=vs ,70,"Classification Types",M4UStr,Normal,60,f5,false,CTypeSClass);
  EditFieldTL(h,v+=vs ,70,"Customer Classification",M4UStr,Normal,30,f4,false,CClassSClass);
  EditFieldTL(h,v+=vs ,70,"Item Group",M4UStr,Normal,21,f6,false,ITSClass);
  EditFieldTL(h,v+=vs ,100,"#Salesman#",M4UStr,Normal,10,AccStr,false,UserSClass);
  EditFieldTL(h,v+=vs,100,"Location",M4UStr,Normal,60,LastAcc,false,LocationSClass);
  EditFieldTL(h,v+=vs,50,"Payment Term",M4UStr,Normal,5,TransStr,false,PDSClass);

  ButtonFrame(h=30,vm=(v+=41),123,4,"Invoice Type");
  CheckBox(h,v,0,"Invoices",flags[3]);
  CheckBox(h,v+=16,0,"Cash Notes",flags[4]);
  CheckBox(h,v+=16,0,"#Credit Notes#",flags[5]);
  CheckBox(h,v+=16,0,"POS Invoices",flags[6]);

  ButtonFrame(h=227,v=vm,123,2,"Status");
  CheckBox(h,v,0,"Not OKed",flags[1]);
  CheckBox(h,v+=16,0,"O_Ked",flags[2]);

  EndWindow;
end;