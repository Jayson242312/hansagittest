
window CUDClass:14
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,h5,h6,l,v,vm,vm2,vs,h7;
  string 255 label;
  record CUVc CUr;
  Integer wn,tilenr;
  record ModuleBlock Modb;

  BlockLoad(Modb);
  WindowBegin("Contact",CUDClass,CGview,-);
  DynamicWindow;
  SetWRect(20,80,850,441);
  Sizeable(-1,-1,0,0);
  UseView(CUVc);
  FormName(PrintCUD);

  wn = CurWindow;
  if (wn>0) then begin
    if (GetWindowClass(wn)=="CUDClass") then begin
      GetWindowRecord(wn,CUr);
    end;
  end;

  if (HasLocalization("EST,GBR,LTU,LVA,NOR,POL,FIN")) then begin
    ActiveFieldOnNew("Code"); // dont change, otherwise automatic address lookup helper window wont show automatically //wns
                              // this should not be based on localization, but rather on if the
                              // address lookup is enabled, erik
  end else begin
    ActiveFieldOnNew("Name");
  end;
  if (HasMetroTestFeatures or GUIType!=kGUIMetro) then begin
    CommunicateButton;
  end;
  if (HasJewelleryInterface) then begin
    Tile(0,155,false,"",Code);
  end else begin
    Tile(0,95,false,"",Code);
  end;
  v = 6; h = 130; l=223; vs = 20; h1=410; h2 = 355; h3 = 430; h4 = 580; h5 = 460;
  EditField(h,v ,   95,"No.",Normal,Code,false,TSerSClass);
  EditField(h1,v,50,"Customer Category",Normal,CustCat,false,CCatSClass);
  EditField(h,v+=vs,95,"Short",Normal,SearchKey,false,0);
  EditField(h1,v,50,"#Supplier# Category",Normal,VECat,false,VGSClass);
  if (HasJewelleryInterface) then begin
    EditField(h,v+=vs,95,"Title",Normal,Salutation1,false,0);
    EditField(h1,v,50,"Suffix",Normal,ANACode,false,0);
    EditField(h,v+=vs,h1-h+50,"First Name",Normal,Salutation2,false,0);
    EditField(h,v+=vs,h1-h+50,"Last Name",Normal,Salutation3,false,0);
    EditField(h,v+=vs,h1-h+50,"Display Name",Normal,Name,false,0);
  end else begin
    EditField(h,v+=vs,h1-h+50,"Name",Normal,Name,false,0);
    if (HasLocalization("BRA")) then begin
      EditField(h,v+=vs,h1-h+50,"Business Name",Normal,BusinessName,false,0);
    end;
  end;

  CheckBox(h1+80,v=6,0,"C_ustomer",CUType);
  CheckBox(h1+80,v+=16,0,"#Supplier#",VEType);
  if (HasModHotel) then begin
    CheckBox(h1+80,v+=16,0,"Guest",GuestType);
  end;
  if (HasJewelleryInterface) then begin
    CheckBox(h1+80,v+=16,0,"No Mass Letters",NoLetterPosting);
    CheckBox(h1+80,v+=16,0,"No Mass Emailing",NoMailPosting);
    EditField(h1+120,v+=20,100,"Salesman",Normal,SalesMan,false,UserSClass);
  end;
  v=6;
  if (HasModHRM or IsEnterprise) then begin
    CheckBox(h1+180,v,0,"Employee",EmployeeType); v = v + 16;
  end;
  if (StandardHansa==false) then begin
    CheckBox(h1+180,v,0,"Dealer",DealerType);
  end;
  CheckBox(h1+180,v+=16,0,"Lead",LeadType);
  CheckBox(h1+280,v=6,0,"Branch",BranchType);
    if (HasLocalization("POL")) then begin
    CheckBox(h1+280,v+=16,0,"Connected Company",ConnectedCompType);
    CheckBox(h1+280,v+=16,0,"Farmer",FarmerType);
  end;
  if (HasModLearn) then begin
    CheckBox(h1+280,v+=16,0,"Student",StudentType);
    CheckBox(h1+280,v+=16,0,"Teacher",TeacherType);
  end;
  if (HasLocalization("EST")) then begin
    CheckBox(h1+280,v+=16,0,"E-Invoice Receiver",EInvReceiverFlag);
  end;

  HalPushButton(h1+170+70,v=10+30,h1+170+170,v+20+30,"SendCUToADORDsm","Send To ADOR"); //TM - DESK 5130
//  HalPushButton(h1+170,v=10,h1+170+100,v+20,"CreditInfoCUDsm","Credit Info");
//  HalPushButton(h1+170,v=10,h1+170+100,v+20,"UpdCustomerAddressCUDsm","Update Address");
  tilenr = 1;
  TileButton(tilenr,"Co_ntact"); tilenr = tilenr + 1;
  TileButton(tilenr,"Delivery"); tilenr = tilenr + 1;
  TileButton(tilenr,"Terms"); tilenr = tilenr + 1;
  TileButton(tilenr,"Pricing"); tilenr = tilenr + 1;
  TileButton(tilenr,"Compan_y"); tilenr = tilenr + 1;
  TileButton(tilenr,"Accounts"); tilenr = tilenr + 1;
  TileButton(tilenr,"E-Records"); tilenr = tilenr + 1;
  if (StandardHansa==false) then begin
    TileButton(tilenr,"Web"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"C_omments"); tilenr = tilenr + 1;
  if (true) then begin//HasModHotel
    TileButton(tilenr,"Personal"); tilenr = tilenr + 1;
  end;
  if (StandardHansa==false) then begin
    if (GuiType==kGuiMetro) then begin//UGLY
      TileButton(tilenr,"Other"); tilenr = tilenr + 1;
    end else begin
      TileButton(tilenr,"User Defined"); tilenr = tilenr + 1;
    end;
  end;
  TileButton(tilenr,"Notes"); tilenr = tilenr + 1;
  if (CUr.CUType!=0 and HasCharts) then begin
    TileButton(tilenr,"BI"); tilenr = tilenr + 1;
  end;
  tilenr = 1;
  Tile(tilenr,290,true,tilenr,InvAddr0); tilenr = tilenr + 1;
  v=6;
  h6 = h+120;
  HalPushButton(h6,v,h6+100,v+20,"UpdCustomerAddressCUDsm","Update Address");
  h6 = h6 + 130;
  HalPushButton(h6,v,h6+150,v+20,"CheckEUVATNumberCUDsm","Check EU #VAT# Number ");
  if (HasLocalization("FIN")) then begin
    h6 = h6 + 180;
    HalPushButton(h6,v,h6+180,v+20,"UpdCUPrepRegDateDsm","Check Prepayment Reg. Status");
  end;
  v=v+10;
  StaticText(h,v+13,"Invoice Address",false);
  label = UserDefined("CUVc","InvAddr0");
  EditField(h,v+=vs,-20,label,Normal,InvAddr0,false,0);
  label = UserDefined("CUVc","InvAddr1");
  EditField(h,v+=vs,-20,label,Normal,InvAddr1,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs,-20,label,Normal,InvAddr2,false,0);
  label = UserDefined("CUVc","InvAddr3");
  if (HasLocalization("BRA") and HasAvalara) or (HasLocalization("PRY")) then begin
    EditField(h,v+=vs,150,label,Normal,InvAddr3,false,0);
    EditField(h1,v,-20,"City Code",Normal,AvalaraCityCode,false,0);
  end else begin
    EditField(h,v+=vs,-20,label,Normal,InvAddr3,false,0);
  end;
  label = UserDefined("CUVc","InvAddr4");
  if (HasLocalization("BRA") and HasAvalara) or (HasLocalization("PRY")) then begin
    EditField(h,v+=vs,150,label,Normal,InvAddr4,false,0);
    EditField(h1,v,-20,"State Code",Normal,AvalaraStateCode,false,0);
  end else begin
    EditField(h,v+=vs,-20,label,Normal,InvAddr4,false,0);
  end;
  EditField(h,v+=vs,50,"Country",Normal,CountryCode,false,CountrySClass);
  if (HasLocalization("BRA") and HasAvalara) or (HasLocalization("PRY")) then begin
    EditField(h1,v,-20,"Country Code",Normal,AvalaraCountryCode,false,0);
  end;
  if (HasLocalization("BRA")) or (HasLocalization("PRY")) then begin 
    EditField(h2-159,v,85,"",ViewOnly,InvCountryName,false,0);
    v = v + vs;
  end;  
  EditField(h1,v,-20,"Department",Normal,Department,false,0);
  EditField(h,v+=vs,150,"Telephone",Normal,Phone,false,0);
  EditField(h1,v,-20,"Fax",Normal,Fax,false,0);
  EditField(h,v+=vs,150,"Alt Phone",Normal,AltPhone,false,0);
  EditField(h1,v,-20,"#Mobile#",Normal,Mobile,false,0);
  EditField(h,v+=vs,150,"Skype Name",Normal,SkypeName,false,0);
  EditField(h1,v,-20,"SIP",Normal,SIPCode,false,0);
  EditField(h,v+=vs,150,"Email",Normal,eMail,false,0);
  EditField(h1,v,-20,"Extension",Normal,Extension,false,0);
  EditField(h,v+=vs,150,"Primary Contact",Normal,Person,false,ContactSClass);
  EditField(h1,v,-20,"Website",Normal,wwwAddr,false,0);
  EditField(h,v+=vs,-20,"Classification",Normal,Classification,false,CClassSClass);
  if (HasLocalization("CHN")) then begin
    EditField(h,v+=vs,150,"QQ Account Number",Normal,QQName,false,0);
    EditField(h1,v,-20,"Weibo Account Number",Normal,WeiboName,false,0);
  end;
  RecordList2(10,v+=40,-30,-39,"ContactRelVc");
  RlColKey(4,4,"Code",ContactCode,false,ActCustContactCode);
  RlCol(70,70,"Title",ContactTitle,false);
  RlColKey(115,115,"Name",ContactName,false,ActCustContactName);
  RlCol(245,245,"Phone",ContactPhone,false);
  RlCol(345,345,"#Mobile#",ContactMobile,false);
  RlCol(445,445,"Job Title",JobTitle,false);
  RlCol(535,535,"Email",ContacteMail,false);
//  RlCol(-1,-1,"",Invalid,true);
  Tile(tilenr,240,false,tilenr,DelAddr0); tilenr = tilenr + 1;
  v=6;
  if (HasLocalization("CAN,GBR,LVA,EST,SWE,USA")) then begin
    HalPushButton(h+120,v,h+120+100,v+20,"UpdDeliveryAddressCUDsm","Update Address");
  end;
  v=v+12;
  StaticText(h,v+13,"Delivery Address",false);
  label = UserDefined("CUVc","DelAddr0");
  EditField(h,v+=vs,-20,label,Normal,DelAddr0,false,0);
  label = UserDefined("CUVc","DelAddr1");
  EditField(h,v+=vs,-20,label,Normal,DelAddr1,false,0);
  label = UserDefined("CUVc","DelAddr2");
  EditField(h,v+=vs,-20,label,Normal,DelAddr2,false,0);
  label = UserDefined("CUVc","DelAddr3");
  if (HasLocalization("BRA") and HasAvalara) then begin
    EditField(h,v+=vs,245,label,Normal,DelAddr3,false,0);
    EditField(h3+50,v,-20,"City Code",Normal,DelAvalaraCityCode,false,0);
  end else begin
    EditField(h,v+=vs,-20,label,Normal,DelAddr3,false,0);
  end;
  label = UserDefined("CUVc","DelAddr4");
  if (HasLocalization("BRA") and HasAvalara) then begin
    EditField(h,v+=vs,245,label,Normal,DelAddr4,false,0);
    EditField(h3+50,v,-20,"State code",Normal,DelAvalaraStateCode,false,0);
  end else begin
    EditField(h,v+=vs,-20,label,Normal,DelAddr4,false,0);
  end;
  EditField(h,v+=vs,50,"Country",Normal,DelCountry,false,CountrySClass);
  if (HasLocalization("BRA") and HasAvalara) then begin
    EditField(h3+50,v,-20,"Country Code",Normal,DelAvalaraCountryCode,false,0);
  end;
  if (HasLocalization("BRA")) then begin 
    EditField(h2-159,v,180,"",ViewOnly,DelCountryName,false,0);
    if (HasAvalara) then begin
      EditField(h,v+=vs,200,"Phone",Normal,DelPhone,false,0);
      EditField(h3+50,v,-20,"Email",Normal,DelEmail,false,0);
    end;
    v = v + vs;
  end;    
  EditField(h2+50,v,-20,"Order Comment",Normal,OrderComment,false,0);
  EditField(h,v+=vs,120,"Freight No.",Normal,FreightNr,false,0);
  EditField(h2+50,v,70,"Region",Normal,Region,false,RegionSClass);
  EditField(h,vm=(v+=vs),120,"Sales Del. Terms",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h2+50,v,70,"Purchase Del. Terms",Normal,VEShipDeal,false,ShipDealSClass);
  EditField(h,v+=vs,120,"Sales Del. Mode",Normal,ShipMode,false,DMSClass);
  EditField(h2+50,v,70,"Purchase Del. Mode",Normal,VEShipMode,false,DMSClass);
  EditField(h,v+=vs,120,"Route",Normal,Sorting,false,DelRouteSClass);
/* these fields were used for securities trading, this module doesnt exist in hansa anymore */
/* Two of these fields are used in Russia and Ukraine */
//  EditField(h,vm=(v+=vs),120,"Securities Acc.",Normal,SecAccount,false,0);
//  EditField(h,v+=vs,120,"Bank Account",Normal,BankAccount,false,0);//xx
//  EditField(h,v+=vs,120,"Account Operator",Normal,AccOperator,false,BankSClass);//xx
//##  EditField(h,v+=vs ,70, "Com. Matrix",Normal,ComCode,false,ComSClass);
  ButtonFrame(h5+30,v=vm,150,2,"Delivery Date Based On");
  RadioButton(h5+30,v,0,0,"Current Date",DeliveryBasedOn);
  RadioButton(h5+30,v+=16,1,0,"Planned Delivery Date",DeliveryBasedOn);
  Tile(tilenr,190,false,tilenr,PayDeal); tilenr = tilenr + 1;
  EditField(h,v=6,80,"Sales Pay. Terms",Normal,PayDeal,false,PDSClass);
  EditField(h,v+=vs,80,"Sales Credit Limit",Normal,CreditLimit,true,0);
  EditField(h,v+=vs,80,"Sales Credit Limit Days",Normal,CreditLimitDays,false,0);
  EditField(h,v+=vs,80,"Their #Supp.# Code",Normal,TheirCode,false,0);
  EditField(h,v+=vs,80,"Invoice To",Normal,InvoiceToCode,false,CUSClass);
//  EditField(h,v+=vs,80,"E-Invoice Address",Normal,ANACode,false,0);
  EditField(h,v+=vs,80,"Expected Late Payment",Normal,ExpLatePayment,false,0);
  EditField(h,v+=vs,80,"Interest Rate",Normal,IntRate,false,0);
  EditField(h,v+=vs,80,"Creation Date",ViewOnly,DateCreated,false,0);
  EditField(h,v+=vs,80,"Main Partner",Normal,MainPartner,false,CUSClass);
  EditField(h2,v=6,80,"Purch. Pay. Terms",Normal,VEPayDeal,false,PDSClass);
  EditField(h2,v+=vs,80,"Purch. Credit Limit",Normal,VECreditLimit,true,0);
  EditField(h2,v+=vs,80,"Purch. Credit Limit Days",Normal,VECreditLimitDays,false,0);
  EditField(h2,v+=vs,80,"Their Customer Code",Normal,VECustID,false,0);
  EditField(h2,v+=vs,80,"Purch. Invoice From",Normal,VEInvoiceToCode,false,VESClass);
  EditField(h2,v+=vs,80,"Factoring",Normal,VEFactoring,false,VESClass);
  EditField(h2,v+=vs,80,"Min. Order Sum",Normal,MinOrdSum,false,0);
  EditField(h2,v+=vs,80,"Reference",Normal,RefStr,false,0);
  EditField(h2,v+=vs,80,"Last Changed",Normal,DateChanged,false,0);
  if ((HasLocalization("BRA") and HasAvalara)) then begin
    EditField(h,v+=vs,80,"COFINS",Normal,COFINS,false,StrSetSClass);
    EditField(h2,v,80,"CSLL",Normal,CSLL,false,StrSetSClass);
    EditField(h,v+=vs,80,"PIS",Normal,PIS,false,StrSetSClass);
    EditField(h2,v,80,"Simples Regime RF Rate",Normal,SimplRegimeRFRate,false,0);
    EditField(h2,v+=vs,80,"ICMS Rate for Simplified Tax Regime",Normal,ICMSRateSimplTaxRegime,false,0);
    EditField(h2,v+=vs,80,"Entity ICMS St Substitute",Normal,EntityICMSSubstitute,false,StrSetSClass);
  end;
  CheckBox(h5,v=12,0,"Closed",blockedFlag);
  CheckBox(h5,v+=16,0,"On Hold",OnHoldFlag);
  CheckBox(h5,v+=16,0,"Reminders",RemndrFlag);
//  CheckBox(h5,v+=16,0,"Collection",ColectionFlag);
  CheckBox(h5,v+=16,0,"Interest",InterestFlag);
  CheckBox(h5,v+=16,0,"On Account",OnAccount);
  if (HasPayLinkTransactions) then begin
    CheckBox(h5,v+=16,0,"Enable PayLink",PayLinkFlag);
  end;
  if (StandardHansa==false) then begin
    CheckBox(h5,v+=16,0,"No Factoring",NoFactoringFlag);
    CheckBox(h5,v+=16,0,"No Extra Tax",NoTax1);
    CheckBox(h5,v+=16,0,"Group Inv. Only",GroupInv);
    CheckBox(h5,v+=16,0,"Self Billing",SelfBilling);
    if ((HasLocalization("BRA") and HasAvalara)) then begin
      CheckBox(h5,v+=16,0,"Is ICMS St Substitute",IsICMSSubstitute);
      CheckBox(h5,v+=16,0,"ICMS Tax Payer",ICMETaxPayer);
      CheckBox(h5,v+=16,0,"Calculate INSS CPRB",CalculateINSSCPRB);
      CheckBox(h5,v+=16,0,"PIS on Payroll",PISOnPayroll);
      CheckBox(h5,v+=16,0,"Subject to Payroll Tax Relief",PayrollTaxRelief); 
      CheckBox(h5,v+=16,0,"Purchase on Free Zones PISCOFINS non cumulative rate",PurchPISCOFINSNonCumRate);
      CheckBox(h5,v+=16,0,"Apply tax relief for outbound to Free Zone",TaxRelief);
      CheckBox(h5,v+=16,0,"Use INSS CPRB to calculate gross value",UseINSSCPRB);
      CheckBox(h5,v+=16,0,"Withhold Payments from Federal Public Agency",WithholdPayments);
      CheckBox(h5,v+=16,0,"Force Withholding of ICMS on Transport Amount",WithholdICMSOnTransport);
      CheckBox(h5,v+=16,0,"Reduce the ICMS tax amount from PIS and COFINS",ICMSTaxAmtReduction);
      CheckBox(h5,v+=16,0,"Support Buyer Tax Liability for Federal Withholdings of CSLL",SBTXLFedWithholdingsCSLL);
      CheckBox(h5,v+=16,0,"Support Buyer tax Liability for Federal Withholdings of COFINS",SBTXLFedWithholdingsCOFINS);
      CheckBox(h5,v+=16,0,"Support Buyer Tax Liability for Federal Withholdings of PIS",SBTXLFedWithholdingsPIS);
      CheckBox(h5,v+=16,0,"Support Buyer Tax Liability for Federal Withholdings of IRRF",SBTXLFedWithholdingsIRRF);
      CheckBox(h5,v+=16,0,"Support Buyer Tax Liability for Federal Withholdings of INSS",SBTXLFedWithholdingsINSS);
      CheckBox(h5,v+=16,0,"Support Buyer Tax Liability for Federal Withholdings of ISS",SBTXLFedWithholdingsISS);
    end;
    if (HasLocalization("SWE")) then begin
      CheckBox(h5,v+=16,0,"Approved for Chemical Storage",ChemicalStorageApproved);
    end;
    if (HasLocalization("DEN")) then begin
      v = 16;
      CheckBox(h4,v,0,"EGO Customer",EGOFlag); v =v + 16;
    end else begin
      v = 16;
    end;
    CheckBox(h4,v=12,0,"EDI Customer",EDIFlag);
    CheckBox(h4,v+=16,0,"Allow Login",AllowLogin);
//  CheckBox(h4,v+=16,0,"Allow FTP Access",FTPLogin);
    if (HasLocalization("POL")) then begin
      CheckBox(h4,v+=16,0,"Fiscal Receipts Only",FiscalFlag);
    end else begin
      CheckBox(h4,v+=16,0,"Fiscal Invoices Only",FiscalFlag);
    end;
    CheckBox(h4,v+=16,0,"No Mass Letters",NoLetterPosting);
  end else begin
    CheckBox(h4,v=12,0,"No Mass Letters",NoLetterPosting);
  end;
  CheckBox(h4,v+=16,0,"No Mass Emailing",NoMailPosting);
  CheckBox(h4,v+=16,0,"No Environment Tax",NoRepa);
  if (HasLocalization("GBR,LTU,POL,LVA")) then begin
    CheckBox(h4,v+=16,0,"Reverse #VAT#",RvrsVAT);
  end;
  if ((HasExtTax) and (HasLocalization("ARG"))) then begin
    CheckBox(h4,v+=16,0,"No Region Perceptions",NoTax2);
  end;
  if (HasLocalization("NOR")) then begin
    CheckBox(h4,v+=16,0,"Invoice with KID",InvoiceWithKID);
  end;
  Tile(tilenr,110,false,tilenr,PLCode); tilenr = tilenr + 1;
  EditField(h,v=6,  80,"Sales Currency",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=vs ,80, "Price List",Normal,PLCode,false,PLDefSClass);
  EditField(h,v+=vs ,80, "Discount Matrix",Normal,RebCode,false,RebSClass);
  if (HasSalesman or HasSalesmanBonus) then begin
    EditField(h,v+=vs,80,"#Salesman#",Normal,SalesMan,false,UserSClass);
  end;
  EditField(h,v+=vs,80,"Default Items",Normal,CompItemCode,false,CompItemSClass);
  EditField(h2,v=6,80,"Purch. Currency",Normal,VECurncyCode,false,CurncyCodeSClass);
  EditField(h2,v+=2*vs ,80, "#Supp.# Disc. Matrix",Normal,VERebCode,false,RebSClass);
  if (HasSalesGroup) then begin
    EditField(h2,v+=vs,80,"Sales Group",Normal,SalesGroup,false,SalesGroupSClass);
  end;
  ButtonFrame(h5,v=24,150,3,"Price Based On");
  RadioButton(h5,v,0,0,"Order Date",PriceBasedOn);
  RadioButton(h5,v+=16,1,0,"Planned Del. Date",PriceBasedOn);
  RadioButton(h5,v+=16,2,0,"#Despatch# Dates",PriceBasedOn);
  Tile(tilenr,180,false,tilenr,Comment); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Comment",Normal,Comment,false,0);
  EditField(h,v+=vs,-20,"Warning on Sales",Normal,WarnText1,false,0);
  EditField(h,v+=vs,-20,"Warning on Purchase",Normal,VEWarnText1,false,0);
  EditField(h,v+=vs,-20,"Payment Note",Normal,PaymentNote,false,0);
  EditField(h,v+=vs,120,"#VAT Reg. No.#",Normal,VATNr,false,0);
  if (!HasLocalization("MYS")) then begin
    EditField(h2-20,v,120,"#Reg. No.# 1",Normal,RegNr1,false,0);
  end else begin
    h7 = h2-5;
    EditField(h7,v,120,"Service Tax No.",Normal,RegNr1,false,0);
  end;
  ButtonFrame(h5+30,v+18,143,1,"Type");
  RadioButton(h5+30,v+18,0,0,"Company",CustType);
  RadioButton(h5+110,v+18,1,0,"Person",CustType);
  HalPushButton(h5+110+110,v+15,h5+110+110+100,v+15+20,"UpdCustomerAddressCUDsm","Update Address");

  v = v + vs;
  EditField(h,v,120,"#Country #VAT Reg. No.##",Normal,CountryVATNr,false,0);
  if (!HasLocalization("MYS")) then begin
    EditField(h2-20,v,120,"#Reg. No. 2#",Normal,RegNr2,false,RegDefSClass);
  end else begin
    EditField(h7,v,120,"#Sales Tax No.#",Normal,RegNr2,false,RegDefSClass);
  end;
  EditField(h,v+=vs,60,"#VAT No.# Check Date",Normal,VATNrCheckDate,false,PasteCurDate);
  if (HasLocalization("FIN")) then begin
    EditField(h,v+=vs,120,"Prep. Reg. Check Date",ViewOnly,PrepayRegCheckDate,false,0);
  end;
  if (!HasLocalization("MYS")) then begin
    EditField(h2-20,v,120,"GLN",Normal,RecipientGLN,false,0);
  end else begin
    EditField(h7,v,120,"GLN",Normal,RecipientGLN,false,0);
  end;
  if (HasLocalization("HRV,SVN")) then begin 
    EditField(h,v+=vs,120,"Legal Form",Normal,LegalForm,false,CULegalFormSClass);
  end;
  EditField(h,v+=vs,60,"Sales #VAT# Code",Normal,VATCode,false,VATCodeSClass);
  if (HasTaxMatrix) then begin
    EditField(h2-20,v,50,"Sales Tax Temp.",Normal,TaxTemplateCode,false,TaxTemplateSClass);
  end;
  EditField(h,v+=vs,60,"Purch. #VAT# Code",Normal,VEVATCode,false,VATCodeSClass);
  if (HasTaxMatrix) then begin
    EditField(h2-20,v,50,"Purch. Tax Temp.",Normal,VETaxTemplateCode,false,TaxTemplateSClass);
  end;
  EditField(h,v+=vs,60,"Language",Normal,LangCode,false,LangSClass);
  EditField(h2-20, v,60,"Business Nature",Normal,BusinessNature,false,BNSClass);
  EditField(h,v+=vs,265,"Business Entity",Normal,BusinessEntity,false,SetSClass);
  if (HasLocalization("TUR")) then begin
    EditField(h,v+=vs,265,"Tax Office",Normal,CEICode,false,0);
  end;
  if (HasLocalization("POL")) then begin
    EditField(h,v+=vs,265,"EORI No.",Normal,EORINumber,false,0);
  end;
  if (HasLocalization("ARG")) then begin
    ButtonFrame(h+125,v+=20,177,4,"Tax Condition ");
    RadioButton(h+125,v,2,0,"Unscripted",TaxCondition);
    RadioButton(h+125,v+=16,0,0,"Local",TaxCondition);
    RadioButton(h+125,v+=16,1,0,"Multilateral Agreement",TaxCondition);
    RadioButton(h+125,v+=16,3,0,"Simplified Taxpaying Regimen",TaxCondition);
  end;  
  if (HasLocalization("BRA")) then begin
    EditField(h,v+=vs,120,"SUFRAMA Reg. No.",Normal,SuframaRegNr,false,0);
    if (HasAvalara) then begin
      EditField(h,v+=vs,120,"Admin Process No",Normal,AdminProcessNo,false,0);
      EditField(h2-20,v,120,"CEI Code",Normal,CEICode,false,0);
      EditField(h,v+=vs,120,"Construction Reg. No.",Normal,ConstrRegNo,false,0);
      EditField(h2-20,v,120,"CNAE",Normal,CNAE,false,0);
     //EditField(h,v+=vs,120,"Tax Region",Normal,TaxRegion,false,0);
      EditField(h2-20,v+=vs,120,"Tax Regime",Normal,TaxRegime,false,SetSClass);
EditField(h,v,120,"Business Code",Normal,BusinessCode,false,0); 
      EditField(h,v+=vs,120,"Activity Sector",Normal,ActivitySector,false,StrSetSClass);
      EditField(h,v+=vs,325,"CNAE Segment Code",Normal,CNAESegmentCode,false,StrSetSClass);
    end;
    EditField(h2-20,v+=vs,120,"Systax Services Receiver Profile",Normal,SystaxReceiverProfile,false,SystaxReceiverProfSClass);
    EditField(h2-20,v+=vs,120,"Systax Services Sender Profile",Normal,SystaxSenderProfile,false,SystaxSenderProfSClass);
  end;
//  EditField(h,v+=vs,120,"Channel",Normal,WebServiceChannel,false,SetSClass);
  v = 150;
  v = VATZoneButtonsLabelsENG(h5+30,v,170,16);
  Tile(tilenr,130,false,tilenr,AccAP); tilenr = tilenr + 1;
  EditField(h,v=6,50,"Creditor A/C",Normal,AccAP,false,AccSClass);
  EditField(h,v+=vs,50,"Cost A/C",Normal,AccCost,false,AccSClass);
  EditField(h,v+=vs,50,"Cred. On Acc. A/C",Normal,OnAccAccAP,false,AccSClass);
  EditField(h,v+=vs,50,"Payment Code",Normal,PaymentCode,false,PaymentCodeSClass);
  EditField(h,v+=vs,120,"Sales Tags/Objects",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,120,"Purch. Tags/Objects",Normal,VEObjects,false,ObjSClass);
  if (HasLocalization("PRT,USA")) then begin
    EditField(h,v+=vs,50,"Tax Exemption",Normal,TaxExemption,false,TaxExemptionsSClass);
  end;  
  if (HasLocalization("HRV,HUN,POL,SRB,SLV,SVN")) then begin
    ButtonFrame(h,v+=40,150,3,"Post Receipt #VAT#");
    RadioButton(h,v,0,0,"Default",IPBookVAT);
    RadioButton(h,v+=16,1,0,"Post #VAT#",IPBookVAT);
    RadioButton(h,v+=16,2,0,"Do not post #VAT#",IPBookVAT);
  end;
  EditField(h1,v=6,-20,"IBAN Code",Normal,IBANCode,false,0);
  EditField(h1,v+=vs,-20,"BIC (SWIFT)",Normal,SWIFT,false,0);
  EditField(h1,v+=vs,-20,"Account Operator",Normal,AccOperator,false,BankSClass);
  EditField(h1,v+=vs,-20,"Bank Account",Normal,BankAccount,false,0);
  EditField(h1,v+=vs,-20,"Bank Account 2",Normal,Bank,false,0);
  EditField(h1,v+=vs,50,"#Sort Code#",Normal,SortCode,false,0);
  if (HasWithholdingTax) then begin
    EditField(h1,v+=vs,120,"Withholding Payment Modes",Normal,WithPayMode,false,PMSClass);
  end;
  if (HasLocalization("FIN")) then begin
    EditField(h1,v+=vs,120,"Contract",Normal,ContractNr,false,0);
  end;
  if (HasLocalization("HRV,HUN,POL,SRB,SLV,SVN")) then begin
    ButtonFrame(h1,v+=60,150,3,"Post Payment #VAT#");
    RadioButton(h1,v,0,0,"Default",OPBookVAT);
    RadioButton(h1,v+=16,1,0,"Post #VAT#",OPBookVAT);
    RadioButton(h1,v+=16,2,0,"Do not post #VAT#",OPBookVAT);
  end;  
  if (HasLocalization("SWE")) then begin
    ButtonFrame(h1,v+=60,150,5,"Payment Channel");
    RadioButton(h1,v,kPaymentChannelSWEBankgiro,0,"Bankgiro",PayChannel);
    RadioButton(h1,v+=16,kPaymentChannelSWEPlusgiro,0,"Plusgiro",PayChannel);
    RadioButton(h1,v+=16,kPaymentChannelSWEOtherDomestic,0,"Other Domestic",PayChannel);
    RadioButton(h1,v+=16,kPaymentChannelSWESEPA,0,"SEPA Foreign",PayChannel);
    RadioButton(h1,v+=16,kPaymentChannelSWEForeign,0,"Foreign",PayChannel);
  end;
  if (HasLocalization("NOR")) then begin
    ButtonFrame(h1,v+=60,150,3,"Payment Channel");
    RadioButton(h1,v,kPaymentChannelNORDomestic,0,"Domestic",PayChannel);
    RadioButton(h1,v+=16,kPaymentChannelNORSEPA,0,"SEPA",PayChannel);
    RadioButton(h1,v+=16,kPaymentChannelNORForeign,0,"Foreign",PayChannel);
  end;
  Tile(tilenr,170,false,tilenr,ANACode); tilenr = tilenr + 1;
  StaticText(h,v=20,"E-Invoices",true);
  EditField(h,vm=(v+=10),120,"E-Invoice Account",Normal,ANACode,false,0);
  EditField(h,v+=vs,120,"Alt. E-Invoice Account",Normal,eInvAlternativeAccount,false,0);
  if (HasLocalization("FIN")) then begin
    EditField(h,v+=vs,120,"E-Invoice Operator",Normal,EInvoiceOperator,false,0);
  end;
  if (HasLocalization("TUR")) then begin
    EditField(h,v+=vs,120,"Sender Alias",ViewOnly,SenderAlias,false,0);
    EditField(h,v+=vs,120,"Receiver Alias",ViewOnly,ReceiverAlias,false,0);
  end;
  ButtonFrame(h,v+=40,163,1,"Receiving Preference");
  RadioButton(h,v,kEInvoiceRcvPreferenceDefault,0,"Default",eInvRcvPref);
  RadioButton(h,v+=16,kEInvoiceRcvPreferenceElectronic,0,"Electronic Invoice",eInvRcvPref);
  if (HasLocalization("LVA")) then begin
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"Email",eInvRcvPref);
    RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Paper Invoice",eInvRcvPref);
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceInternetBank,0,"Internet Bank",eInvRcvPref);
  end else begin
    if (HasLocalization("FIN,NOR,SWE")) then begin
      RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"Email",eInvRcvPref);
    end else begin
      RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Paper Invoice",eInvRcvPref);
    end;
  end;
  if (Modb.InterCompany) then begin
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceInternal,0,"Internal Company",eInvRcvPref);
    EditField(h+100,v,35,"",Normal,eInvRcvToCompanyCode,false,Companies2SClass);
  end;
  RadioButton(h,v+=16,kEInvoiceRcvPreferenceNone,0,"No Receiving",eInvRcvPref);
  EndFrame;
  if (HasLocalization("EST,LTU")) then begin
    ButtonFrame(h,v+=40,143,1,"Alternative Channel");
    RadioButton(h,v,kEInvoiceRcvPreferenceDefault,0,"Not used",eInvAltRcvPref);
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceElectronic,0,"Electronic Invoice",eInvAltRcvPref);
    RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Paper Invoice",eInvAltRcvPref);
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"Email",eInvAltRcvPref);
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceInternetBank,0,"Internet Bank",eInvAltRcvPref);
    EndFrame;
  end;
  vm2 = v;

  CheckBox(h1,v=vm,0,"Don't Send Electronic Invoices",eInvStop);
  if (HasLocalization("FIN")==false) then begin
    CheckBox(h1,v+=16,0,"Electronic Invoices with pdf files",eInvAttachPDF);
    ButtonFrame(h1,v+=44,160,3,"Postage for Paper Invoice");
  end else begin
    ButtonFrame(h1,v+=60,143,3,"Postage for Paper Invoice");
  end;
  RadioButton(h1,v,2,0,"Default",eInvPostage);
  RadioButton(h1,v+=16,0,0,"Priority",eInvPostage);
  RadioButton(h1,v+=16,1,0,"Economy",eInvPostage);
  if (HasLocalization("EST,LTU")) then begin
    CheckBox(h1,v+=84,0,"Electronic Invoices in short notes",eInvShortNote);
  end;
  StaticText(h,v=(vm2+40),"E-Purchase Orders",true);
  ButtonFrame(h,v+=20,163,3,"Receiving Preference");
  RadioButton(h,v,kPORcvPreferenceNone,0,"None",ePORcvPref);
  RadioButton(h,v+=16,kPORcvPreferenceDefault,0,"Default",ePORcvPref);
  if (Modb.InterCompany) then begin
    RadioButton(h,v+=16,kPORcvPreferenceInternal,0,"Internal Company",ePORcvPref);
    EditField(h+100,v,35,"",Normal,ePORcvToCompanyCode,false,Companies2SClass);
  end;
  EndFrame;

  if (StandardHansa==false) then begin
    Tile(tilenr,70,false,tilenr,WebConf); tilenr = tilenr + 1;
    EditField(h,vm=(v=6),120,"Web Conference",Normal,WebConf,true,0);
    EditField(h1,v,150,"Parent Product Category",Normal,MainDispGroup,false,WebNGProductCatSClass);
    EditField(h,v+=vs,120,"Web Start Page",Normal,WebStartPage,false,0);
    EditField(h1,v,150,"Display on the Web",Normal,WebDisplays,false,WebDisplaySClass);
    EditField(h,v+=vs,120,"Freight Code",Normal,FreightCode,false,WebFreightSClass);
    EditField(h1,v,150,"Web Tag/Object Type",Normal,WebOTCode,false,OTSClass);
  end;
  Tile(tilenr,170,false,tilenr,Comment0); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Comment",Normal,Comment0,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment1,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment2,false,0);
  EditField(h,v+=vs,-20,"Courtesy Title",Normal,Title,false,CourtesyTitlesSClass);
  EditField(h,v+=vs,-20,"Job Title",Normal,JobDesc,false,JobTitleSClass);
  EditField(h,v+=vs,-20,"Salutation 1",Normal,Salutation1,false,0);
  EditField(h,v+=vs,-20,"Salutation 2",Normal,Salutation2,false,0);
  EditField(h,v+=vs,-20,"Salutation 3",Normal,Salutation3,false,0);
  if (true) then begin//HasModHotel
    Tile(tilenr,250,false,tilenr,DocType); tilenr = tilenr + 1;
    EditField(h,v=6,100,"Doc. Type",Normal,DocType,false,CUDocTypeSClass);
    EditField(h,v+=vs,100,"First Name",Normal,FirstName,false,0);
    EditField(h2,vm,-20,"ID",Normal,PassportNr,false,0);
    EditField(h2,vm+=vs,-20,"Name in Document",Normal,NameinDocument,false,0);
//  EditFieldTL(h,vm=(v+=20),100,"Nationality",M4StrSet,Normal,423,Nationality,false,StrSetSClass);
    EditField(h,v+=vs,100,"Nationality",Normal,Nationality,false,CountrySClass);
    EditField(h,v+=20,100,"Birthday",Normal,BirthDate,false,PasteCurDate);
    EditField(h,v+=20,100,"Place of Birth",Normal,BirthPlace,false,0);
    EditField(h,v+=20,100,"Country of Birth",Normal,BirthCountry,false,CountrySClass);
    EditField(h,v+=20,100,"Profession",Normal,Profesion,false,0);
    EditField(h,v+=20,100,"Newspaper",Normal,Newspaper,false,NewspaperSClass);
    EditField(h,v+=20,100,"Passphrase",Normal,Passphrase,false,0);
    EditField(h,v+=vs,100,"Tour Operator",Normal,TourOperator,false,CUSClass);
    EditField(h,v+=vs,100,"Agent",Normal,Agent,false,CUSClass);
    EditField(h,v+=vs,100,"Def. Pay. Mode",Normal,DefGuestPayMode,false,PMSClass);
    EditField(h,v+=vs,100,"Def. Booking Org.",Normal,BookOrigin,false,BookOrgSClass);
    EditField(h,v+=vs,300,"Diet Remarks",Normal,DietRemarks,false,0);
    EditField(h,v+=vs,300,"Req. Remarks",Normal,RequirementRemarks,false,0);

    ButtonFrame(h2,v=vm+20+vs,100,2,"Sex");
    RadioButton(h2,v,0,0,"Male",Gender);
    RadioButton(h2,v+=17,1,0,"Female",Gender);

    CheckBox(h2+130,v=vm+20+vs,0,"Smoker",Smoking);
    CheckBox(h2+130,v+=17,0,"Blacklisted",Blacklist);

    ButtonFrame(h2,vm=(v+=40),100,4,"Marital Status");
    RadioButton(h2,v,0,0,"Single",MarStatus);
    RadioButton(h2,v+=17,1,0,"Married",MarStatus);
    RadioButton(h2,v+=17,2,0,"Divorced",MarStatus);
    RadioButton(h2,v+=17,3,0,"Widowed",MarStatus);

    ButtonFrame(h2=h2+130,v=vm,100,3,"Age Status");
    RadioButton(h2,v,1,0,"Child",AgeStatus);
    RadioButton(h2,v+=17,0,0,"Adult",AgeStatus);
    RadioButton(h2,v+=17,2,0,"Pensioner",AgeStatus);
  end;

  if (StandardHansa==false) then begin
    Tile(tilenr,270,false,tilenr,UserStr1); tilenr = tilenr + 1;
    v=6;h=180;
    label = UserDefined("CUVc","UserStr1");
    if (nonblank(label)) then begin
      EditField(h,v,-20,label,Normal,UserStr1,false,0);
    end;
    label = UserDefined("CUVc","UserStr2");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserStr2,false,0);
    end;
    label = UserDefined("CUVc","UserStr3");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserStr3,false,0);
    end;
    label = UserDefined("CUVc","UserStr4");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserStr4,false,0);
    end;
    label = UserDefined("CUVc","UserStr5");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserStr5,false,0);
    end;
    label = UserDefined("CUVc","UserVal1");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserVal1,false,0);
    end;
    label = UserDefined("CUVc","UserVal2");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserVal2,false,0);
    end;
    label = UserDefined("CUVc","UserVal3");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,-20,label,Normal,UserVal3,false,0);
    end;
    label = UserDefined("CUVc","UserDate1");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate1,false,PasteCurDate);
    end;
    label = UserDefined("CUVc","UserDate2");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate2,false,PasteCurDate);
    end;
    label = UserDefined("CUVc","UserDate3");
    if (nonblank(label)) then begin
      EditField(h,v+=vs,80,label,Normal,UserDate3,false,PasteCurDate);
    end;

    EditField(h,v+=vs,-20,"Address Books",Normal,AddressBooks,false,0);
  end;

  Tile(tilenr,500,false,tilenr,Math2); tilenr = tilenr + 1;
  //CheckBox(50,v=6,0,"HTML",HtmlFlag);
  StaticText(50,v=6,"Notes",true);
  TextField(60,v-5,-20,370,Math2,0);
  if (CUr.CUType!=0 and HasCharts) then begin
    Tile(tilenr,430,false,tilenr,-); tilenr = tilenr + 1;
    ChartArea(10,6,-10,390,"$CUDCLass_BIChart");
    ColourPushButton(17,400,300,420,"LaunchFlexBI","Try flex.bi for more detailed analytics",kButtonColourBabyBlue);
  end;

  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    if (UserCanReport("CustPSRn","",true) and HasCustomerStatusReport) then begin
      SpecialMenu("Customer Status",'e',0,"CUStatusCUDsm");
    end;
    if (UserCanReport("VEPSRn","",true)) then begin
      SpecialMenu("#Supplier# Status",'u',4,"VEStatusVEDsm");
    end;
    SpecialMenu("Link Existing Contact",' ',1,"AddContactCUDsm");
    SpecialMenu("Create Linked Contact Person",' ',1,"NewContactCUDsm");
    SpecialMenu("Activity",'c',2,"NewActCUDsm");
  end else begin
    if (UserCanReport("CustPSRn","",true) and HasCustomerStatusReport) then begin
      SpecialMenu("Customer Status",'e',0,"CUStatusCUDsm");
    end;
    if (UserCanReport("VEPSRn","",true)) then begin
      SpecialMenu("#Supplier# Status",'u',4,"VEStatusVEDsm");
    end;
    SpecialMenu("Link Existing Contact",' ',1,"AddContactCUDsm");
    SpecialMenu("Remove Linked Contact",' ',1,"DelContactCUDsm");
    SpecialMenu("Edit Linked Contact Data",' ',1,"EditContactCUDsm");
    SpecialMenu("Update Contact Persons",' ',6,"UpdContactAddrCUDsm");
    if (HasLocalization("ARG")) then begin
      SpecialMenu("Open Regional Perceptions",' ',1,"RPCUTaxDsm");
    end;
    if (HasLocalization("ARG,BRA,ITA,KEN,MEX,PRT,SGP,ZAF")) then begin
      SpecialMenu("Open #Supplier# Withholdings",' ',1,"WHVEDsm");
    end; //EMZ
    if (GuiType==kGuiCocoa) then begin
      SpecialMenu("Copy to local address book",' ',7,"CopyToLocalAddressBookDsm");
    end;
    if (GuiType==kGuiiPhone) then begin
      SpecialMenu("Change Password",' ',1,"ChangePasswdCUDsm");
    end;

    SpecialMenu("(-",' ',10,"");
//    SpecialMenu("Analyze with AI",' ',8,"OpenAI_AnalyzeCustomerSm");
    SpecialMenu("Research Contact with AI",' ',8,"OpenAI_ResearchContactSm");
    SpecialMenu("Research Industry with AI",' ',8,"OpenAI_ResearchIndustrySm");
    SpecialMenu("Research Competitors with AI",' ',8,"OpenAI_ResearchCompetitorsSm");

    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
//    SpecialMenu("Activity",'c',2,"NewActCUDsm");
    SpecialMenu("Linked Contact Person",' ',1,"NewContactCUDsm");
    if (StandardHansa==false) then begin
      SpecialMenu("Email",'m',5,"NewMailCUDsm");
    end;
    SpecialMenu("Tags/Objects",' ',1,"CreateObjectCUDsm");
    SpecialMenu("Random Password Mail",' ',3,"RandomPassMailCUDsm");

  end;
  EndWindow;
end;

//End of contact register customizaion 

//TM - DESK 5130 - Stock Movement Customization for ADOR 

window StockMovDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,v,vm,vs;
  Integer tilenr,f,flipnr;

  WindowBegin("#Stock# Movement",StockMovDClass,CGview,-);
  if (HasJewelleryInterface) then begin
    SetWRect(20,80,850,400);
  end else begin
    SetWRect(20,80,700,400);
  end;
  Sizeable(-1,-1,0,0);
  UseView(StockMovVc);
  ActiveFieldOnNew("SentTransDate");
  Tile(0,90,false,"",TransDate);
  v = 6; vs = 20; h = 110; h2 = 300; h3 = 500; h4 = 620;
  EditField(h,v,80, "No.",Normal,SerNr,false,TSerSClass);
  CheckBox(h2,v,0,"Reserved",Reserved);
  EditField(h3,v,80,"Reason",Normal,Reason,false,StandProblemsSClass);
  EditField(h,v+=vs,80,"Ord. Date",Normal,OrdTransDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
    if (IsEnterprise) then begin
      EditField(h2,v,80,"Sent Date",Normal,SentTransDate,false,PasteCurDate);
    end;
  end;
  EditField(h3,v,80,"Received Date",Normal,TransDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
    EditField(h,v+=vs,80, "From Location",Normal,FrLocation,false,LocationSClass);
    if (IsEnterprise) then begin
      EditField(h2,v,80,"Via Location",Normal,ThrouLocation,false,LocationSClass);
    end;
    EditField(h3,v,80,"To Location",Normal,ToLocation,false,LocationSClass);
  end;
  EditField(h,v+=vs,80,"ADOROutSM",Normal,ADOROutSM,false,ADORInQSClass); 
  EditField(h2,v,80,"ADORInSM",Normal,ADORInSM,false,ADORInQSClass);
  HalPushButton(h1+170+280,v=10+80,h1+170+380,v+20+80,"SendStockMovToADORDsm","Send To ADOR"); //TM - DESK 5130
  if (HasConsStockMoveInvoices) then begin
    EditField(h,v+=vs,80, "Invoice No.",ViewOnly,InvoiceNr,false,0);
    EditField(h2,v,80,"Invoice Date",ViewOnly,InvDate,false,0);
    if (HasLocalization("PRT")) then begin 
      EditField(h3,v,80,"Invoice Official No.",ViewOnly,InvoiceOfficialSerNr,false,0);
    end;
  end;
  tilenr = 1;
  if (HasPositions or HasModWHM or HasLocalization("PRT")) then begin
    TileButton(tilenr,"Positions"); tilenr = tilenr + 1;
  end;
  if (HasObjects) then begin
    TileButton(tilenr,"Tags/Objects"); tilenr = tilenr + 1;
  end else begin
    TileButton(tilenr,"Comment"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Items"); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Currency"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Durations"); tilenr = tilenr + 1;
  TileButton(tilenr,"Freight"); tilenr = tilenr + 1;
  TileButton(tilenr,"Address"); tilenr = tilenr + 1;
  tilenr = 1;
  if (HasPositions or HasModWHM or HasLocalization("PRT")) then begin
    Tile(tilenr,60,false,tilenr,FrPos); tilenr = tilenr + 1;
    v = 6;
    if (HasPositions) then begin
      EditField(h,v,80, "From Position",Normal,FrPos,false,UsedPosSClass);
      EditField(h2,v,80,"To Position",Normal,ToPos,false,FreePosSClass);
    end;
    if (HasModProd) then begin
      EditField(h3,v,80,"For Production",Normal,ProdSerNr,false,ProdSClass); v = v + vs;
      EditField(h3,v,150,"Route",Normal,Sorting,false,DelRouteSClass); v = v + vs;
    end;
    if ((HasLocalization("PRT") and HasModIN and HasMultiLocations) or IsStandardProduct==false) then begin 
      EditField(h3,v,150,"Type",Normal,StockMovType,false,SetSClass); v = v + vs;
    end;
    if (HasModWHM) then begin
      v = 6 + vs;
      CheckBox(h,v,0,"Manual Pick",ManualPick);
      CheckBox(h,v+=16,0,"Send To Forklift Queue",ToForkLiftQue);
    end;
  end;
  Tile(tilenr,70,false,tilenr,Comment); tilenr = tilenr + 1;
  v = 6;
  if (HasObjects) then begin
    EditField(h,v,-20,"Tags/Objects",Normal,Objects,false,ObjSClass);
    v = v + vs;
  end;
  EditField(h,v,-20,"Comment",Normal,Comment,false,0);
  EditField(h,v+=vs,135,"Official Ser. No.",Normal,OfficialSerNr,false,LegalInvNrSClass);
  EnterSkip(Math);
  Tile(tilenr,79,true,tilenr,Math); tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-50,-50,-,199);
  Flip(0);
  flipnr = 1;
  if (HasJewelleryInterface) then begin
    MatCol(1,32,"Serial No.",0,SerialNr,false,SerialNrSClass);
    EnterSkip(Quant);
    MatCol(1,130,"Item",0,ArtCode,false,INSClass);
    Flip(flipnr); flipnr = flipnr + 1;
    if (HasVarieties) then begin
      MatCol(1,200,"Req. Qty",0,OrdQuant,true,MATVARINSClass);
    end else begin
      if (HasThrouLocation) then begin
        MatCol(1,200,"Req. Qty",0,OrdQuant,true,0);
      end;
    end;
    if (HasThrouLocation) then begin
      MatCol(1,250,"Sent Qty",0,SentQuant,true,0);
    end;
    MatCol(1,300,"Rcvd. Qty",0,Quant,true,0);
    MatCol(1,350,"Description",0,Spec,false,0);
  end else begin
    MatCol(1,32,"Item",0,ArtCode,false,INSClass);
    Flip(flipnr);  flipnr = flipnr + 1;
    if (HasVarieties) then begin
      MatCol(1,86,"Req. Qty",0,OrdQuant,true,MATVARINSClass);
    end else begin
      if (HasThrouLocation or BuildProductCode=="StandardHealthcare") then begin
        MatCol(1,86,"Req. Qty",0,OrdQuant,true,0);
      end;
    end;
    if (HasThrouLocation) then begin
      MatCol(1,148,"Sent Qty",0,SentQuant,true,0);
    end;
    MatCol(1,210,"Rcvd. Qty",0,Quant,true,0);
    MatCol(1,272,"Description",0,Spec,false,0);
  end;
  MatCol(1,-260,"R. Old Unit Pr.",0,OldPrice,true,0);
  MatCol(1,-160,"R. Extra Cost",0,ExtraSCost,true,0);
  MatCol(1,-80,"R. New Unit Pr.",0,NewPrice,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasVarieties) then begin
    MatCol(1,86,"Req. Qty",0,OrdQuant,true,MATVARINSClass);
  end else begin
    if (HasThrouLocation) then begin
      MatCol(1,86,"Req. Qty",0,OrdQuant,true,0);
    end;
  end;
  if (HasThrouLocation) then begin
    MatCol(1,148,"Sent Qty",0,SentQuant,true,0);
  end;
  MatCol(1,210,"Rcvd. Qty",0,Quant,true,0);
  MatCol(1,272,"Description",0,Spec,false,0);
  MatCol(1,-260,"#S.# Old Unit Pr.",0,SentOldPrice,true,0);
  MatCol(1,-160,"#S.# Extra Cost",0,SentExtraSCost,true,0);
  MatCol(1,-80,"#S.# New Unit Pr.",0,SentNewPrice,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,86,"Description",0,Spec,false,0);
  if (HasObjects) then begin
    MatCol(1,-380,"Tags/Objects",0,Objects,false,ObjSClass);
  end;
  if (HasSerialNumbers) then begin
    MatCol(1,-280,"Serial No.",0,SerialNr,false,SerialNrSClass);
  end;
  MatCol(1,-140,"Base Price",0,BasePrice,true,0);
  MatCol(1,-40,"Coeff",0,Coefficient,false,0);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,86,"Description",0,Spec,false,0);
  if (HasSerialNumbers) then begin
    MatCol(1,-280,"Serial No.",0,SerialNr,false,SerialNrSClass);
  end;
  MatCol(1,-180,"Width",0,UnitXval,true,0);
  MatCol(1,-135,"Height",0,UnitYval,true,0);
  MatCol(1,-90,"Depth",0,UnitZval,true,0);
  MatCol(1,-45,"OR Row",0,OrderRowNr,false,0);
  if (HasPositions) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,86,"Description",0,Spec,false,0);
    MatCol(1,-180,"From Position",0,FrPosCode,false,UsedPosSClass);
    MatCol(1,-90,"To Position",0,ToPosCode,false,FreePosSClass);
  end;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Item Status",'I','I',0,"ItemStatusStockMovDsm");
  if (HasQualityControl) then begin
    RowMenuItem(0,"Quality Control",'u','u',0,"QualConFromStockMovDsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
  v = 18;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  if (HasThrouLocation) then begin
    CheckBox(20,-62,0,"Confirmed",OrdFlag); // RP
    CheckBox(20,-46,0,"Sent",SentOKFlag); //RP
  end;
  CheckBox(20,-30,0,"Received",OKFlag); 
  CheckBox(20,-15,0,"ADOR Locked",ADORLocked); // TM - DESK 5130   
  if (HasThrouLocation) then begin
    EditField(170,-20,62,"Sent Qty",Normal,TotSentQty,true,0);
  end;
  EditField(310,-20,62,"Rcvd. Qty",Normal,TotQty,true,0);
  if (HasLocalization("HRV,PRT")) then begin
    EditField(550,-40,150,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
//    SoftEditField(550,-40,150,"Tax Auth. Approval",Normal,"TaxAdminServSeal",false,0,M4Str,200);
  end;
  EditField(550,-20,100,"Non Accounted Extra Costs",Normal,OtherExtraCosts,false,0);
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    h1 = 110; vs = 20;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Currency",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Base Currency 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Base Currency",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin  
        EditField(h1,v+(vs*2),50,"Base Currency 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Rate",Normal,FrRate,true,0);
      if (HasBase2) then begin  
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Base Currency 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Base Currency 2",false);          
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Base Currency",false);    
      end;    
    end else begin
      EditField(h1,v+=vs,50,"Base Currency 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Base Currency 2",Normal,BaseRate2,true,0);
    end;
  end;
  Tile(tilenr,110,false,tilenr,PlanSendDate); tilenr = tilenr + 1;
  vs = 20; h1 = 130; h2 = 330; h3 = 560;
  EditField(h,v=6,80,"Plan. Sent Date",Normal,PlanSendDate,false,PasteCurDate);
  EnterSkip(PlanSendTime);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin 
    EditField(h2,v,40,"Plan. Duration Days",ViewOnly,PlanDurationDays,false,0);
  end;
  EditField(h,v+=vs,80,"Plan. Sent Time",Normal,PlanSendTime,false,PasteCurTime);
  EnterSkip(PlanArrDate);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin 
    EditField(h2,v,80,"Plan. Duration Hours",ViewOnly,PlanDurationTime,false,0);
  end;
  EditField(h3,v=6,80,"Plan. Arrival Date",Normal,PlanArrDate,false,PasteCurDate);
  EditField(h3,v+=vs,80,"Plan. Arrival Time",Normal,PlanArrTime,false,PasteCurTime);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin 
    EditField(h,vm=(v+=32),80,"Actual Sent Date",Normal,ActSendDate,false,PasteCurDate);
    EnterSkip(ActSendTime);
    EditField(h2,v,40,"Actual Duration Days",ViewOnly,ActDurationDays,false,0);
    EditField(h,v+=vs,80,"Actual Sent Time",Normal,ActSendTime,false,PasteCurTime);
    EnterSkip(ActArrDate);
    EditField(h2,v,80,"Actual Duration Hours",ViewOnly,ActDurationTime,false,0);
    EditField(h3,v=vm,80,"Actual Arrival Date",Normal,ActArrDate,false,PasteCurDate);
    EditField(h3,v+=vs,80,"Actual Arrival Time",Normal,ActArrTime,false,PasteCurTime);
  end;
  Tile(tilenr,110,false,tilenr,FreightCode); tilenr = tilenr + 1;
  vs = 20; h2 = 255;
  EditField(h=130,v=6,60,"Freight Company",Normal,FreightCode,false,FreightCompanySClass);
  EditField(h2,v,-40,"#Reg. No.#",Normal,FreightCompanyRegNr,false,0);
  EditField(h,v+=vs,-40,"Name",Normal,FreightCompany,false,0);
  EditField(h,v+=vs,-40,"Truck Information",Normal,TruckInfo,false,0);
  EditField(h,v+=vs,-40,"Driver",Normal,Driver,false,0);
  EditField(h,v+=vs,-40,"CMR",Normal,CMRText,false,0);
  if (HasNumberSeries and HasLocalization("PRT")) then begin
    if (HasOfficialSerNr) then begin
      EditField(h,v+=vs,100,"Official Ser No. 2",Normal,OfficialSerNr2,false,0);
      EditField(h2+100,v,135,"Status",Normal,Status,false,SetSClass);
    end;    
  end;
  Tile(tilenr,200,false,tilenr,FrAddr0); tilenr = tilenr + 1;
  vs = 20; h2 = 255;
  EditField(h=130,v=6,-40,"From Address",Normal,FrAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr4,false,0);
  if (HasThrouLocation) then begin
    EditField(h,v+=vs,-40,"Via Address",Normal,ThrouAddr0,false,0);
    EditField(h,v+=vs,-40,"",Normal,ThrouAddr1,false,0);
    EditField(h,v+=vs,-40,"",Normal,ThrouAddr2,false,0);
    EditField(h,v+=vs,-40,"",Normal,ThrouAddr3,false,0);
    EditField(h,v+=vs,-40,"",Normal,ThrouAddr4,false,0);
  end;
  EditField(h,v+=vs,-40,"To Address",Normal,ToAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr4,false,0);
  SpecialMenu("Cost Price in Old Unit Price",'=',0,"StockMovFillFIFODsm");
  SpecialMenu("Item Search",'f',1,"ItemSearchDsm");
  if (HasIntegratedNL) then begin
    SpecialMenu("Open #NL# Transaction Sent",' ',2,"OpenTRFromStockMovSent");
    SpecialMenu("Open #NL# Transaction Received",'t',3,"OpenTRFromStockMov");
  end;
  if (HasLocalization("PRT")) then begin
    if (HasETaxDocuments) then begin
      SpecialMenu("Send to Tax Authorities",'',10,"EShipPRTDsm");
    end;
  end;
   if (HasConsStockMoveInvoices) then begin 
     SpecialMenu("Print #Stock# Movement Invoices",'p',3,"PrintStockMovInvoices");   
   end;   
  if (HasLocalization("PRT")) then begin  
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
    SpecialMenu("Invoice",'F',5,"IVFromGlobalStockMovDsm");
  end;
  EndWindow;
end;
