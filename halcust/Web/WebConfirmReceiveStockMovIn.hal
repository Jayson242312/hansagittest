//TM - here we assume that we are going to receive a post request in JSON data format 

global 
webpublic //remember to comment this out and do what we did before for security StockMovrposes 
updating procedure WebConfirmReceiveStockMovIn()
begin 
  area arequest; //area variable is a big block of memory, containing strings 
  record StockMovVc StockMovr,oldStockMovr;
  record LocationVc Locationr; 
  row StockMovVc StockMovrw;  
  json jdata; //will receive the parsed json data from the area 
  longint sernr; 
  string 20 artcode; 
  integer quant,rwcnt,i,j,cnt,compno,oldcompno; 
  string 200 reply_code; 
  
  //an area is like a "file" which is in memory 
  //it has HAL premitives which you can use on this data type e.g pick a file from filesystem to area etc, count lines in an area, 

  compno = 3; //Greg's Motor Spares compno is 3 
  oldcompno = CurrentCompany;
  SetServerCompany(compno);

  if(CurrentCompany == 3) then begin 

  //1. 
    WebGetPostData(arequest); //it returns an area populated with the posted data 
    WriteAreaToFile(arequest,"tmp/" & GetCurTick & ".json",0); //dump the request  i received to a new file as a way of confirming that you did receive the request 
    //now we assume that we are going to get a JSON formatted text not an xml formatted test from the other system e.g. ADOR We can use postmap to simulate that 
    jdata = ParseJsonArea(arequest); //i will parse the json area now we can work with the json data the same way we did when we loaded it from a file 
    //{
       // "sernr":5,
        //"matrix":[
          //{"artcode":"9101000035"},
          //{"quant":10}
        //]
    //}

    //now we need to parse the above json 
    sernr = StringToLongInt(JSONGet(jdata,"sernr")); //parse the sernr
    
    //now you need to read the the record based on its serial number and update it 
    StockMovr.SerNr = sernr; 
    StockMovr.TotQty = 0; 
    if(ReadFirstMain(StockMovr,1,true)) then begin //read the record that matches the serial number 
      Locationr.Code = StockMovr.ToLocation; 
      if(ReadFirstMain(Locationr,1,true)) then begin 
        if(Locationr.ADORControl == 1) then begin 
            if(StockMovr.OrdFlag == 1 and StockMovr.SentOKFlag == 1 and StockMovr.OKFlag != 1) then begin 
              RecordCopy(oldStockMovr,StockMovr); //copies the Goods Receipt Record to the oldGRV variable 
                  
              cnt = JSONCountChildren(jdata,"matrix"); //counting posted matrix data. 
              for(i=0; i<cnt; i=i+1) begin 
                //ClearRow(StockMovr,StockMovrw,1); 
                artcode = JSONGet(jdata,"matrix/[" & i & "]/artcode");
                quant = StringToInt(JSONGet(jdata,"matrix/[" & i & "]/quant"));
                //-----
                rwcnt = MatRowCnt(StockMovr);
                  for (j = 0; j < rwcnt; j = j + 1) begin
                        MatRowGet(StockMovr, j, StockMovrw); //get row from record 
                        if(artcode != "" and quant>0) then begin 
                          if(StockMovrw.ArtCode == artcode) then begin //where record itemcode matches posted itemcode update the quantities 
                            StockMovrw.Quant = quant; 
                            StockMovr.TotQty = StockMovr.TotQty + StockMovrw.Quant; 
                          // StockMovrw.Sum = StockMovrw.UPrice * quant; //and the new sum 
                            MatRowPut(StockMovr,j,StockMovrw);
                          end; 
                        end; 
                  end; 
                //----
              
              end; 
              StockMovr.TransDate = StringToDate(JSONGet(jdata,"transdate")); //format 28/02/2018 
              StockMovr.OKFlag = 1; //Received
              
              if(RecordUpdate(oldStockMovr,StockMovr,true) == 0) then begin 
                reply_code = "OK"; 
              end else begin   
                  reply_code = "UNABLE_TO_UPDATE_THE_INBOUND_STOCK_MOVEMENT"; 
              end; 
            end else begin 
              reply_code = "INBOUND_STOCK_MOVEMENT_NOT_YET_CONFIRMED_AND_SEND"; 
              //LogText(0,"Inbound Stockmovement not yet confirmed and send"); 
            end; 
        end else begin 
            reply_code = "TO_LOCATION_IS_NOT_ADOR_CONTROLLED"; 
              //LogText(0,"ToLocation is not ADOR Controlled");
        end; 
      end; 
    end else begin 
      reply_code = "STOCK_MOVEMENT_DOES_NOT_EXIST"; //if GRV doesnt exist 
    end; 

    //since this is a request to change something in the database, we have to reply and say data was updated 
    //or maybe return an error code and you can log it so that you know exactly so there is a
    //lets create a string reply_code 

    //REPLY 
    WebSetContentType("Content-Type:application/json"); 
    WebOuTstring("{\"replycode\":\"" & reply_code & "\"}"); 

   end; 

  if(CurrentCompany != oldcompno) then begin 
    ResetCompany(oldcompno); //resets back to old company 
  end; 
  LogText(0, "WebConfirmReceiveStockMovIn");
  return; 
end; 