//TM - here we assume that we are going to receive a post request in JSON data format 

global 
webpublic //remember to comment this out and do what we did before for security purposes 
updating procedure WebConfirmGRVOLD()
begin 
  area arequest; //area variable is a big block of memory, containing strings 
  record PUVc PUr,oldPUr;
  record LocationVc Locationr;
  record WeigAvVc WeigAvr; 
  record VATCodeBlock VATr; 
  row VATCodeBlock VATrw;  
  row PUVc PUrw;  
  json jdata; //will receive the parsed json data from the area 
  longint sernr; 
  string 20 artcode; 
  integer quant,okflag,rwcnt,i,j,cnt,compno,oldcompno; 
  string 200 reply_code;
  val vatpercent,vat,total,rowtotal;  

  compno = 3; //Greg's Motor Spares compno is 3 
  oldcompno = CurrentCompany;
  SetServerCompany(compno);

  if(CurrentCompany == 3) then begin 
              //getting the VAT from the VAT Block 
              BlockLoad(VATr); 
                rwcnt = MatRowCnt(VATr); 
                for(i=0; i<rwcnt; i = i+1) begin 
                  MatRowGet(VATr,i,VATrw); 
                  if(VATrw.VATCode == "3") then begin 
                    vatpercent = Round(VATrw.ExVatpr,DefaultValRoundoff); 
                  end; 
                end; 
              //
          
          //an area is like a "file" which is in memory 
          //it has HAL premitives which you can use on this data type e.g pick a file from filesystem to area etc, count lines in an area, 

          //1. 
            WebGetPostData(arequest); //it returns an area populated with the posted data 
            WriteAreaToFile(arequest,"tmp/" & GetCurTick & ".json",0); //dump the request  i received to a new file as a way of confirming that you did receive the request 
            //now we assume that we are going to get a JSON formatted text not an xml formatted test from the other system e.g. ADOR We can use postmap to simulate that 
            jdata = ParseJsonArea(arequest); //i will parse the json area now we can work with the json data the same way we did when we loaded it from a file 
            //{
              // "sernr":5,
                //"matrix":[
                  //{"artcode":"9101000035"},
                  //{"quant":10}
                //]
            //}

            //now we need to parse the above json 
            sernr = StringToLongInt(JSONGet(jdata,"sernr")); //parse the sernr
            
            //now you need to read the the record based on its serial number and update it 
            Pur.SumQuant = 0; 
            PUr.SerNr = sernr; 
            // LogText(0,ReadFirstMain(PUr,1,true) & "");  
            if(ReadFirstMain(PUr,1,true)) then begin //read the record that matches the serial number 
              Locationr.Code = Pur.Location; 
              if(ReadFirstMain(Locationr,1,true)) then begin 
                if(Locationr.ADORControl == 1) then begin 
                    if(PUr.OKFlag != 1) then begin 
                        RecordCopy(oldPUr,PUr); //copies the Goods Receipt Record to the oldGRV variable 
                            
                        cnt = JSONCountChildren(jdata,"matrix"); //counting posted matrix data. 
                        for(i=0; i<cnt; i=i+1) begin 
                          //ClearRow(PUr,PUrw,1); 
                          artcode = JSONGet(jdata,"matrix/[" & i & "]/artcode");
                          quant = StringToInt(JSONGet(jdata,"matrix/[" & i & "]/quant"));
                          //-----
                          rwcnt = MatRowCnt(PUr);
                            for (j = 0; j < rwcnt; j = j + 1) begin
                                  MatRowGet(PUr, j, PUrw); //get row from record 
                                  if(artcode != "" and quant>0) then begin 
                                    if(PUrw.ArtCode == artcode) then begin //where record itemcode matches posted itemcode update the quantities 
                                      Purw.Quant = quant; 
                                      //Purw.Sum = Purw.UPrice * quant; //and the new sum 
                                      MatRowPut(PUr,j,Purw);
                                    end; 
                                  end; 
                            end; 
                          //----
                          //-- calculating new totals 
                          PUr.SumQuant = 0; 
                          PUr.SumCostPrice = 0; 
                          rwcnt = MatRowCnt(PUr);
                          for (j = 0; j < rwcnt; j = j + 1) begin
                                MatRowGet(PUr, j, PUrw); //get row from record 
                                  PUr.SumQuant = PUr.SumQuant + PUrw.Quant; 
                                  rowtotal = PUrw.Quant * PUrw.UPrice; 
                                  PUrw.Sum = Round(rowtotal,DefaultValRoundoff); 
                                  PUr.SumCostPrice = PUr.SumCostPrice + PUrw.Sum; 
                                  vat = (vatpercent * PUr.SumCostPrice)/100; 
                                  PUr.VATVal = Round(vat,DefaultValRoundoff); 
                                  PUr.PayVal = PUr.SumCostPrice + PUr.VATVal;
                                  // RetPUrw.Sum = RetPUrw.UPrice * quant; //and the new sum 
                                    MatRowPut(PUr,j,PUrw);
                          end; 
                        //----
                        
                        end; 
                        PUr.Comment = JSONGet(jdata,"comment");
                        //PUr.OKFlag = 1; 
                        
                        if(RecordUpdate(oldPUr,PUr,true) == 0) then begin 
                          reply_code = "OK"; 
                        end else begin   
                            reply_code = "UNABLE_TO_UPDATE_THE_GRV"; 
                        end; 
                    end else begin 
                        reply_code = "GRV_ALREADY_CONFIRMED"; 
                        // LogText(0,"GRV already OKd"); 
                      end; 
                  end else begin 
                    reply_code = "LOCATION_IS_NOT_ADOR_CONTROLLED"; 
                      // LogText(0,"Location is not ADOR Controlled");
                end; 
                end; 
            end else begin 
              reply_code = "GRV_DOES_NOT_EXIST"; //if GRV doesnt exist 
            end; 

            //since this is a request to change something in the database, we have to reply and say data was updated 
            //or maybe return an error code and you can log it so that you know exactly so there is a
            //lets create a string reply_code 

            //REPLY 
            WebSetContentType("Content-Type:application/json"); 
            WebOuTstring("{\"replycode\":\"" & reply_code & "\"}"); 
  end; 

  if(CurrentCompany != oldcompno) then begin 
    ResetCompany(oldcompno); //resets back to old company 
  end; 
  LogText(0, "WebConfirmGRVOLD");
  return; 
end; 
