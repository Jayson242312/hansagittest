//TM - here we assume that we are going to receive a post request in JSON data format 

global 
webpublic //remember to comment this out and do what we did before for security RetPUrposes 
updating procedure WebConfirmReturnToSupplier()
begin 
  area arequest; //area variable is a big block of memory, containing strings 
  record RetPUVc RetPUr,oldRetPUr;
  record LocationVc Locationr; 
  row RetPUVc RetPUrw;  
  json jdata; //will receive the parsed json data from the area 
  longint sernr; 
  string 20 artcode; 
  integer quant,rwcnt,i,j,cnt,compno,oldcompno; 
  string 200 reply_code; 
  
  //an area is like a "file" which is in memory 
  //it has HAL premitives which you can use on this data type e.g pick a file from filesystem to area etc, count lines in an area, 

  compno = 3; //Greg's Motor Spares compno is 3 
  oldcompno = CurrentCompany;
  SetServerCompany(compno);

  if(CurrentCompany == 3) then begin 


  //1. 
    WebGetPostData(arequest); //it returns an area populated with the posted data 
    WriteAreaToFile(arequest,"tmp/" & GetCurTick & ".json",0); //dump the request  i received to a new file as a way of confirming that you did receive the request 
    //now we assume that we are going to get a JSON formatted text not an xml formatted test from the other system e.g. ADOR We can use postmap to simulate that 
    jdata = ParseJsonArea(arequest); //i will parse the json area now we can work with the json data the same way we did when we loaded it from a file 
    //{
       // "sernr":5,
        //"matrix":[
          //{"artcode":"9101000035"},
          //{"quant":10}
        //]
    //}

    //now we need to parse the above json 
    sernr = StringToLongInt(JSONGet(jdata,"sernr")); //parse the sernr
    
    //now you need to read the the record based on its serial number and update it 
    RetPUr.SerNr = sernr; 
    RetPUr.SumQuant = 0; 
    RetPUr.SumCostPrice = 0; 
    if(ReadFirstMain(RetPUr,1,true)) then begin //read the record that matches the serial number 
      Locationr.Code = RetPUr.Location; 
      if(ReadFirstMain(Locationr,1,true)) then begin
        if(Locationr.ADORControl == 1) then begin 
            if(RetPUr.OKFlag !=1) then begin 
              RecordCopy(oldRetPUr,RetPUr); //copies the Goods Receipt Record to the oldGRV variable 
                  
              cnt = JSONCountChildren(jdata,"matrix"); //counting posted matrix data. 
              for(i=0; i<cnt; i=i+1) begin 
                //ClearRow(RetPUr,RetPUrw,1); 
                artcode = JSONGet(jdata,"matrix/[" & i & "]/artcode");
                quant = StringToInt(JSONGet(jdata,"matrix/[" & i & "]/quant"));
                //-----updating with new items and quantities 
                rwcnt = MatRowCnt(RetPUr);
                  for (j = 0; j < rwcnt; j = j + 1) begin
                        MatRowGet(RetPUr, j, RetPUrw); //get row from record 
                        if(artcode != "" and quant>0) then begin 
                          if(RetPUrw.ArtCode == artcode) then begin //where record itemcode matches posted itemcode update the quantities 
                            RetPUrw.Quant = quant; 
                           // RetPUr.TotQty = RetPUr.TotQty + RetPUrw.Ship; 
                          // RetPUrw.Sum = RetPUrw.UPrice * quant; //and the new sum 
                            MatRowPut(RetPUr,j,RetPUrw);
                          end; 
                        end; 
                  end; 
                //----
              
              end; 
              //-- calculating new totals 
               rwcnt = MatRowCnt(RetPUr);
                RetPUrw.FIFORowVal = 0; 
                  for (j = 0; j < rwcnt; j = j + 1) begin
                        MatRowGet(RetPUr, j, RetPUrw); //get row from record 
                           RetPUr.SumQuant = RetPUr.SumQuant + RetPUrw.Quant; 
                           RetPUrw.FIFORowVal = RetPUrw.PUCostPrice * RetPUrw.Quant; 
                           RetPUr.SumCostPrice = RetPUr.SumCostPrice + RetPUrw.FIFORowVal; 
                          // RetPUrw.Sum = RetPUrw.UPrice * quant; //and the new sum 
                            MatRowPut(RetPUr,j,RetPUrw);
                  end; 
                //----

              RetPUr.OKFlag = 1; //ok 
                          
              if(RecordUpdate(oldRetPUr,RetPUr,true) == 0) then begin 
                reply_code = "OK"; 
              end else begin   
                  reply_code = "UNABLE_TO_UPDATE_THE_RETURN_TO_SUPPLIER"; 
              end; 
            end else begin 
              reply_code = "RETURN_TO_SUPPLIER_ALREADY_OKd"; 
              // LogText(0,"Return to supplier already OKd"); 
            end; 
        end else begin 
            reply_code = "LOCATION_IS_NOT_ADOR_CONTROLLED"; 
            // LogText(0,"Location is not ADOR Controlled");
        end; 
      end; 
    end else begin 
      reply_code = "RETURN_TO_SUPPLIER_DOES_NOT_EXIST"; //if GRV doesnt exist 
    end; 

    //since this is a request to change something in the database, we have to reply and say data was updated 
    //or maybe return an error code and you can log it so that you know exactly so there is a
    //lets create a string reply_code 

    //REPLY 
    WebSetContentType("Content-Type:application/json"); 
    WebOuTstring("{\"replycode\":\"" & reply_code & "\"}"); 

  end; 

  if(CurrentCompany != oldcompno) then begin 
    ResetCompany(oldcompno); //resets back to old company 
  end; 
  LogText(0, "WebConfirmReturnToSupplier");
  return; 
end; 