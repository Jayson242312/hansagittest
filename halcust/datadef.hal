//  VER: 7.1 71120450 (2013-10-13) - AG 2013-11-13 - upgraded
//  VER 6.4 64241500
// changed on 07.08.2017

//SourceFile("halcust/stdImports",0); // EVS: GREG-1 this folder is not present; although there is a folder under halcust/Imports/stdImports
SourceFile("halcust/level0/Documents",0);
SourceFile("halcust/level0/Maint",0);
SourceFile("halcust/level0/RActions",0);
SourceFile("halcust/level0/Reports",0);
SourceFile("halcust/level0/Tools",0);
SourceFile("halcust/level0/WActions",0);
SourceFile("halcust/level0/english",0);
SourceFile("halcust/level0/Imports",0);
SourceFile("halcust/Exports",3);
SourceFile("halcust/Exports/jeExports",3);
SourceFile("halcust/Imports",3);
SourceFile("halcust/Maint",3);
SourceFile("halcust/RActions",3);
SourceFile("halcust/Reports",3);
SourceFile("halcust/Tools",3);
SourceFile("halcust/WActions",3);
SourceFile("halcust/english",3);
SourceFile("halcust/ADOR/Maint",3);
SourceFile("halcust/ADOR/Tools",3);
SourceFile("halcust/Web",3);
SourceFile("halcust/json/english",3);
SourceFile("halcust/json/south-african",3); 
//DCT
SourceFile("halcust/DCT",3);
SourceFile("halcust/DCT/Imports",3);
SourceFile("halcust/DCT/DataDeletions",3);

//Intuendi
SourceFile("halcust/Exports/IExports",3);

Exec_File("halcust/datadefTE.hal");
Exec_File("halcust/datadefEN.hal");
Exec_File("halcust/datadefBI.hal");
Exec_File("halcust/datadefJSON.hal");

procedure INVcDefinition()
begin

  RecordField(OldUPrice1,M423Val,0,0);//VN
  RecordField(OldInPrice,M45Val,0,0);//VN
  RecordField(BasePriceComp,M4Int,0,0);//VN
  RecordField(NoOfLabels,M4Long,0,0);//VN
  RecordField(Redundant,M4Int,0,0);//VN
  RecordField(SendToADORf,M4Int,0,0);//RGS: HAL-943
  return;
end;

procedure CUVcDefinition() //TM - Desk 5130 
begin

  RecordField(SendToADORf,M4Int,0,0);
  
  return;
end;

procedure StockMovVcDefinition() //TM - Desk 5130 
begin

  RecordField(SendToADORf,M4Int,0,0);
  
  return;
end;


procedure ITVcDefinition()
begin

  RecordField(MrkUpPerc,M4Val,0,0); //VN
  RecordField(BasePriceComp,M4Int,0,0); //VN
  return;  
end;

begin
  
  // EVS: GREG-14 fix
  RecordAddBegin(SHVc,"gmsshvc");
  DisableIndex("SerNr");
  MainKeyBegin(SerNr,0);
  KeySegment(SerNr);
  EndRecordAdd;
  // :EVS
  
  RecordAddBegin(INVc,"gmsartikel580"); 
  INVcDefinition;
  EndRecordAdd;

  //RP ABC Start
  RecordAddBegin(INVc,"gmsINVcABC"); 
    RecordField(ABCUPrice,M423Val,0,0);//RP
    RecordField(ABC,M4Str,10,0);//RP
  EndRecordAdd;
  //RP End ABC

  //TM - Desk 5130 
  RecordAddBegin(CUVc,"gmsador5130");
  CUVcDefinition;
  EndRecordAdd;

  //TM - Desk 5130 
  //RecordAddBegin(StockMovVc,"gmssmador5130");
 // StockMovVcDefinition;
  //EndRecordAdd;

  
  RecordAddBegin(LocalINVc,"GSLocalINVc80");
  INVcDefinition;
  EndRecordAdd;
  
  RecordAddBegin(ITVc,"gmsITVc280");
  ITVcDefinition;
  EndRecordAdd;

  //RP Start
  // RecordAddBegin(ITVc,"gmsITVc281");
  //   RecordField(AXMrkUpPerc,M4Val,0,0); 
  //   RecordField(AYMrkUpPerc,M4Val,0,0); 
  //   RecordField(AZMrkUpPerc,M4Val,0,0); 

  //   RecordField(BXMrkUpPerc,M4Val,0,0); 
  //   RecordField(BYMrkUpPerc,M4Val,0,0); 
  //   RecordField(BZMrkUpPerc,M4Val,0,0); 
    
  //   RecordField(CXMrkUpPerc,M4Val,0,0); 
  //   RecordField(CYMrkUpPerc,M4Val,0,0); 
  //   RecordField(CZMrkUpPerc,M4Val,0,0); 
  // EndRecordAdd;
  //RP End

  RecordAddBegin(LocalITVc,"gmsLocalITVc80");
  ITVcDefinition;
  EndRecordAdd;
  
  RecordAddBegin(PUVc,"gmspurchase280");
  RecordField(Reason,M4Code,20,0);//VN added
  RecordField(ADORLocked,M4Mark,0,0); // RGS: HAL-944 
  RecordField(ADORGRV,M4Long,0,0); //
  EndRecordAdd;

  RecordAddBegin(StockMovVc,"gmsador5130");
  RecordField(ADORLocked,M4Mark,0,0); // TM - Desk 5130 
  RecordField(ADOROutSM,M4Long,0,0);
  RecordField(ADORInSM,M4Long,0,0);
  EndRecordAdd;

  RecordAddBegin(SHVc,"gmsadorsh5130");
  RecordField(ADORLocked,M4Mark,0,0); // TM - Desk 5130 
  RecordField(ADORDel,M4Long,0,0); // TM - Desk 5130
  EndRecordAdd;

  RecordAddBegin(RetVc,"gmsadorret5130");
  RecordField(ADORLocked,M4Mark,0,0); // TM - Desk 5130 
  EndRecordAdd;

  RecordAddBegin(RetPUVc,"gmsadorRetPU5130");
  RecordField(ADORLocked,M4Mark,0,0); // TM - Desk 5130 
  EndRecordAdd;

  RecordAddBegin(POVc,"gmsadorPO5130");
  RecordField(ADORLocked,M4Mark,0,0); // TM - Desk 5130 
  EndRecordAdd; 
   
  RecordAddBegin(StandProblemVc,"gmsStdProb80");
  RecordField(Account,M4Code,100,0);//VN added
  EndRecordAdd;
  
  // EVS: GREG-1 removed KPIDefVc, because there were no customisations and 8.x doesn't 
  // allow standard register defs in halcust
  
  RecordAddBegin(MinPerLocVc,"gmsmplvc80");
  //VN>>
  RecordField(ShelfCode,M4Str,60,0);
  RecordField(SalesGroup,M4Code,5,SalesGroupVc);
  FieldIsGroup(SalesGroup);
  RecordField(SalesMan,M4Code,10,UserVc);
  FieldIsUser(SalesMan);
  RecordField(ABC,M4Str,10,0); //TM 
    
  SubsetKeyBegin2(MainKey2);
  StoreInBaseKey;
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(SalesMan);
  KeySegment(ItemCode);
  KeySegment(Location);
  KeySegment(Position);
  KeySegment(ShelfCode);
    
  SubsetKeyBegin2(ItemCode);
  StoreInBaseKey;
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(SalesMan);
  KeySegment(ItemCode);
  KeySegment(Location);
  KeySegment(ShelfCode);
    
  SubsetKeyBegin2(Location);
  StoreInBaseKey;
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(SalesMan);
  KeySegment(Location);
  KeySegment(ItemCode);
  KeySegment(ShelfCode);
  
  SubsetKeyBegin2(ShelfCode);
  StoreInBaseKey;
  AppendFieldToKeyName(SalesGroup);
  AppendFieldToKeyName(SalesMan);
  KeySegment(ShelfCode);
  KeySegment(ItemCode);
  KeySegment(Location);
  //VN<<

  //SubsetKeyBegin2(ABC);
  //StoreInBaseKey;
  //AppendFieldToKeyName(SalesGroup);
  //AppendFieldToKeyName(SalesMan);
 //KeySegment(ABC);
 // KeySegment(ShelfCode);
 //KeySegment(ItemCode);
 // KeySegment(Location);

  EndRecordAdd;
  
  RecordAddBegin(OPVc,"gmsOPVc80");
  RecordField(Paid,M4Int,0,0);//VN 
  EndRecordAdd;
  
  RecordAddBegin(IVVc,"GMSIV");
  RecordField(BrNum,M4Long,0,0);//MDS GREG-9
  RecordField(BrName,M4Str,200,0);
  RecordField(ClientName,M4Str,200,0);
  RecordField(ClCellNum,M4Long,0,0);
  RecordField(PolicyNum,M4Str,60,0);
  RecordField(ClaimNum,M4Str,60,0);
  RecordField(OrderNum,M4Str,60,0);
  RecordField(VehRegNr,M4Str,60,0);
  RecordField(VehDesc,M4Str,200,0);
  DisableIndex("SerNr");
  MainKeyBegin(SerNr,1);
  StoreInBaseKey;
  AppendListFieldToKeyName(SalesGroup);
  AppendListFieldToKeyName(SalesMan);
  KeySegment(SerNr);
  EndRecordAdd;
  
  RecordAddBegin(ORVc,"GMSOR");
  RecordField(BrNum,M4Long,0,0);//MDS GREG-9
  RecordField(BrName,M4Str,200,0);
  RecordField(ClientName,M4Str,200,0);
  RecordField(ClCellNum,M4Long,0,0);
  RecordField(PolicyNum,M4Str,60,0);
  RecordField(ClaimNum,M4Str,60,0);
  RecordField(OrderNum,M4Str,60,0);
  RecordField(VehRegNr,M4Str,60,0);
  RecordField(VehDesc,M4Str,200,0);
  EndRecordAdd;

  RecordAddBegin(LocationVc,"gmslocation280");
  RecordField(ViaLocation,M4Int,0,0);//VN ADDED
  RecordField(ADORControl,M4Mark,0,0); // KOS: HAL-942
  EndRecordAdd;

  RecordAddBegin(IntORVc,"GMSSM");
  RecordField(OKFlag,M4Mark,0,0); // TM - GMS SM 
  KeyBegin(OKFlag);
  KeySegment(OKFlag);
  KeySegment(SerNr);
  EndRecordAdd;
  
// RecordAddBegin(QTVc,"GMSQT");
  // RecordField(LoyaltyCardNr,M4Code,20,0); // RP Added
  // KeyBegin(LoyaltyCardNr);
  // KeySegment(LoyaltyCardNr);
  // KeySegment(SerNr);
  // EndRecordAdd;
  
  // ==========================================   CUSTOM DATADEFS BELOW THIS LINE   ==========================================//

  //Logistics
  // RecordBegin("WaybillVc",-,"");
  //   RecordField(SerNr,M4Long,0,0);
  //   RecordField(RecordType,M4Str,200,0);
  //   RecordField(RecordNr,M4Long,0,0);
  //   RecordField(WaybillNo,M4Code,255,0);
  //   RecordField(InvNr,M4Long,0,0);
  //   RecordField(TransDate,M4Date,0,0);

  //   RecordField(FreightCode,M4Code,5,FreightCompanyVc);
  //   RecordField(FrLocation,M4Code,10,LocationVc);
  //   RecordField(ThrouLocation,M4Code,10,LocationVc);
  //   RecordField(ToLocation,M4Code,10,LocationVc);
  //   RecordField(Service,M4Code,10,WaybillServicesBlock);
  //   RecordField(Pieces,M4Qty,0,0);
  //   RecordField(ActualMass,M4Qty,0,0);
  //   RecordField(ChargeMass,M4Qty,0,0);

  //   RecordField(BasicCharge,M4Val,0,0);
  //   RecordField(SubTotal,M4Val,0,0);
  //   RecordField(VAT,M4Val,0,0);
  //   RecordField(Sum0,M4Val,0,0);
  //   RecordField(Sum1,M4Val,0,0);
  // EndRecord;

  // BlockBegin(WaybillServicesBlock,-,"");
  //   RecordField(Code,M4Code,20,0);
  //   RecordField(Comment,M4Str,60,0);
  // EndBlock; 

  //CliqView
  BlockBegin(SmartViewCompBlock,-,"");
  BlockInServer;
  BlockForAllCompanies;
  RecordField(Math,M4Matrix,0,0);
  ArrayBegin(Math,SmartViewCompRowType,1);
  ArrayField(CompCode,M4Code,10,0);
  ArrayField(CompName,M4Str,60,0);
  EndArray;
  EndBlock;

  BlockBegin(JEBlock,BackupType,"");
  BlockInServer;
  BlockForAllCompanies;
  RecordField(Path,M4Str,250,0);
  RecordField(Months,M4Int,0,0);
  RecordField(Path2,M4Str,250,0);
  RecordField(JEPeriod,M4Date,0,0);
  EndBlock;
  
  RecordBegin(ReasonLimitGRVc,-,"");
  RecordField(UserCode,M4Code,20,UserVc);
  RecordField(UserName,M4Str,100,0);
  RecordField(Reasons,M4Str,255,0);
  MainKeyBegin(UserCode,0);
  KeySegment(UserCode);
  KeyBegin(UserName);
  KeySegment(UserName);
  KeySegment(UserCode);
  EndRecord;

  RecordBegin(ReasonLimitSDVc,-,"");
  RecordField(UserCode,M4Code,20,UserVc);
  RecordField(UserName,M4Str,100,0);
  RecordField(Reasons,M4Str,255,0);
  MainKeyBegin(UserCode,0);
  KeySegment(UserCode);
  KeyBegin(UserName);
  KeySegment(UserName);
  KeySegment(UserCode);
  EndRecord;
  
  //  AG 2013-06-05 -- ORB001-130523-001 - Inventory Exports Rules  >>
  RecordBegin(InvExpRulesVc,-,"");
  RecordField(Location,M4Code,10,LocationVc);
  RecordField(Math,M4Matrix,0,0);
  RecordField(ExclNoSales,M4Mark,0,0);
  ArrayBegin(Math,-,1);
  ArrayField(Group,M4UStr,30,ITVc);
  ArrayField(Description,M4Str,255,0);
  EndArray;
  MainKeyBegin(Location,0);
  KeySegment(Location);
  KeyBegin(ExclNoSales);
  KeySegment(ExclNoSales);
  KeySegment(Location);
  EndRecord;
  //  AG 2013-06-05 <<
  
   //  AG 2013-06-05 -- ORB001-130523-001 - Last Sold Date  >>
  RecordBegin(LastSoldDateVc,-,"");
  RecordField(Location,M4Code,10,LocationVc);
  RecordField(ItemCode,M4Code,20,INVc);
  RecordField(LastDate,M4Date,0,0);
  RecordField(PrevDate,M4Date,0,0);
  MainKeyBegin(MainKey,0);
  KeySegment(Location);
  KeySegment(ItemCode);
  KeyBegin(ItemCode);
  KeySegment(ItemCode);
  KeySegment(Location);
  KeyBegin(LastDate);
  KeySegment(LastDate);
  KeySegment(Location);
  KeySegment(ItemCode);
  EndRecord;
  //  AG 2013-06-05 <<

  //RP - 16-10-2023 Last Purchase Date
  RecordBegin(LastPurchaseDateVc,-,"");
  RecordField(ItemCode,M4Code,20,INVc);
  RecordField(VECode,M4Code,20,VEVc);
  RecordField(LastDate,M4Date,0,0);
  RecordField(PrevDate,M4Date,0,0);
  MainKeyBegin(MainKey,0);
  KeySegment(ItemCode);
  KeyBegin(ItemCode);
  KeySegment(ItemCode);
  KeyBegin(VECode);
  KeySegment(VECode);
  KeySegment(ItemCode);
  KeyBegin(LastDate);
  KeySegment(LastDate);
  KeySegment(ItemCode);
  EndRecord;
  // RP 16-10-2023

  RecordBegin(BrokerVc,-,""); //MDS GREG-9
  RecordField(BrNumber,M4Long,0,0);
  RecordField(BrName,M4Str,200,0);
  MainKeyBegin(BrNumber,0);
  KeySegment(BrNumber);
  KeySegment(BrName);
  // EGO: HAL-761
  KeyBegin(BrName);
  KeySegment(BrName);
  KeySegment(BrNumber);
  // :EGO
  EndRecord;  //:MDS

  BlockBegin(HALGMSStockSetBlock,-,""); // EVS: GREG-17
  BlockInServer;
  RecordField(ShelfLoc1,M4Code,10,LocationVc);
  RecordField(ShelfLoc1Name,M4Str,60,0);
  RecordField(ShelfLoc2,M4Code,10,LocationVc);
  RecordField(ShelfLoc2Name,M4Str,60,0);
  RecordField(SMSentRecFlag,M4Int,0,0);//greg-4; edz
  EndBlock;
  
  BlockBegin(HALGMSGenSetBlock,-,"");//MDS:GREG-9
  RecordField(HALGMSGeCat,M4Str,200,0);//:MDS
  endBlock;

  // RGS: HAL-940
  RecordBegin(ADORQueueVc,-,"");
  RecordField(SerNr,M4Long,0,0);
  RecordField(RegisterCode,M4Str,30,0);
  RecordField(RecordNumber,M4Str,255,0);
  RecordField(Operation,M4Set,900,0);
  RecordField(Status,M4Set,901,0);
  RecordField(CreationDate,M4Date,0,0);
  RecordField(CreationTime,M4Time,0,0);
  RecordField(Math,M4Matrix,0,0);
  ArrayBegin(Math,-,1);
  ArrayField(Operation,M4Set,900,0);
  ArrayField(LogDate,M4Date,0,0);
  ArrayField(LogTime,M4Time,0,0);
  ArrayField(Details,M4Str,255,0);
  EndArray;
  MainKeyBegin(SerNr,0);
  KeySegment(SerNr);
  KeyBegin(RegisterCode);
  KeySegment(RegisterCode);
  KeySegment(SerNr);
  KeyBegin(RecordNumber);
  KeySegment(RecordNumber);
  KeySegment(SerNr);
  KeyBegin(RegCodeNumber);
  KeySegment(RegisterCode);
  KeySegment(RecordNumber);
  KeySegment(SerNr);
  KeyBegin(CreationDate);
  KeySegment(CreationDate);
  KeySegment(SerNr);
  EndRecord;
  //:RGS

  // TM - DESK 5130 
  RecordBegin(ADORInQVc,-,""); //TM 01/09/2018 changed from ADORGRV 
  RecordField(SerNr,M4Long,0,0);
  RecordField(RecordType,M4Str,200,0); //TM - added later 
  RecordField(RecordNr,M4Long,0,0); //TM - Originally PONr
  RecordField(TransDate,M4Date,0,0);
  RecordField(OKFlag,M4Mark,0,0);
  RecordField(Math,M4Matrix,0,0);
  ArrayBegin(Math,-,1);
  ArrayField(ArtCode,M4Code,20,INVc);
  ArrayField(ItemName,M4Str,200,0);
  ArrayField(Qty,M4Int,0,0);
  ArrayField(ADORQty,M4Int,0,0); //TM - Orig GRVQty 
  EndArray;
  MainKeyBegin(SerNr,0);
  KeySegment(SerNr);
  KeyBegin(TransDate);
  KeySegment(TransDate);
  KeySegment(SerNr);
  KeyBegin(RecordType); //TM - Added later 
  KeySegment(RecordType);
  KeySegment(SerNr);
  KeyBegin(RecordNr);
  KeySegment(RecordNr);
  KeySegment(SerNr);
  KeyBegin(OKFlag);
  KeySegment(OKFlag);
  KeySegment(SerNr);
  EndRecord;
  //TM 


   // TM - DESK 5130  - Deliveries 
  RecordBegin(ADORDelVc,-,""); 
  RecordField(SerNr,M4Long,0,0);
  RecordField(RecordType,M4Str,200,0); 
  RecordField(RecordNr,M4Long,0,0); 
  RecordField(TransDate,M4Date,0,0);
  RecordField(OKFlag,M4Mark,0,0);
  RecordField(Math,M4Matrix,0,0);
  ArrayBegin(Math,-,1);
  ArrayField(ArtCode,M4Code,20,INVc);
  ArrayField(ItemName,M4Str,200,0);
  ArrayField(Qty,M4Int,0,0);
  ArrayField(ADORQty,M4Int,0,0); 
  EndArray;
  MainKeyBegin(SerNr,0);
  KeySegment(SerNr);
  KeyBegin(TransDate);
  KeySegment(TransDate);
  KeySegment(SerNr);
  KeyBegin(RecordType); 
  KeySegment(RecordType);
  KeySegment(SerNr);
  KeyBegin(RecordNr);
  KeySegment(RecordNr);
  KeySegment(SerNr);
  KeyBegin(OKFlag);
  KeySegment(OKFlag);
  KeySegment(SerNr);
  EndRecord;
  //TM 

   // TM - DESK 5130  - Goods Receipt 
   
  RecordBegin(ADORGRVc,-,""); 
  RecordField(SerNr,M4Long,0,0);
  RecordField(RecordType,M4Str,200,0); 
  RecordField(RecordNr,M4Long,0,0); 
  RecordField(TransDate,M4Date,0,0);
  RecordField(OKFlag,M4Mark,0,0);
  RecordField(Math,M4Matrix,0,0);
  ArrayBegin(Math,-,1);
  ArrayField(ArtCode,M4Code,20,INVc);
  ArrayField(ItemName,M4Str,200,0);
  ArrayField(Qty,M4Int,0,0);
  ArrayField(ADORQty,M4Int,0,0); 
  EndArray;
  MainKeyBegin(SerNr,0);
  KeySegment(SerNr);
  KeyBegin(TransDate);
  KeySegment(TransDate);
  KeySegment(SerNr);
  KeyBegin(RecordType); 
  KeySegment(RecordType);
  KeySegment(SerNr);
  KeyBegin(RecordNr);
  KeySegment(RecordNr);
  KeySegment(SerNr);
  KeyBegin(OKFlag);
  KeySegment(OKFlag);
  KeySegment(SerNr);
  EndRecord;
  //TM 

  BlockBegin(HALAdorBlock,-,""); // KOS: HAL-491
  RecordField(ADORIntegr,M4Mark,0,0);
  RecordField(ADORHost,M4Str,200,0);
  RecordField(ADORPath,M4Str,200,0);
  RecordField(ADORPort,M4Int,0,0);
  RecordField(ADORClientNo,M4Str,255,0);
  EndBlock;
  
  //TM - Customization for Promotion Prices 
  RecordAddBegin(PLVc,"DCPLVc");
  RecordField(EndDate,M4Date,0,0);
  EndRecordAdd;

      // TM - HALPicVc
  RecordBegin(HALPicVc,-,""); 
  RecordField(ArtCode,M4Code,20,INVc);
  RecordField(AltCode,M4Str,40,0);
  RecordField(GMCode,M4Str,255,0);
  RecordField(ItemName,M4Str,200,0);
  RecordField(Group,M4Code,5,0);
  RecordField(CarGroup,M4Str,200,0); 
  RecordField(PicGroup,M4Str,200,0); 
  MainKeyBegin(ArtCode,0);
  KeySegment(ArtCode);
  KeyBegin(AltCode);
  KeySegment(AltCode);
  KeySegment(ArtCode);
  KeyBegin(GMCode); 
  KeySegment(GMCode);
  KeySegment(ArtCode);
  KeyBegin(ItemName);
  KeySegment(ItemName);
  KeySegment(ArtCode);
  KeyBegin(Group);
  KeySegment(Group);
  KeySegment(ArtCode);
  KeyBegin(CarGroup);
  KeySegment(CarGroup);
  KeySegment(ArtCode);
  KeyBegin(PicGroup);
  KeySegment(PicGroup);
  KeySegment(ArtCode);
  EndRecord;
  //TM 

    // TM - Promotion Prices
  RecordBegin(HALPromPrVc,-,"Promotion Prices");
  RecordField(Code,M4Code,20,0);
  RecordField(Comment,M4Str,60,0);
  RecordField(Active,M4Mark,0,0);
  RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
  //RecordField(InclVAT,M4Int,0,0);
  //RecordField(DepPrice,M4Int,0,0);
  RecordField(StartDate,M4Date,0,0);
  RecordField(EndDate,M4Date,0,0);
  RecordField(PLReplCode,M4Code,20,PLDefVc);
  //RecordField(PLBasedOn,M4Int,0,0);
  //RecordField(VATCode,M4Code,10,VATCodeBlock);
//RecordField(BBVECode,M4Code,20,VEVc);
  //RecordField(BBVarAcc,M4Code,10,AccVc);
  //RecordField(BBGenTrans,M4Int,0,0);
 // RecordField(LengthClass,M4Int,0,0);
 // RecordField(StartTime,M4Time,0,0);
  //RecordField(EndTime,M4Time,0,0);
  RecordField(Math,M4Matrix,0,0);
  ArrayBegin(Math,-,1);
  ArrayField(ItemCode,M4UStr,70,INVc);
  ArrayField(CustCode,M4UStr,70,CUVc);
  ArrayField(FixedPrice,M423Val,0,0);
  //ArrayField(Formula,M4Code,5,0);
  //ArrayField(CodeType,M4Set,14,0);
  //ArrayField(VATCode,M4Code,10,VATCodeBlock);
  //ArrayField(TaxTemplateCode,M4Code,10,TaxTemplateVc);
  EndArray;
  MainKeyBegin(Code,0);
  KeySegment(Code);
  KeyBegin(Comment);
  KeySegment(Comment);
  KeySegment(Code);
  KeyBegin(Active);
  KeySegment(Active);
  KeySegment(Code);
  KeyBegin(StartDate);
  KeySegment(StartDate);
  KeySegment(Code);
  KeyBegin(EndDate);
  KeySegment(EndDate);
  KeySegment(Code);
  KeyBegin(PLReplCode);
  KeySegment(PLReplCode);
  KeySegment(Code);
  EndRecord;
  //TM 

   // TM - Competitor Prices 
  RecordBegin(HALCompPrVc,-,"Competitor Prices");
  RecordField(SerNr,M4Long,0,0);
  RecordField(Desc,M4Str,60,0);
  RecordField(Location,M4Code,10,LocationVc);
  RecordField(User,M4Code,10,UserVc);
  RecordField(Math,M4Matrix,0,0);
  ArrayBegin(Math,-,1);
  ArrayField(ItemCode,M4UStr,70,INVc);
  ArrayField(PLCode,M4Code,20,PLDefVc);
  ArrayField(GregsPrice,M423Val,0,0);
  ArrayField(GregsDate,M4Date,0,0);
  ArrayField(FirstCompPrice,M423Val,0,0);
  ArrayField(FirstCompDate,M4Date,0,0);
  ArrayField(SecCompPrice,M423Val,0,0);
  ArrayField(SecCompDate,M4Date,0,0);
  ArrayField(ThirdCompPrice,M423Val,0,0);
  ArrayField(ThirdCompDate,M4Date,0,0);
  EndArray;
  MainKeyBegin(SerNr,0);
  KeySegment(SerNr);
  KeyBegin(Desc);
  KeySegment(Desc);
  KeySegment(SerNr);
  KeyBegin(Location);
  KeySegment(Location);
  KeySegment(SerNr);
  KeyBegin(User);
  KeySegment(User);
  KeySegment(SerNr);
  EndRecord;
  //TM 

  //DCT
  BlockBegin(RegDeleteDCTBlock,-,"");
  BlockForAllCompanies; // stored in client
  RecordField(flags[0],M4Int,0,0);
  RecordField(flags[1],M4Int,0,0);
  RecordField(flags[2],M4Int,0,0);
  RecordField(flags[3],M4Int,0,0);
  RecordField(flags[4],M4Int,0,0);
  RecordField(flags[5],M4Int,0,0);
  RecordField(flags[6],M4Int,0,0);
  RecordField(flags[7],M4Int,0,0);
  RecordField(flags[8],M4Int,0,0);
  RecordField(flags[9],M4Int,0,0);
  RecordField(flags[10],M4Int,0,0);
  RecordField(flags[11],M4Int,0,0);
  RecordField(flags[12],M4Int,0,0);
  RecordField(flags[13],M4Int,0,0);
  RecordField(flags[14],M4Int,0,0);
  RecordField(flags[15],M4Int,0,0);
  RecordField(flags[16],M4Int,0,0);
  RecordField(flags[17],M4Int,0,0);
  RecordField(flags[18],M4Int,0,0);
  RecordField(flags[19],M4Int,0,0);
  RecordField(flags[20],M4Int,0,0);
  RecordField(flags[21],M4Int,0,0);
  RecordField(flags[22],M4Int,0,0);
  RecordField(flags[23],M4Int,0,0);
  RecordField(flags[24],M4Int,0,0);
  RecordField(flags[25],M4Int,0,0);
  RecordField(flags[26],M4Int,0,0);
  RecordField(flags[27],M4Int,0,0);
  RecordField(flags[28],M4Int,0,0);
  RecordField(flags[29],M4Int,0,0);
  RecordField(flags[30],M4Int,0,0);
  RecordField(flags[31],M4Int,0,0);
  RecordField(flags[32],M4Int,0,0);
  RecordField(flags[33],M4Int,0,0);
  RecordField(flags[34],M4Int,0,0);
  RecordField(flags[35],M4Int,0,0);
  RecordField(flags[36],M4Int,0,0);
  RecordField(flags[37],M4Int,0,0);
  RecordField(flags[38],M4Int,0,0);
  RecordField(flags[39],M4Int,0,0);
  RecordField(flags[40],M4Int,0,0);
  RecordField(flags[41],M4Int,0,0);
  RecordField(flags[42],M4Int,0,0);
  RecordField(flags[43],M4Int,0,0);
  RecordField(flags[44],M4Int,0,0);
  RecordField(flags[45],M4Int,0,0);
  RecordField(flags[46],M4Int,0,0);
  RecordField(flags[47],M4Int,0,0);
  RecordField(flags[48],M4Int,0,0);
  RecordField(flags[49],M4Int,0,0);
  RecordField(flags[50],M4Int,0,0);
  RecordField(flags[51],M4Int,0,0);  
  RecordField(flags[52],M4Int,0,0);
  RecordField(flags[53],M4Int,0,0);
  RecordField(flags[54],M4Int,0,0);
  RecordField(flags[55],M4Int,0,0);
  RecordField(flags[56],M4Int,0,0);
  RecordField(flags[57],M4Int,0,0);
  RecordField(flags[58],M4Int,0,0);
  RecordField(flags[59],M4Int,0,0);
  RecordField(flags[60],M4Int,0,0);
  RecordField(flags[61],M4Int,0,0);
  RecordField(flags[62],M4Int,0,0);
  RecordField(flags[63],M4Int,0,0);
  RecordField(flags[64],M4Int,0,0);
  RecordField(flags[65],M4Int,0,0);
  RecordField(flags[66],M4Int,0,0);
  RecordField(flags[67],M4Int,0,0);
  RecordField(flags[68],M4Int,0,0);
  RecordField(flags[69],M4Int,0,0);
  RecordField(flags[70],M4Int,0,0);
  RecordField(flags[71],M4Int,0,0);
  RecordField(flags[72],M4Int,0,0);
  RecordField(flags[73],M4Int,0,0);
  RecordField(flags[74],M4Int,0,0);
  RecordField(flags[75],M4Int,0,0);
  RecordField(flags[76],M4Int,0,0);
  RecordField(flags[77],M4Int,0,0);
  RecordField(flags[78],M4Int,0,0);
  RecordField(flags[79],M4Int,0,0);
  RecordField(flags[80],M4Int,0,0);
  RecordField(flags[81],M4Int,0,0);
  RecordField(flags[82],M4Int,0,0);
  RecordField(flags[83],M4Int,0,0);
  RecordField(flags[84],M4Int,0,0);
  RecordField(flags[85],M4Int,0,0);
  RecordField(flags[86],M4Int,0,0);
  RecordField(flags[87],M4Int,0,0);
  RecordField(flags[88],M4Int,0,0);
  RecordField(flags[89],M4Int,0,0);
  RecordField(flags[90],M4Int,0,0);
  RecordField(flags[91],M4Int,0,0);
  RecordField(flags[92],M4Int,0,0);
  RecordField(flags[93],M4Int,0,0);
  RecordField(flags[94],M4Int,0,0);
  RecordField(flags[95],M4Int,0,0);
  RecordField(flags[96],M4Int,0,0);
  RecordField(flags[97],M4Int,0,0);
  RecordField(flags[98],M4Int,0,0);
  RecordField(flags[99],M4Int,0,0);
  RecordField(flags[100],M4Int,0,0);
  EndBlock; 
  //END DCT 

  RecordBegin(EngineVc,-,""); 
    RecordField(Code,M4Code,20,EngineVc);
    RecordField(Comment,M4Str,255,0);
    RecordField(EngineSize,M4Str,40,0);
    RecordField(Math,M4Matrix,0,0); 

    ArrayBegin(Math,-,1);
    ArrayField(ArtCode,M4Code,20,INVc);
    ArrayField(Name,M4Str,100,0);
    EndArray;

    MainKeyBegin(Code,0);
    KeySegment(Code);
    KeyBegin(EngineSize);
    KeySegment(EngineSize);
    KeySegment(Code);
  EndRecord;

  BlockBegin(LocalDelDriversWPBlock,-,"");
    RecordField(Host,M4Str,100,0);
    RecordField(ConsumerKey,M4Str,100,0);
    RecordField(ConsumerSecret,M4Str,100,0);
    RecordField(Enable,M4Int,0,0);
    RecordField(LogCommunication,M4Int,0,0);
  EndBlock;

  RecordBegin(BrandVc,-,"");
    RecordField(Code,M4Code,5,0);
    RecordField(Name,M4Str,100,0);

    MainKeyBegin(Code,0);
    KeySegment(Code);
    KeyBegin(Name);
    KeySegment(Name);
    KeySegment(Code);
  EndRecord;

  RecordBegin(INBrandVc,-,""); 
    RecordField(ArtCode,M4Code,20,INVc);
    RecordField(Brand,M4Code,5,BrandVc);
    RecordField(ArticleNo,M4Str,100,0);
    RecordField(UserStr1,M4Str,100,0);
    RecordField(Userstr2,M4Str,100,0);
    RecordField(UserStr3,M4Str,100,0);

    MainKeyBegin(ArtCode,0);
    KeySegment(ArtCode);
    KeyBegin(Brand);
    KeySegment(Brand);
    KeySegment(ArtCode);
    KeyBegin(ArticleNo);
    KeySegment(ArticleNo);
    KeySegment(ArtCode);
  EndRecord;

 // ==================================================  PLEASE ADD STANDARD DATADEF'S ABOVE THE CUSTOM DATADEF'S  ======================================= //  
end;

