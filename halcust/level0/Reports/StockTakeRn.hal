//c83170212
//c80150516
//  VER: 7.1 71120450 (2013-10-13) - AG 2013-11-11 - upgraded
//  VER 6.4 64241500
external procedure FindStockValueAtPosition(string,string,string,var record PISVc);
external function Boolean SetInSet2(string,string);
external procedure PrintItemVarReport(Integer,record INVc,string,string,Integer,Date,Boolean);
external function Boolean FindItemVAR(string,var string,var string,var string,var string);
external procedure GetStockValue(string,string,var record ItemStatusVc);
external procedure HTArtSel(string ,string ,var string);

global
procedure PrintOneBatch(string item,string serialnr,val qp,Boolean firstf)
BEGIN
  record BatchTextVc btr;
  Date bbfd;

  btr.ArtCode = item;
  btr.SerialNr = serialnr;
  if (ReadFirstMain(btr,2,true)) then begin
    bbfd = btr.BestBefore;
  end;
  StartFormat(15);
  if (firstf) then begin
    OutString(11,0,USetStr(5018),false);
  end;
  if (btr.ConsigStock==0) then begin
    OutString(110,0,serialnr,false);
  end else begin
    OutString(110,0,serialnr & " " & "(*)",false);
  end;
  if (nonblankdate(bbfd)) then begin
    OutDate(260,0,bbfd,false);
  end;
  OutVal(360,0,qp,M4UVal,true);
  OutString(480,0,USetStr(2766),true);
  EndFormat;
  RETURN;
END;

procedure PrintSerialNumbers(string item,val qtp,string location)
BEGIN
  record SerBalVc SBr;
  Boolean first,found;
  val q;

  first = true;
//  if (dp->year==BlankM4Date) then begin
  q = 0.00001;
  SBr.Item = item;
  SBr.Location = location;
  found = true;
  while (LoopMain(SBr,2,found)) begin
    if (nonblank(location)) then begin
      if (SBr.Location!=location) then begin
        found = false;
      end;
    end;
    if ((SBr.Item==item) and found) then begin
      if (SBr.Quant>=q) then begin
        if (first) then begin
          Gray_Divider(2,300);
        end;
        PrintOneBatch(item,SBr.Serial,SBr.Quant,first);
        first = false;
      end;
    end;
  end;
  if (first==false) then begin
    Gray_Divider(0,480);
  end;
  RETURN;
END;

//VN Block
global
procedure VNStockTakeRn2(record RcVc RepSpec)
begin
  Record INVc INr;
  Record ItemStatusVc ISr;
  Boolean TrHs;
  Integer vatflag;
  String 50 fromart,toart;
  String 5 frcc,tocc;
  String 50 frinv,toinv;
  String 255 lastcode;
  Boolean first,gotof,printf;
  string 255 ckey;
  string 255 tstr;
  Integer rw;
  string 60 sz,msk,mskrep;
  string 200 varsubset;
  Boolean varf;
  record MinPerLocVc MinLr;//VN

  fromart = FirstInRange(RepSpec.f1,50);
  toart   = LastInRange(RepSpec.f1,50);
  frcc = FirstInRange(RepSpec.f3,5);
  tocc = LastInRange(RepSpec.f3,5);
  frinv = FirstInRange(RepSpec.f2,50);
  toinv   = LastInRange(RepSpec.f2,50);
  vatflag = 0;
  first = true;
  lastcode ="";
  StartReportJob(USetStr(2761));
  rw = 1;
  if nonblank(RepSpec.f1) or nonblank(RepSpec.f3) then begin
  HTArtSel(RepSpec.f1,RepSpec.f3,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  end;
  if (RepSpec.ArtMode==0) then begin
    tstr=USetStr(1187);
  end else begin
    tstr=USetStr(1191);
  end;
  Header(rw,tstr,1);
  rw = rw +1;
  if nonblank(RepSpec.f2) then begin /* Shelf code */
    tstr = USetStr(2769);
    tstr = tstr &  RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw +1;
  end;
  if nonblank(RepSpec.AccStr) then begin /* location */
    tstr = USetStr(2768);
    tstr = tstr & RepSpec.AccStr;
    Header(rw,tstr,1);
    rw = rw +1;
  end;
  EndHeader;
  SetRepCol(2,110);
  SetRepCol(4,440);

  //VN Block
  if(nonblank(RepSpec.f2) and blank(RepSpec.AccStr)) then begin  //VN
    StartFormat(15);
      OutString(0,0,"Specify valid Location",false);
    EndFormat;
    goto LEndRep;
  end;
  //End Block

  StartFormat(15);
  OutString(0,0,USetStr(2767),false);
  OutString(70/*VN Chngd frm 40*/,0,USetStr(2762),false);
  OutString(110,0,USetStr(2763),false);
  OutString(280,0,"Alt. Code",false);//VN
  OutString(350,0,USetStr(2764),false);
  OutString(430,0,USetStr(2765),true);
  EndFormat;
  Gray_Divider(0,1);
  while (LoopMain(MinLr,1,true)) begin
    TrHs = true;
    if(MinLr.ShelfCode < frinv) then begin TrHs = false;   end;
    if(MinLr.ShelfCode > toinv) then begin TrHs = false; end;
    if ((MinLr.Location == RepSpec.AccStr) and (TrHs == true)) then begin
      INr.Code = MinLr.ItemCode;
      if (ReadFirstKey("Code",INr,1,true)) then begin
        if (RepSpec.flags[0]==1) or (RepSpec.flags[2]==1) then begin
          GETSTOCKVALUE(INr.Code,RepSpec.AccStr,ISr);
        end;
        printf = true;
        if (RepSpec.flags[2]==1) then begin
           if (ISr.Instock <= 0) then begin
              printf = false;
           end;
        end;
        if (printf) then begin
          varf = false;
          if (FindItemVAR(INr.Code,sz,msk,mskrep,varsubset)) then begin
            varf = true;
          end;
          if ((varf) and (RepSpec.flags[3])) then begin
            PrintItemVarReport(40,INr,RepSpec.AccStr,RepSpec.LastAcc,1,CurrentDate,true);
          end else begin
            StartFormat(15);
            //if (RepSpec.ArtMode==0) then begin
              OutString(0,0,MinLr.ShelfCode,false);
            //end;
            OutString(70,0,INr.Code,false);
            OutString(110,0,INr.Name,false);
            OutString(280,0,INr.AlternativeCode,false);//VN
            OutString(350,0,INr.Unittext,false);
            if (RepSpec.flags[0]==1) then begin
              OutVal(430,0,ISr.Instock,M4UVal,true);
            end;
            OutString(480,0,USetStr(2766),true);
            EndFormat;
          end;
         if (RepSpec.flags[1]<>0) then begin
           PrintSerialNumbers(INr.Code,ISr.Instock,RepSpec.AccStr);
         end;
        end;
      end;
    end;
  end;
  Gray_Divider(0,1);
  LEndRep:;//VN
  EndJob;
return;
end;

global
procedure VNStockTakeRn(record RcVc RepSpec)
begin
  Record INVc INr;
  Record ItemStatusVc ISr;
  Boolean TrHs;
  Integer vatflag;
  String 50 fromart,toart;
  String 5 frcc,tocc;
  String 50 frinv,toinv;
  String 255 lastcode;
  Boolean first,gotof,printf;
  string 255 ckey;
  string 255 tstr;
  Integer rw;
  string 60 sz,msk,mskrep;
  string 200 varsubset;
  Boolean varf;
  record MinPerLocVc MinLr;//VN

  fromart = FirstInRange(RepSpec.AccStr,50);
  toart   = LastInRange(RepSpec.AccStr,50);
  frcc = FirstInRange(RepSpec.f3,5);
  tocc = LastInRange(RepSpec.f3,5);
  frinv = FirstInRange(RepSpec.f2,50);
  toinv   = LastInRange(RepSpec.f2,50);
  vatflag = 0;
  first = true;
  lastcode ="";
  StartReportJob(USetStr(2761));
  rw = 1;
  if nonblank(RepSpec.f1) or nonblank(RepSpec.f3) then begin
  HTArtSel(RepSpec.f1,RepSpec.f3,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  end;
  if (RepSpec.ArtMode==0) then begin
    tstr=USetStr(1187);
  end else begin
    tstr=USetStr(1191);
  end;
  Header(rw,tstr,1);
  rw = rw +1;
  if nonblank(RepSpec.f2) then begin /* Shelf code */
    tstr = USetStr(2769);
    tstr = tstr &  RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw +1;
  end;
  if nonblank(RepSpec.AccStr) then begin /* location */
    tstr = USetStr(2768);
    tstr = tstr & RepSpec.AccStr;
    Header(rw,tstr,1);
    rw = rw +1;
  end;
  EndHeader;
  SetRepCol(2,110);
  SetRepCol(4,440);
  //VN Block
  if(nonblank(RepSpec.f2) and blank(RepSpec.AccStr)) then begin  //VN
    StartFormat(15);
      OutString(0,0,"Specify valid Location",false);
    EndFormat;
    goto LEndRep;
  end;
  //End Block
  StartFormat(15);
  OutString(0,0,USetStr(2767),false);
  OutString(70/*VN Chngd frm 40*/,0,USetStr(2762),false);
  OutString(110,0,USetStr(2763),false);
  OutString(280,0,"Alt. Code",false);//VN
  OutString(350,0,USetStr(2764),false);
  OutString(430,0,USetStr(2765),true);
  EndFormat;
  MinLr.ShelfCode = frinv;
  ckey = "ShelfCode";
  Gray_Divider(0,1);
  TrHs = true;
  while (LoopKey(ckey,MinLr,1,TrHs)) begin
    gotof = false;
    if (TrHs) then begin
      if nonblank(toinv) then begin
        if ((MinLr.ShelfCode<frinv) or (MinLr.ShelfCode>toinv)) then begin
          gotof = true;
        end;
        if (MinLr.ShelfCode>toinv) then begin
          TrHs = false;
        end;
      end;
    end;
    if ((TrHs) and (gotof == false)) then begin
        if (RepSpec.ArtMode == 1) then begin
          if ((first) or (lastcode<>MinLr.ShelfCode)) then begin
            if (first == false) then begin
              Gray_Divider(0,1);
            end;
            first = false;
            StartFormat(15);
            EndFormat;
            OutString(0,0,MinLr.ShelfCode,false);
            StartFormat(15);
            EndFormat;
            lastcode=MinLr.ShelfCode;
          end;
        end;
      INr.Code = MinLr.ItemCode;
      if (ReadFirstKey("Code",INr,1,true)) then begin
        if (RepSpec.flags[0]==1) or (RepSpec.flags[2]==1) then begin
          GETSTOCKVALUE(INr.Code,RepSpec.AccStr,ISr);
        end;
        printf = true;
        if (RepSpec.flags[2]==1) then begin
           if (ISr.Instock <= 0) then begin
              printf = false;
           end;
        end;
        if (printf) then begin
          varf = false;
          if (FindItemVAR(INr.Code,sz,msk,mskrep,varsubset)) then begin
            varf = true;
          end;
          if ((varf) and (RepSpec.flags[3])) then begin
            PrintItemVarReport(40,INr,RepSpec.AccStr,RepSpec.LastAcc,1,CurrentDate,true);
          end else begin
            StartFormat(15);
            if (RepSpec.ArtMode==0) then begin
              OutString(0,0,MinLr.ShelfCode,false);
            end;
            OutString(70,0,INr.Code,false);
            OutString(110,0,INr.Name,false);
            OutString(280,0,INr.AlternativeCode,false);//VN
            OutString(350,0,INr.Unittext,false);
            if (RepSpec.flags[0]==1) then begin
              OutVal(430,0,ISr.Instock,M4UVal,true);
            end;
            OutString(480,0,USetStr(2766),true);
            EndFormat;
          end;
         if (RepSpec.flags[1]<>0) then begin
           PrintSerialNumbers(INr.Code,ISr.Instock,RepSpec.AccStr);
         end;
        end;
      end;
    end;
  end;
  Gray_Divider(0,1);
  LEndRep:;//VN
  EndJob;
return;
end;

function string 255 FindShelfCode(record INVc INp, record RcVc rp)
begin
  string 255 ShelfCode;
  record MinPerLocVc MinLr;

  MinLr.ItemCode = INp.Code;
  MinLr.Location = rp.AccStr;
  if (ReadFirstMain(MinLr,2,true)) then begin
    ShelfCode = MinLr.ShelfCode;
  end;
  if (Blank(ShelfCode)) then begin
    ShelfCode = INp.InvCode;
  end;

  FindShelfCode = ShelfCode;
  return;
end;
//VN Block End

global
procedure StockTakeRn2(record RcVc RepSpec)
begin
  Record INVc INr;
  Record ItemStatusVc ISr;
  record PISVc PISr;
  Boolean TrHs, TrHs1;
  Integer vatflag;
  String 50 fromart,toart;
  String 5 frcc,tocc;
  String 50 frinv,toinv;
  String 255 lastcode;
  Boolean first,skipf,printf;
  string 255 ckey;
  string 255 tstr;
  Integer rw;
  string 60 sz,msk,mskrep;  
  string 200 varsubset;
  Boolean varf;
  string 255 ShelfCode;//VN
  record LocationVc Locationr;
  boolean loc, place;
    
  TrHs1 = true;
  fromart = FirstInRange(RepSpec.f1,50);
  toart   = LastInRange(RepSpec.f1,50);
  frcc = FirstInRange(RepSpec.f3,5);
  tocc = LastInRange(RepSpec.f3,5);
  frinv = FirstInRange(RepSpec.f2,50);
  toinv   = LastInRange(RepSpec.f2,50);
  vatflag = 0;
  first = true;
  lastcode ="";
  StartReportJob(USetStr(2761));
  rw = 1;
  if nonblank(RepSpec.f1) or nonblank(RepSpec.f3) then begin
  HTArtSel(RepSpec.f1,RepSpec.f3,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  end; 
  if (RepSpec.ArtMode==0) then begin
    tstr=USetStr(1187);
  end else begin
    tstr=USetStr(1191);
  end;
  Header(rw,tstr,1);
  rw = rw +1;
  if nonblank(RepSpec.f2) then begin /* Shelf code */
    tstr = USetStr(2769);
    tstr = tstr &  RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw +1;
  end;
  if nonblank(RepSpec.AccStr) then begin /* location */
    tstr = USetStr(2768);
    tstr = tstr & RepSpec.AccStr;
    Header(rw,tstr,1);
    rw = rw +1;
  end;
  EndHeader;
  SetRepCol(2,110);
  SetRepCol(4,440);
  //VN Block
  if( nonblank(RepSpec.AccStr)) then begin
    place = true;
  end;
  if(nonblank(RepSpec.f2) and blank(RepSpec.AccStr)) then begin  //VN
    StartFormat(15);
      OutString(0,0,"Specify valid Location",false);
    EndFormat;
    goto LEndRep;
  end;
  //End Block
  StartFormat(15);
  if (nonblank(RepSpec.LastAcc)) then begin
    OutString(0,0,USetStr(2779),true);
  end else begin
    if(RepSpec.ArtMode==1) then begin //MDS greg-22
      OutString(0,0,USetStr(2767),false);
    end;
  end;
  OutString(70 /* VN Chngd frm 40 */,0,USetStr(2762),false);
  OutString(110,0,USetStr(2763),false);
  OutString(250,0,USetStr(2764),false);
  OutString(380,0,USetStr(2765),true);
  EndFormat;
  loc = false;
  while (LoopMain(Locationr,1,TrHs1)) begin //MDS GREG-22
    if(blank(RepSpec.AccStr) or loc == true) then begin
      RepSpec.AccStr = Locationr.Code;
      loc = true;
      if(RepSpec.ArtMode==1) then begin
        first = true;
        loc=true;
      end;
    end else begin 
      TrHs1 =false;
    end;

    if (RepSpec.ArtMode==0) then begin
     INr.Code = fromart;
     ckey = "Code";
    end else begin
     INr.InvCode = frinv;
     ckey = "InvCode";
    end;
    TrHs = true;
    ResetLoop(INr);
    while (LoopKey(ckey,INr,1,TrHs)) begin
      skipf = false;
      if (TrHs) then begin
        if (nonblank(RepSpec.f3)) then begin
          if ((INr.Group<frcc) or (INr.Group>tocc)) then begin
            skipf = true;
          end;
        end;
      end;
      if (TrHs) then begin
        if nonblank(RepSpec.f1) then begin
          if (RepSpec.ArtMode==0) then begin
            if nonblank(toart) then begin
              if INr.Code>toart then begin
                TrHs = false;
              end;
            end;
          end else begin
            if ((INr.Code<fromart) or (INr.Code>toart)) then begin
              skipf = true;
            end;
          end;
        end;
      end;
      if (TrHs) then begin
        if nonblank(toinv) then begin
          /*if (RepSpec.ArtMode==0) then begin
            if ((INr.InvCode<frinv) or (INr.InvCode>toinv)) then begin
              skipf = true;
            end;
          end else begin
            if (INr.InvCode>toinv) then begin
              TrHs = false;
            end;
          end; */
        end;
      end;
      if (INr.Terminated<>0) then begin
        skipf = true;
      end;
      if (nonblank(RepSpec.f6)) then begin
        if (SetInSet2(RepSpec.f6,INr.DispGroups)==false) then begin skipf = true; end;
      end;
      if ((TrHs) and (skipf==false)) then begin
        if (INr.ItemType==1) then begin
          if (RepSpec.flags[0]==1) or (RepSpec.flags[2]==1) or (RepSpec.ArtMode == 1) then begin
            if (nonblank(RepSpec.LastAcc)) then begin
              FindStockValueAtPosition(INr.Code,RepSpec.AccStr,RepSpec.LastAcc,PISr);
              ISr.Instock = PISr.Instock;
            end else begin
              GetStockValue(INr.Code,RepSpec.AccStr,ISr);
            end;
          end;
          lastcode=INr.InvCode;
          printf = true;
          if (RepSpec.flags[2]==1) then begin
            if (ISr.Instock<=0) then begin
                printf = false;
            end;
          end;
          if (printf) then begin
            varf = false;
            if (FindItemVAR(INr.Code,sz,msk,mskrep,varsubset)) then begin
              varf = true;
            end;
            if ((varf) and (RepSpec.flags[3])) then begin
              PrintItemVarReport(40,INr,RepSpec.AccStr,RepSpec.LastAcc,1,CurrentDate,true);
            end else begin
              StartFormat(15);
              if (RepSpec.ArtMode == 0) then begin
                if (nonblank(RepSpec.LastAcc)) then begin
                  OutString(0,0,RepSpec.LastAcc,false);
                end else begin
                  OutString(0,0,INr.InvCode,false);
                end;
              end else begin
                ShelfCode = FindShelfCode(INr, RepSpec);
                OutString(0, 0, ShelfCode, false);
              end;
              OutString(70/*VN Chngd frm 40*/,0,INr.Code,false);
              OutString(110,0,INr.Name,false);
              OutString(200,0,INr.AlternativeCode,false);//VN
              OutString(250,0,INr.Unittext,false);
              if (RepSpec.flags[0]==1) then begin
                OutVal(430,0,ISr.Instock,M4UVal,true);
              end;
              OutString(480,0,USetStr(2766),true);
              EndFormat;
              Gray_Divider(0,1); //MDS GREG-22
            end;
            if (RepSpec.flags[1]<>0) then begin
              PrintSerialNumbers(INr.Code,ISr.Instock,RepSpec.AccStr);
            end;//:MDs
          end;
        end;
      end;
    end;
  end; //:MDS 
  Gray_Divider(0,1);
  EndJob;
  return;
end;

//VN Block
global
updating procedure StockTakeRn(record RcVc RepSpec)
begin

  if ((nonblank(RepSpec.f2)) and (nonblank(RepSpec.AccStr))) then begin
    if (RepSpec.ArtMode == 1) then begin
      VNStockTakeRn(RepSpec);
      
    end else begin
      VNStockTakeRn2(RepSpec);
    end;
  end else begin
    StockTakeRn2(RepSpec);
  end;
LSTCompMn:;
  RETURN;
END;
//VN End
