// external function boolean IsINPayPriorityUsed(longint);// external function boolean isINPayPriorityInInvoice(longint);global function LongInt INPayPriorityVcRecordCheck(var record INPayPriorityVc INPayPriorityr,record INPayPriorityVc INPayPriority2r,longint stat,longint b) begin  LongInt res,oldnr;  Row INPayPriorityVc INPayPriorityrw,INPayPriority2rw;  integer i,rwc,a;    res=0;  oldnr = INPayPriorityr.SerNr;  if INPayPriorityr.SerNr<0 then begin    if CountRecords("INPayPriorityVc")==0 then begin      INPayPriorityr.SerNr = 101;    end else begin      INPayPriorityr.SerNr = NextSerNr("INPayPriorityVc",CurrentDate,-1,0,"");    end;  end;  rwc = MatRowCnt(INPayPriorityr);  if INPayPriorityr.INPayType==2 and  rwc==0 then begin    res=-1;    RecordCheckError(1000885,"",-1,"SerNr");    Goto EndINPayPriorityVcRecordCheck;  end;    for(i=0;i<rwc;i=i+1)begin    MatRowGet(INPayPriorityr,i,INPayPriorityrw);    if blank(INPayPriorityrw.ArtCode) and INPayPriorityr.INPayType==2 then begin      res=-1;      RecordCheckError(1058,"",i,"ArtCode");      Goto EndINPayPriorityVcRecordCheck;    end;    if (i!=(rwc-1)) then begin      for(a=(i + 1);a<rwc;a=a+1)begin        MatRowGet(INPayPriorityr,a,INPayPriority2rw);        if INPayPriority2rw.ArtCode == INPayPriorityrw.ArtCode and nonblank(INPayPriorityrw.ArtCode) then begin          res=-1;          RecordCheckError(1545,"",a,"ArtCode");          Goto EndINPayPriorityVcRecordCheck;        end;      end;    end;    if INPayPriorityr.INPayType==2 and INPayPriorityrw.Type==2 then begin      res=-1;      RecordCheckError(1000328,"",i,"Type");      Goto EndINPayPriorityVcRecordCheck;    end;  end;    EndINPayPriorityVcRecordCheck:;  if res!=0 then begin    INPayPriorityr.SerNr = oldnr;  end;  INPayPriorityVcRecordCheck=res;    return;end;globalfunction LongInt INPayPriorityVcRecordRemoveTest(Var Record INPayPriorityVc INPayPriorityr, Record INPayPriorityVc INPayPriority2r, LongInt stat, LongInt check)begin  LongInt res;  Record IPVc IPr;    res = 1;  // if isINPayPriorityInInvoice(INPayPriorityr.SerNr) then begin  //   res=0;  // end;  // if IsINPayPriorityUsed(INPayPriorityr.SerNr) and UserCanAction("OBSChangeUsedINPayPr",false)==false then begin  //   res = 0;  // end;    INPayPriorityVcRecordRemoveTest = res;  return;end;