// ui
event definewindows
begin
  real h,v,vs;
  
  SetLangMode(langEnglish,"SAF",0);
  
  WindowBegin("API Register definitions",JSON_RegDefLClass,CGmlist,-);
  SpawnClass(JSON_RegDefDClass);
  SetWRect(20,80,790,698);
  UseView(JSON_RegDefVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Vc code",Code,false,Code);
  RlCol(154,154,"Block",IsBlock,false);
  RlCol(204,204,"ImportTag",ImportTag,false);
  RlCol(-200,-200,"Import date",ImportDate,false);
  RlCol(-100,-100,"Import time",ImportTime,false);
  SearchField("Mekl•t");
  EndWindow;

  vs = 20;
  WindowBegin("API Register definition",JSON_RegDefDClass,CGview,-);
  UseView(JSON_RegDefVc);
  SetWRect(20,80,1080,900);
  Sizeable(-1,-1,0,0);
  EditField(110,v=6,100,"Vc code",Normal,Code,false,0);
  EditField(290,v,100,"ImportTag",Normal,ImportTag,false,0);
  EditField(455,v,100,"MainKey",Normal,MainKey,false,0);
  EditField(-280,v,80,"Import date",ViewOnly,ImportDate,false,0);
  EditField(-100,v,60,"Import time",ViewOnly,ImportTime,false,0);
  CheckBox(-380,v+24,0,"Block",IsBlock);
  CheckBox(-270,v+24,0,"Export attachments",ShowAttachments);
  CheckBox(-380,v+50,0,"View attachments",DownloadAttachments);
  CheckBox(-270,v+50,0,"Add attachments",UploadAttachments);
  CheckBox(-140,v+50,0,"Delete attachments",RemoveAttachments);
  StaticText(30,v+=vs*2,"Support variable names, comma-separated (no string lengths)",false);
  EditField(110,v+=5,350,"Simple",Normal,SuppVarSimpleTypes,false,0);
  EditField(110,v+=vs,350,"Arrays",Normal,SuppVarArrayTypes,false,0);
  EditField(110,v+=vs,350,"Vectors",Normal,SuppVarVectorTypes,false,0);
  StaticText(30,v+=vs*2,"Fields:",false);
  MatrixBegin(27,150,-41,-20,-,500);
  MatCol(1,24,"Name",0,FieldName,false,0);
  MatCol(1,h=150,"Type",0,FieldType,false,0);
  MatCol(1,h+=80,"Length",0,FieldLength,false,0);
  MatCol(1,h+=80,"Location",0,HeaderMatrixFlag,false,SetSClass);
  MatCol(1,h+=80,"In list",0,ShowInList,false,SetSClass);
  MatCol(1,h+=80,"In full",0,ShowInFull,false,SetSClass);
  MatCol(1,h+=80,"Filter by",0,UseInFilter,false,SetSClass);
  MatCol(1,h+=120,"Index names",0,KeyNames,false,0);
  MatCol(1,h+=120,"Index names",0,KeyNames2,false,0);
  MatCol(1,h+=120,"Index names",0,KeyNames3,false,0);
  EndMatrix;
  SpecialMenu("Generate JSON read API",'G',5,"JSONGenInterfaceDsm");
  SpecialMenu("Generate JSON write API",'g',5,"XMLGenInterfaceDsm");
  SpecialMenu("Generate JSON main API",'c',5,"JSONGenInterfaceCallersDsm");
  EndWindow;

  return;
end;

window HALAdorTClass:1 // KOS: HAL-491
  wtag("language","SAF"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vb;

  h = 80;
  v = 10;
  vs = 21;
  vb = 16;

  WindowBegin("ADOR Integration",HALAdorTClass,CGSbl,-);
  SetWRect(20,80,466,411);
  Sizeable(-1,-1,0,0);
  SetBLID(HALAdorBlock);
  CheckBox(h,v,0,"Enable Ador Integration",ADORIntegr);
  EditField(h+=vb*3,v+=vs,180,"API Hostname",Normal,ADORHost,false,0);
  EditField(h,v+=vs,180,"API Path",Normal,ADORPath,false,0);
  EditField(h,v+=vs,180,"API Port",Normal,ADORPort,false,0);
  EditField(h,v+=vs,180,"ADOR Client No.",Normal,ADORClientNo,false,0);
  EndWindow;

end;