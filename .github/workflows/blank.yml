name: Deploy to Server

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  SSH_PORT: 22
  SERVER_IP: 172.21.56.243
  SERVER_USER: f
  APP_DIR: u1/StandardERPServer/
  APP_CMD: ./StandardERPServer64 --port 1201 --webport 1301 --stop journaling
  MAX_RETRIES: 5
  RETRY_DELAY: 10

jobs:
  deploy:
    runs-on: self-hosted
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Updated to latest version

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.T}}

      - name: Validate server connection
        run: ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "echo 'Successfully connected to server'"

      - name: Pull latest changes
        run: |
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
            set -e
            cd $APP_DIR
            git fetch origin
            git reset --hard origin/main
          " 

          - name: Stop existing server
          run: |
            ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
              set -x
              echo 'Running processes:'
              ps aux | grep StandardERPServer64 || true
              echo 'Attempting to stop server...'
              PIDS=\$(pgrep -f 'StandardERPServer64.*--port 1201')
              if [ -n \"\$PIDS\" ]; then
                echo \"Found PIDs: \$PIDS\"
                kill \$PIDS
                sleep 5
                for PID in \$PIDS; do
                  if ps -p \$PID > /dev/null; then
                    echo \"Force killing PID \$PID...\"
                    kill -9 \$PID
                  fi
                done
              else
                echo 'No running process found'
              fi
            "
        
      - name: Start server
        run: |
            ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
              set -e
              cd $APP_DIR
              nohup $APP_CMD > hal.log 2>&1 &
              echo 'Server start command executed - waiting for initialization...'
            "
        
      - name: Check server log
        run: |
            ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "tail -n 20 $APP_DIR/hal.log"
        
      - name: Verify server status
        run: |
            sleep 60
            ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
              echo 'Listing all StandardERPServer64 processes:'
              ps aux | grep StandardERPServer64 | grep -v grep || true
              echo 'Checking if port 1201 is listening:'
              if ss -tln | grep -q ':1201 '; then
                echo 'Server is listening on port 1201'
              else
                echo 'Server is not listening on port 1201'
                exit 1
              fi
            " || {
              echo "::error::Server validation failed"
              exit 1
            }
            echo "Server verified as running"


      - name: Capture failure logs
        if: failure()
        run: |
          echo "::group::=== FULL ERROR LOGS ==="
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "cat $APP_DIR/hal.log"
          echo "::endgroup::"
          
          echo "::error::=== ERROR HIGHLIGHTS ==="
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
          grep -i -B
      
      - name: Rollback on failure
        if: failure()
        run: |
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
            set -e
            cd $APP_DIR
            echo 'Rolling back to previous version...'
            git reset --hard HEAD@{1}
            
            # Kill current instance if different from original
            if [ -n \"$PRE_DEPLOYMENT_PID\" ] && ! ps -p \"$PRE_DEPLOYMENT_PID\" > /dev/null; then
              echo 'Restarting previous version...'
              nohup $APP_CMD > hal.log 2>&1 &
            fi
          "
          echo "::warning::Rollback to previous version completed"