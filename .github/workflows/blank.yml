name: PR Validation & Deployment

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  SSH_PORT: 22
  SERVER_IP: 172.21.56.243
  SERVER_USER: f
  APP_DIR: u1/StandardERPServer/
  APP_CMD: ./StandardERPServer64 --port 1201 --webport 1301 --stop journaling
  MAX_RETRIES: 5
  RETRY_DELAY: 10

jobs:
  validate-merge:
    runs-on: self-hosted
    timeout-minutes: 20

    steps:
      - name: Checkout feature branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.T }}

      - name: Validate server connection
        run: ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "echo 'Connected to server'"

      - name: Capture main branch state
        run: |
          MAIN_COMMIT=$(ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP \
            "cd $APP_DIR && git rev-parse main")
          echo "MAIN_COMMIT=$MAIN_COMMIT" >> $GITHUB_ENV

      - name: Deploy feature branch
        run: |
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
            set -e
            cd $APP_DIR
            git fetch origin ${{ github.head_ref }}
            git checkout -f ${{ github.head_ref }}
          "

      - name: Restart server with feature code
        run: |
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
            cd $APP_DIR
            pkill -f '$APP_CMD' || true
            nohup $APP_CMD > feature-test.log 2>&1 &
          "

      - name: Validate deployment
        run: |
          sleep 60  # Initialization period
          
          # Check server status
          PID=$(ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP \
            "pgrep -f '$APP_CMD' || echo ''")
          
          if [ -z "$PID" ]; then
            echo "::error::Server failed to start"
            exit 1
          fi

          # Additional health checks can be added here

      - name: Rollback to main on failure
        if: failure()
        run: |
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
            cd $APP_DIR
            git reset --hard ${{ env.MAIN_COMMIT }}
            pkill -f '$APP_CMD' || true
            nohup $APP_CMD > main.log 2>&1 &
          "
          echo "::error::Rolled back to main commit ${{ env.MAIN_COMMIT }}"

  final-merge:
    needs: validate-merge
    runs-on: ubuntu-latest
    steps:
      - name: Merge PR
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: 'merge'
            })