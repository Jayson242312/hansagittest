name: Test Deployment on PR

on:
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

env:
  SSH_PORT: 22
  SERVER_IP: 172.21.56.243
  SERVER_USER: f
  APP_DIR: u1/StandardERPServer/
  APP_CMD: ./StandardERPServer64 --port 1201 --webport 1301 --stop journaling
  MAX_RETRIES: 5
  RETRY_DELAY: 10

jobs:
  test-deploy:
    runs-on: self-hosted
    timeout-minutes: 15

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.T }}

      - name: Validate server connection
        run: ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "echo 'Successfully connected to server'"

      - name: Force update to test branch
        run: |
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
            set -e
            cd $APP_DIR
            git fetch origin
            git reset --hard origin/${{ github.head_ref }}
          "

      - name: Stop existing server
        run: |
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
            set -x
            PID=\$(pgrep -f '.\StandardERPServer64.*--port 1201' | head -1)
            if [ -n \"\$PID\" ]; then
              kill \$PID
              sleep 5
              if ps -p \$PID > /dev/null; then
                kill -9 \$PID
              fi
            fi
          "

      - name: Start server
        run: |
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
            cd $APP_DIR
            nohup $APP_CMD > hansa.log 2>&1 &
            echo 'Server start command executed'
          "

      - name: Wait and check server log
        run: |
          sleep 60
          ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "tail -n 20 $APP_DIR/hansa.log"

      - name: Verify server status
        run: |          
          PID=$(ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
            pgrep -f '$(printf "%q" "$APP_CMD")'
          " | tr -d '\n')
          echo "Raw PID detected: '$PID'"
          if ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
            if [ -z \"$PID\" ]; then 
              echo 'No PID found'; exit 1; 
            elif ! ps -p \"$PID\" >/dev/null; then 
              echo 'PID $PID not running'; exit 1;
            elif ! grep -qF \"\$APP_CMD\" /proc/$PID/cmdline 2>/dev/null; then
              echo 'PID $PID command mismatch'; exit 1;
            fi
          "; then
            echo "Server verified as running"
          else
            exit 1
          fi


      - name: Install GitHub CLI
        if: success()
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
      - name: Auto Merge PR (if successful)
        if: success()
        run: |
          echo "Merging PR automatically..."
          # Example using GitHub CLI (gh) -- ensure it's installed on your runner
          gh pr merge ${{ github.event.pull_request.number }} --merge --admin --delete-branch